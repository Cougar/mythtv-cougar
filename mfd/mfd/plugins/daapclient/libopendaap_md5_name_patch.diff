diff -u libopendaap-0.1.1_orig/authentication/hasher.c ./libopendaap-0.1.1/authentication/hasher.c
--- libopendaap-0.1.1_orig/authentication/hasher.c	2004-02-28 07:10:33.000000000 -0500
+++ ./libopendaap-0.1.1/authentication/hasher.c	2004-02-29 19:36:05.000000000 -0500
@@ -56,9 +56,9 @@
 
         for (i = 0; i < 256; i++)
         {
-            MD5Init(&ctx);
+            OpenDaap_MD5Init(&ctx);
 
-#define MD5_STRUPDATE(str) MD5Update(&ctx, str, strlen(str))
+#define MD5_STRUPDATE(str) OpenDaap_MD5Update(&ctx, str, strlen(str))
 
             if ((i & 0x80) != 0)
                 MD5_STRUPDATE("Accept-Language");
@@ -101,21 +101,21 @@
                 MD5_STRUPDATE("content-codes");
 #undef MD5_STRUPDATE
 
-            MD5Final(&ctx, buf);
+            OpenDaap_MD5Final(&ctx, buf);
             DigestToString(buf, p);
             p += 65;
         }
         staticHashDone = 1;
     }
 
-    MD5Init(&ctx);
+    OpenDaap_MD5Init(&ctx);
 
-    MD5Update(&ctx, url, strlen(url));
-    MD5Update(&ctx, appleCopyright, strlen(appleCopyright));
+    OpenDaap_MD5Update(&ctx, url, strlen(url));
+    OpenDaap_MD5Update(&ctx, appleCopyright, strlen(appleCopyright));
 
-    MD5Update(&ctx, &staticHash[hashSelect * 65], 32);
+    OpenDaap_MD5Update(&ctx, &staticHash[hashSelect * 65], 32);
 
-    MD5Final(&ctx, buf);
+    OpenDaap_MD5Final(&ctx, buf);
     DigestToString(buf, outhash);
 }
 
diff -u libopendaap-0.1.1_orig/authentication/md5.c ./libopendaap-0.1.1/authentication/md5.c
--- libopendaap-0.1.1_orig/authentication/md5.c	2004-02-28 07:10:53.000000000 -0500
+++ ./libopendaap-0.1.1/authentication/md5.c	2004-02-29 19:27:55.000000000 -0500
@@ -39,10 +39,10 @@
 * except that you don't need to include two pages of legalese
 * with every copy.
 *
-* To compute the message digest of a chunk of bytes, declare an
-* MD5Context structure, pass it to MD5Init, call MD5Update as
-* needed on buffers full of bytes, and then call MD5Final, which
-* will fill a supplied 16-byte array with the digest.
+* To compute the message digest of a chunk of bytes, declare an MD5Context
+* structure, pass it to OpenDaap_MD5Init, call OpenDaap_MD5Update as needed
+* on buffers full of bytes, and then call OpenDaap_MD5Final, which will fill
+* a supplied 16-byte array with the digest.
 */
 static void MD5Transform(u_int32_t buf[4], u_int32_t const in[16]);
 #ifndef WORDS_BIGENDIAN /* was: HIGHFIRST */
@@ -68,7 +68,7 @@
 #endif
 
 
-void MD5Init(MD5_CTX *ctx)
+void OpenDaap_MD5Init(MD5_CTX *ctx)
 {
     ctx->buf[0] = 0x67452301;
     ctx->buf[1] = 0xefcdab89;
@@ -79,7 +79,7 @@
     ctx->bits[1] = 0;
 }
 
-void MD5Update(MD5_CTX *ctx, unsigned char const *buf, unsigned int len)
+void OpenDaap_MD5Update(MD5_CTX *ctx, unsigned char const *buf, unsigned int len)
 {
     u_int32_t t;
 
@@ -123,7 +123,7 @@
     memcpy(ctx->in, buf, len);
 }
 
-void MD5Final(MD5_CTX *ctx, unsigned char digest[16])
+void OpenDaap_MD5Final(MD5_CTX *ctx, unsigned char digest[16])
 {
     unsigned count;
     unsigned char *p;
@@ -179,9 +179,9 @@
 ( w += f(x, y, z) + data,  w = w<<s | w>>(32-s),  w += x )
 
 /*
-* The core of the MD5 algorithm, this alters an existing MD5 hash to
-* reflect the addition of 16 longwords of new data.  MD5Update blocks
-* the data and converts bytes into longwords for this routine.
+* The core of the MD5 algorithm, this alters an existing MD5 hash to reflect
+* the addition of 16 longwords of new data.  OpenDaap_MD5Update blocks the
+* data and converts bytes into longwords for this routine.
 */
 static void MD5Transform(u_int32_t buf[4], u_int32_t const in[16])
 {
diff -u libopendaap-0.1.1_orig/authentication/md5.h ./libopendaap-0.1.1/authentication/md5.h
--- libopendaap-0.1.1_orig/authentication/md5.h	2004-02-23 09:54:25.000000000 -0500
+++ ./libopendaap-0.1.1/authentication/md5.h	2004-02-29 19:25:22.000000000 -0500
@@ -9,8 +9,8 @@
     unsigned char in[64];
 } MD5_CTX;
 
-void MD5Init(MD5_CTX *);
-void MD5Update(MD5_CTX *, const unsigned char *, unsigned int);
-void MD5Final(MD5_CTX *, unsigned char digest[16]);
+void OpenDaap_MD5Init(MD5_CTX *);
+void OpenDaap_MD5Update(MD5_CTX *, const unsigned char *, unsigned int);
+void OpenDaap_MD5Final(MD5_CTX *, unsigned char digest[16]);
 
 #endif /* __WINE_MD5_H__ */
