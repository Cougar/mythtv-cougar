#!/bin/sh
#
# Configure script for mytharchive
#

# 
#    default parameters
#

prefix="/usr/local"

cc="gcc"

archive="yes"

createdvd="yes"
createarchive="yes"
encodevideo="no"

if test x"$1" = x"-h" -o x"$1" = x"--help" ; then
cat << EOF

Usage:   configure [options]
Options: [defaults in brackets after descriptions]
NB:      all --enable-* options can be reversed with --disable-*

Generic options:
  --prefix=PREFIX          MythTV install location PREFIX [$prefix]"
  --libdir-name=LIBNAME    install/look for libs in PREFIX/LIBNAME [$libdir_name]"
  --help                   print this message
  --previous               use previous configure parameters if possible

MythArchive related options:
  --enable-mytharchive     build the mytharchive plugin [$archive]
  --enable-create-dvd      enable dvd creation [$createdvd]
  --enable-create-archive  enable native archive creation [$createarchive]

EOF
exit 1
fi

if [ -e config.log ] ; then
    PCONF=`cat config.log | tail -n 1 | grep configure`
    if test x"$PCONF" != x"" ; then
        PCONF=`echo $PCONF | sed 's/.\/configure//g'`
    fi
    for opt do
        if test x"$opt" = x"--prev" -o x"$opt" = x"--previous" ; then
            if test x"$PCONF" != "--prev" ; then
                echo "Options: $PCONF"
                ./configure $PCONF
                exit
            fi
        fi
    done
fi

CONFIGURATION_OPTS=""
for opt do
  CONFIGURATION_OPTS="$CONFIGURATION_OPTS ""$opt"
done

date >> config.log
echo "   $0$CONFIGURATION_OPTS" >> config.log

for opt do
  case "$opt" in
  --prefix=*) prefix=`echo $opt | cut -d '=' -f 2`
  ;;
  --libdir-name=*) libdir_name=`echo $opt | cut -d '=' -f 2`;
  ;;
  --enable-mytharchive) archive="yes"
  ;;
  --disable-mytharchive) archive="no"
  ;;
  --enable-create-dvd) createdvd="yes"
  ;;
  --disable-create-dvd) createdvd="no"
  ;;
  --enable-create-archive) createarchive="yes"
  ;;
  --disable-create-archive) createarchive="no"
  ;;
  --enable-encode-video) encodevideo="yes"
  ;;
  --disable-encode-video) encodevideo="no"
  esac
done

# set temporary file name
if test ! -z "$TMPDIR" ; then
    TMPDIR1="${TMPDIR}"
elif test ! -z "$TEMPDIR" ; then
    TMPDIR1="${TEMPDIR}"
else
    TMPDIR1="/tmp"
fi

TMPC="${TMPDIR1}/myth-comp-${RANDOM}-$$-${RANDOM}.c"
TMPE="${TMPDIR1}/myth-conf-${RANDOM}-$$-${RANDOM}"

has_library()
{
    if test -f /etc/ld.so.conf ; then
        LIBPATHS=`cat /etc/ld.so.conf | grep -v "#" | grep -v "include"`
    else
        LIBPATHS=''
    fi

    LIBPATHS="$LIBPATHS `echo $LD_LIBRARY_PATH | sed s/':'/' '/g` "
    # Mac OS X has a different variable for this:
    LIBPATHS="$LIBPATHS `echo $DYLD_LIBRARY_PATH | sed s/':'/' '/g` "

    # recurse down just one level, should be enough in most cases
    if test -f /etc/ld.so.conf ; then
        INCL=`cat /etc/ld.so.conf | grep -v "#" | grep  "^include"`
        SRCH=`echo $INCL | sed s/"^include "//g`
        for x in $SRCH ; do
            LP_APPEND=`cat /etc/$x | grep -v "#" | grep -v "^include"`
            LIBPATHS="$LIBPATHS $LP_APPEND"
        done
    fi

    LIBPATHS="`echo $LIBPATHS $prefix/$libdir_name /$libdir_name /usr/$libdir_name /usr/local/$libdir_name /usr/X11R6/$libdir_name | sed s/'\/ '/' '/g` "

    HAS_IT="no"
    for LIBPATH in $LIBPATHS ; do
        if test x`ls $LIBPATH/$1* 2> /dev/null | head -n 1` != x"" ; then
            HAS_IT="yes"
        fi
    done
    expr $HAS_IT : "yes" > /dev/null
}

has_header()
{
    HPATHS="$prefix/include /usr/local/include /usr/include /usr/include/g++-v3 /usr/X11R6/include /usr/kde/3.3/include /"
    INCL=`echo $DYLD_LIBRARY_PATH $LD_LIBRARY_PATH | sed s/':'/' '/g`
    HPATHS="$HPATHS `echo $INCL | sed s/$libdir_name/include/g` "

    HAS_IT="no"
    for HPATH in $HPATHS ; do
        if test x`ls $HPATH/$1* 2> /dev/null | head -n 1` != x"" ; then
            HAS_IT="yes"
        fi
    done
    expr $HAS_IT : "yes" > /dev/null
}


cat > $TMPC << EOF
#include <stdint.h>
int main( void ) { return 0; }
EOF

_stdint_h=no
if $cc -o $TMPE $TMPC 2> /dev/null ; then
  _stdint_h=yes
fi

rm -f $TMPC $TMPE

# bring in mythtv config
rm mythconfig.mak 2> /dev/null
ln -s $prefix/include/mythtv/mythconfig.mak mythconfig.mak

if test "$archive" = "yes" ; then
  echo "        MythArchive    plugin will be built"
#  echo "SUBDIRS += mytharchive" >> ./config.pro
else
  echo "        MythArchive    plugin will not be built"
fi

###########################################################
#                                                         #
#   MythArchive related configuration options             #
#                                                         #
###########################################################

#FIXME make sure paths are correct when this is moved to mythplugins

if test "$archive" = "yes" ; then

    echo "/*" >  ./mytharchive/config.h
    echo "    Automatically generated by configure - do not modify" >> ./mytharchive/config.h
    echo "*/" >> ./mytharchive/config.h

    echo "#" > ./mytharchive/config.pro
    echo "#    Automatically generated by configure - modify only under penalty of death" >> ./mytharchive/config.pro
    echo "#" >> ./mytharchive/config.pro

    if test "$createdvd" = "yes" ; then
        echo "        DVD creation   support will be included in MythArchive"
        echo "#define CREATE_DVD 1" >> ./mytharchive/config.h
        echo "CONFIG += createdvd" >> ./mytharchive/config.pro
    fi

    if test "$createdvd" = "no" ; then
        echo "        DVD creation   support will not be included in MythArchive"
    fi

    if test "$createarchive" = "yes" ; then
        echo "        Native Archive support will be included in MythArchive"
        echo "#define CREATE_NATIVE 1" >> ./mytharchive/config.h
        echo "CONFIG += createnative" >> ./mytharchive/config.pro
    fi

    if test "$createarchive" = "no" ; then
        echo "        Native Archive support will not be included in MythArchive"
    fi

#    if test "$encodevideo" = "yes" ; then
#        echo "        Video re-encoding support will be included in MythArchive"
#        echo "#define ENCODE_VIDEO 1" >> ./mytharchive/config.h
#        echo "CONFIG += encodevideo" >> ./mytharchive/config.pro
#    fi

#    if test "$encodevideo" = "no" ; then
#        echo "        Video re-encoding support will not be included in MythArchive"
#    fi
fi

echo ""

qmake mytharchive.pro
