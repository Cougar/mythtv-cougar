                                  MythGallery
			         Release 0.13


There'll be more information here later, but for now:

BUILD/CONFIGURATION INSTRUCTIONS
--------------------------------

First, you need MythTV to be installed.  At the very least, you need MythTV's
database stuff setup properly.  If you don't have that done, don't even bother
with this, as it won't work.

You don't need any other software installed.  MythGallery uses Qt's internal
image handling routines for basically everything.

Ok, on to compiling. Just type 'qmake mythgallery.pro' then 'make' in the 
main distribution directory.

Compiling note:  If you get an error on building this, that says something
                 about 'mkspecs', then you don't have the QTDIR environment
                 variable set.  On debian, this should be set to /usr/share/qt.
                 I hear on mandrake, it's /usr/lib/qt3.  You'll need to figure
                 out what it should be on your system, set the variable,
                 and attempt to compile again.

If you get any errors about missing references, etc, you most likely don't have
one of the required pieces of software installed.

Follow this by a 'make install'.  It'll put a 'libmythgallery.so' plugin in your
/usr/local/lib/mythtv/plugins directory.

MythGallery will also read the mysql.txt settings files used by
MythTV, so any changes you made to those will be carried over into this.

After compiling and installing, you will need to enter the setup menu from
mythfrontend to configure mythgallery; change the directory parameter to
where you're storing your pictures.

This should be really simple to use -- just browse around with the arrow keys
and select images/directories to view with the space/enter keys.  Escape backs 
out a level, and hitting 'p' while viewing a single image or while
an image icon is highlighted will start a slideshow playback of all images 
in that directory.  Image rotation can be done by pressing the [ and ] keys.

When 'i' is pressed, each item in the import directory search path will be
examined.  If the item is a directory, its contents will be recursively
copied to a new directory whose name is the current date and time.  Using this
method, removable devices can be put in the search path if they use an
automount system (see the Linux documentation for info on how to use automount
systems).  If the item is an executable file, it will be executed with 1
argument consisting of the name of the new subdirectory.  This way, import from
a removable device can be accomplished without the use of an automount system.

Feel free to subscribe to the development mailing list at:
http://www.mythtv.org/mailman/listinfo/mythtv-dev

A list that's restricted to the CVS commit messages is available at:
http://www.mythtv.org/mailman/listinfo/mythtv-commits

or, just email me directly:  Isaac Richards <ijr@po.cwru.edu>
