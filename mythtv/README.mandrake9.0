  Installing mythtv
  Robert Kulagowski,  <mailto:rkulagow@rocketmail.com>
  2002-11-08, v1.02
  ____________________________________________________________

  Table of Contents


  1. Introduction.
  2. Checking prerequisites.
     2.1 Graphical installation tools.
     2.2 Command-line installation.

  3. Setting up paths and ldconfig.
  4. Downloading and compiling.
     4.1 Building LAME.
     4.2 Building XMLTV.
     4.3 Building mythtv.

  5. Setting up alsa and the mixer.
     5.1 Graphically setting up the mixer.
     5.2 Setting the mixer from the command line.

  6. Setting up a remote control.
     6.1 Obtaining the kernel.
     6.2 Obtaining and compiling lirc.
     6.3 Additional information for lirc.


  ______________________________________________________________________

  1.  Introduction.

  Initially, installation of mythtv seems like a huge task.  There are
  lots of dependencies, and various distributions seem to do the same
  thing different ways.  This document will attempt to give general
  installation instructions, as well as including distribution-specific
  instructions where necessary.

  This HOWTO document will focus on mythtv in a North America
  environment using KDE on Mandrake 9.0.  Send installation instructions
  for other distributions and regions to the author fon inclusion in
  other versions of this document.


  Installation of mythtv on Mandrake 9.0 is made fairly simple since a
  lot of the prerequisites are already packaged.


  2.  Checking prerequisites.

  There are a few ways of installing programs on Mandrake; you can
  either use the graphical tools, or the command-line utility "urpmi".

  In order to compile mythtv, we need to make sure that the software it
  needs is installed.  As of 2002-11-08, this list includes perl-5.8,
  mysql, gcc, freetype2-devel and qt-devel.  If you're going to use a
  remote control with mythtv, you're going to need the cdialog package
  in order to compile lircd.


  2.1.  Graphical installation tools.

  One tool which will allow you to see what packages are available and
  if they're installed on your system can be accessed by clicking
  K->Configuration->Packaging->KPackage
  There are many inter-related modules, so make sure that you've got the
  main package for each one, and not a sub package for an unrelated
  item.  For example, there are many modules that have "perl" in them;
  some are a part of the apache webserver, others are a part of the perl
  distribution.  In each case, we're looking to make sure that the
  primary module is getting installed.

  Click the magnifying glass or press CTRL-F and enter "perl" as your
  search term.  You should find it under the "Perl" folder.  You need at
  least the perl 5.80 base package installed.  If not, click on the
  "Mark" button.

  Next, search for mysql - it should be under "Databases".  Make sure
  that mysql and mysql-clients are installed.  If not, click on "Mark".

  Search for gcc.  You're going to need gcc and gcc-c++ installed.

  Search for freetype2.  Make sure that you've got freetype2 and
  freetype2-devel installed.

  Finally, check for qt.  You'll need libqt3-devel (under folder "KDE
  and Qt") and libqt3 ("Libraries").

  Make sure that cdialog is installed if you want to use mythtv with a
  remote control.

  alsa-utils is needed for setting the volume.

  If you marked anything to install, click on Install Marked.  Click
  "Yes" or OK if you get a message about satisfying dependencies.


  2.2.  Command-line installation.

  The simplest tool for installing packages from the command line is
  urpmi.

  Open a shell, and execute the following, all on the same line:


       % su -
       # urpmi perl-5.8 mysql gcc gcc-c++ freetype2-devel libqt3-devel cdialog
       alsa-utils



  You may get asked a number of questions regarding dependencies.  It's
  best to answer "YES".

  However, you might get this when you execute the command above:


       [root@pvr root]# urpmi perl-5.8 mysql gcc gcc-c++
       freetype2-devel libqt3-devel cdialog
       everything already installed



  In that case, you're ready to move onto the next step.



  3.  Setting up paths and ldconfig.

  There are some paths that need to be modified before starting the main
  compile of mythtv, otherwise you will get errors.

  As root, create the following file in /etc/profile.d.  On my system I
  call it "mythtv.sh".

  Open a shell, and switch to superuser mode.  NOTE: ^D means press CTRL
  and d at the same time.



       % su -
       # cd /etc/profile.d
       cat > mythtv.sh
       export QTDIR=/usr/lib/qt3
       export PATH=$PATH:/usr/lib/qt3/bin
       ^D

       # chmod a+x mythtv.sh
       # exit
       % exit



  The last two commands are to exit out of the shell.  This way, when
  you next open a shell your new commands will take effect.

  Open a shell and switch to superuser mode again.


       % su -
       # set

       [lots of text]
       QTDIR=/usr/lib/qt3
       PATH=/usr/local/bin:/bin:/usr/bin:/usr/X11R6/bin:/usr/games:/usr/lib/qt3/bin:/home/mythtv/bin:/usr/lib/qt3/bin



  You should see QTDIR and the path changes you made.

  Next, we need to make sure that the libraries that we're building will
  be found when we need them.

  Switch to /etc and execute the following:


       # cd /etc
       # cat >> ld.so.conf
       /usr/local/lib
       ^D

       # ldconfig
       # exit
       %



  4.  Downloading and compiling.

  Get mythtv from the mythtv.org <http://www.mythtv.org> website.  Save
  the tarball to a directory you can find.

  Get XMLTV from http://xmltv.sourceforge.net
  <http://xmltv.sourceforge.net>.  Download version 0.5.2

  Get lame from http://www.mp3dev.org/mp3 <http://www.mp3dev.org/mp3>.
  Download the sourcecode to v3.92 by following the links to
  sourceforge.net


  4.1.  Building LAME.

  Open a shell and switch to the directory where you saved lame.


       % tar -xzf lame-3.92.tar.gz
       % cd lame-3.92
       % ./configure
       % make
       % su -



  Switch to the directory where you unpacked lame


       # cd /home/[yourusername]/lame-3.92
       # make install



  Check that it worked:


       # ls -l /usr/local/lib
       -rw-r--r--    1 root     root       381706 Nov  4 14:22 libmp3lame.a
       -rwxr-xr-x    1 root     root          674 Nov  4 14:22 libmp3lame.la*
       lrwxrwxrwx    1 root     root           19 Nov  4 14:22 libmp3lame.so ->
       libmp3lame.so.0.0.0*
       lrwxrwxrwx    1 root     root           19 Nov  4 14:22 libmp3lame.so.0 ->
       libmp3lame.so.0.0.0*
       -rwxr-xr-x    1 root     root       360197 Nov  4 14:22
       libmp3lame.so.0.0.0*

       # exit
       %



  4.2.  Building XMLTV.

  Untar the xmltv file:


       % tar -xjf xmltv-0.5.2.tar.bz2
       % cd xmltv-0.5.2



  Install the xmltv prerequisites:


       % su -
       # perl -MCPAN -e shell



  Check to see which version of TWIG is being offered by CPAN.  If it's
  3.08, we need to download it from the author's webiste, because 3.08
  has a problem with perl 5.8. As of 2002-11-02:


       cpan> i /TWIG/
       Author          STWIGGER ("Simon Twigger" <simont@mcw.edu>)
       Distribution    M/MI/MIROD/XML-Twig-3.08.tar.gz
       Module          XML::Twig       (M/MI/MIROD/XML-Twig-3.08.tar.gz)
       3 items found

       cpan>



  This means that we need to do something a little different later on.
  If it's 3.09 or better, then execute:


       cpan> install XML::Twig



  and then the rest of the commands (no matter what the TWIG version
  was):


       cpan> install Date::Manip
       Date::Manip is up to date.
       cpan> install LWP
       cpan> install XML::Writer
       cpan> exit



  Download the 3.09 version of XMLTWIG from
  http://www.xmltwig.com/xmltwig/ <http://www.xmltwig.com/xmltwig/>


       % tar -xzf XML-Twig-3.09.tar.gz
       % cd XML-Twig-3.09
       % perl Makefile.PL
       % make
       % make test
       % su -
       # cd /home/[yourusername]/XML-Twig-3.09
       # make install
       # exit



  Change to the XMLTV directory and compile it:

  % cd xmltv-0.5.2
  % perl Makefile.PL



  You can answer "N" to the tv_check, tv_pick_cgi questions.  Say "yes"
  to the grabber required for your location.

  You may get errors about modules not being installed.  They shouldn't
  matter if you're installing North America and have followed the
  instructions to this point.


       % make
       % make test
       % su -
       % cd /home/[yourusername]/xmltv-0.5.2
       # make install
       # exit



  4.3.  Building mythtv.

  Unpack mythtv


       % tar -xjf mythtv-0.6.tar.bz2
       % cd mythtv-0.6
       % ./configure
       % make



  Switch to superuser:


       % su -
       # cd /home/[yourusername]/mythtv-0.6
       # make install
       # exit



  Make sure that mysql is running and started at boot.  Click on Man-
  drake Control Center->System->Services

  Setup the initial mysql databases:


       % cd database
       % mysql -u root < mc.sql



  5.  Setting up alsa and the mixer.

  If your video doesn't appear to be in-sync with your audio, it could
  be because you are listening to the real-time audio from your video
  card rather than after it's been processed and synced to the video by
  mythtv.

  What you need to do is to mute the "line-in" of your soundcard and
  also set it as the recording source.

  There are two ways to do this.  Graphically, and from the command
  line.


  5.1.  Graphically setting up the mixer.

  Open Kmix by K->Multimedia->Sound->Kmix

  Click on Settings->Configure  Make sure that "Tick Marks" and "Show
  labels" have "X"'s in them.  This will make it easier to find the
  correct audio source.  Click OK.

  On the mixer page, look for Line-In on your soundcard.  You should see
  two LED's - a green one at the top, and a red one at the bottom.  The
  green one at the top is for muting; you want to make sure that the
  green LED is a dark green, meaning that it's "off".  You also want to
  click on the red LED so that it turns bright red, indicating that it's
  "ON"; this insures that the Line-in is used as the source.  Click OK,
  and make sure that you save the settings so that this is your default.


  5.2.  Setting the mixer from the command line.



       % amixer set Master,0 100%,100% unmute
       % amixer set Line,0 100%,100% mute capture
       % su -
       # alsactl store
       # exit
       %



  That takes care of setting the volume correctly, and the alsa startup
  script will restore the volume after a reboot.


  6.  Setting up a remote control.

  mythtv does not have native remote control receiver and decoder
  software built-in.  Instead, remote control functions are implemented
  by cooperating with lirc, the Linux Infra Red Control program.  lirc
  handles the IR hardware and passes keystrokes to mythtv, which then
  acts as if the user had pressed the keys on the keyboard.

  lircd has two prerequisites:  dialog, available in Mandrake through
  the "cdialog" RPM, and the kernel source.  Mandrake 9.0 is using the
  2.4.19 kernel, so the easiest thing is to go to http://www.kernel.org
  and download the full 2.4.19 tar file from
  http://www.kernel.org/pub/linux/kernel/v2.4/


  6.1.  Obtaining the kernel.

  An easy way is to use the wget command:



  % wget http://www.kernel.org/pub/linux/kernel/v2.4/linux-2.4.19.tar.bz2



  Next, open a shell and login as superuser.


       % su -
       # cd /home/[yourusername]
       # mkdir /usr/src
       # mv linux-2.4.19.tar.bz2 /usr/src
       # cd /usr/src
       # tar -xjf linux-2.4.19.tar.bz2
       # chown -R root.root linux-2.4.19
       # ln -sf linux-2.4.19 linux
       # exit



  6.2.  Obtaining and compiling lirc.

  You're going to need to download and compile lircd.  Go to
  http://www.lirc.org and download lirc; as of 2002-11-07, the version
  available is 0.6.6.  Grab the remotes.tgz file as well.


       % tar -xjf lirc-0.6.6.tar.bz2
       % cd lirc-0.6.6
       % ./setup.sh



  You're going to need to know what sort of receiver you have and where
  it's connected.  In my case, I have a Pinnacle Studio TV card, with
  the IR receiver connected to COM1 (/dev/ttys0), so once the configura-
  tion menu came up I did Driver Configuration->Other Serial Port
  Devices->Pinnacle Systems Receiver->OK and on the next page selected
  COM1->OK.

  Each remote is different; some remote receivers connect directly to
  your capture card and not to a serial port, so make sure that you've
  got the correct one.


  You then click "Save Configuration and run configure" to continue.

  Once the configuration step is complete:


       % make
       % su -
       # cd /home/[yourusername]
       # make install
       # chmod 666 /dev/lircd



  Next, we're going to manually start lircd the first time:



  # /usr/local/sbin/lircd



  Now, we're going to add the commands necessary for lircd to run each
  time we boot:


       # cd /etc/rc.d
       # cat >> rc.local
       echo "Starting lircd"
       /usr/local/sbin/lircd
       ^D
       # exit
       %



  This takes care of the lircd portion, which "listens" for the IR sig-
  nals.  If everything went well, the install script for lircd put an
  appropriate config file for your remote into /etc/lircd.conf This file
  maps the buttons on the remote control to the IR pulses coming from
  the receiver.

  The next step is to convert those signals into something that can be
  used to control mythtv.


       % cd ~/mythtv-0.6/configfiles
       % cp lircrc.example ~/.lircrc
       % irxevent



  Start pressing the keys on your remote; you should see them appear on-
  screen.  If you don't see letters and digits at this point, you need
  to troubleshoot further by going back to the lirc homepage and inves-
  tigating from there.

  If it is working, then press CTRL-C to abort the program.  irxevent
  isn't a daemon, so if it is working you need to run it like this:


       % irxevent &



  If irxevent isn't running, then mythtv will not respond to your remote
  control.


  6.3.  Additional information for lirc.

  In my case, (Pinnacle Studio card) the channel up and down functions
  weren't working, due to the fact that the button names were different
  than the lircrc.example files that come with mythtv.

  lircrc.example file has this:



  begin
      prog = irxevent
      button = ChannelUp
      config = Key Up CurrentWindow
  end

  begin
      prog = irxevent
      button = ChannelDown
      config = Key Down CurrentWindow
  end



  but my /etc/lircd.conf defines the buttons as:


                 channel+                 0x0000000000000017
                 channel-                 0x000000000000001C



  so I added the following to my /home/[yourusername]/.lircrc file:


       begin
           prog = irxevent
           button = channel+
           config = Key Up CurrentWindow
       end

       begin
           prog = irxevent
           button = channel-
           config = Key Down CurrentWindow
       end



  That took care of the basic functionality.  However, because the
  remote has additional buttons, I also added the following to my .lir-
  crc:



  begin
      prog = irxevent
      button = FForward
      config = Key Right CurrentWindow
  end

  begin
      prog = irxevent
      button = Rewind
      config = Key Left CurrentWindow
  end

  begin
      prog = irxevent
      button = pause
      config = Key P CurrentWindow
  end

  begin
      prog = irxevent
      button = Play
      config = Key P CurrentWindow
  end

  begin
      prog = irxevent
      button = EPG
      config = Key I CurrentWindow
  end

  begin
      prog = irxevent
      button = middle
      config = Key Return CurrentWindow
  end



  Again, by looking at the buttons defined in your /etc/lircd.conf and
  creating the appropriate mappings in .lircrc you can get very good
  functionality with mythtv.

  That's it.  Now, you can just follow the rest of the README and
  continue from there.



