  Installing and using mythtv
  Robert Kulagowski,  <mailto:rkulagow@rocketmail.com>
  2002-11-28, v1.038

  Initially, installation of mythtv seems like a huge task.  There are
  lots of dependencies, and various distributions seem to do the same
  thing different ways.  This document will attempt to give general
  installation instructions, as well as including distribution-specific
  instructions where necessary.
  ______________________________________________________________________

  Table of Contents

  1. How to obtain this document.
  2. Introduction.
  3. Checking prerequisites.
     3.1 Hardware.
     3.2 Software.
        3.2.1 Graphical installation tools.
           3.2.1.1 Mandrake 9.0
           3.2.1.2 Red Hat Linux 8.0
        3.2.2 Command-line installation.
           3.2.2.1 Mandrake 8.2 and 9.0
           3.2.2.2 Red Hat Linux 8.0
           3.2.2.3 Gentoo.

  4. Setting up paths and ldconfig.
     4.1 Distribution-specific information.
        4.1.1 Mandrake 9.0
        4.1.2 Red Hat Linux 8.0
     4.2 Checking that it worked.
     4.3 Modifying /etc/ld.so.conf

  5. Downloading and compiling.
     5.1 Notes on compiling on a system with non-Intel processors.
     5.2 Building LAME.
     5.3 Building XMLTV.
     5.4 Manually building mythtv.
     5.5 Gentoo.
     5.6 Debian.

  6. MySQL.
     6.1 Mandrake 9.0
     6.2 Red Hat Linux 8.0
     6.3 Gentoo.
     6.4 Setting up the initial database.
        6.4.1 Mandrake 9.0
        6.4.2 Debian 3.0
        6.4.3 Red Hat Linux 8.0

  7. Setting up ALSA and the mixer.
     7.1 Graphically setting up the mixer.
        7.1.1 Mandrake 9.0
        7.1.2 Red Hat Linux 8.0
     7.2 Setting the mixer from the command line.

  8. Setting up a remote control.
     8.1 Obtaining the kernel.
     8.2 Obtaining and compiling lirc.
     8.3 Additional information for lirc.
     8.4 Configuring lirc for use with an IR blaster.

  9. Configuring mythtv.
     9.1 Editing the settings.txt file.
     9.2 Running setup.
     9.3 Running mythfilldatabase.
        9.3.1 Setting mythfilldatabase to run from cron

  10. Using mythtv.
     10.1 Using themes with mythtv.
     10.2 Adding DirecTV information to the database.
     10.3 Adding support for an external tuner.

  11. mythweb.
     11.1 Installation and pre-requisites.
        11.1.1 Mandrake 9.0
     11.2 Completing the installation.

  12. mythgallery.
     12.1 Installation and pre-requisites.

  13. mythgame.
  14. mythmusic.
     14.1 Manual installation of pre-requisites
     14.2 Mandrake 9.0

  15. Troubleshooting.
     15.1 Illegal Instruction.
     15.2 mythfilldatabase failing.
     15.3 mythtv seems to disappear; can't see video
     15.4 Fast CPU, choppy video.

  ______________________________________________________________________

  [1m1.  How to obtain this document.[0m

  This howto document is maintained at the primary mythtv website:
  http://www.mythtv.org < http://www.mythtv.org>.  The latest version of
  this document can be found in CVS, accessible either through the
  ViewCVS <http://www.mythtv.org/cgi-bin/viewcvs.cgi/> web interface, or
  directly from the CVS repository.  You may download the latest copy of
  mythtv and the documentation from CVS this way:

       % mkdir mythtv
       % cd mythtv
       % cvs -d :pserver:mythtv@mythtv.org:/var/lib/cvs login
       Logging in to :pserver:mythtv@mythtv.org:/var/lib/cvs
       CVS password: mythtv
       % cvs -z3 -d :pserver:mythtv@mythtv.org:/var/lib/cvs checkout MC

  This documentation will be in the docs/ subdirectory.

  [1mNOTE[22m: If you are going to use CVS to compile mythtv rather than using
  the distribution tarballs, it is [1mstrongly [22mrecommended that you join
  <http://www.snowman.net/mailman/listinfo/mythtv-commits/> the mythtv-
  dev mailing list.

  [1m2.  Introduction.[0m

  This HOWTO document will focus on mythtv in a North American
  environment.  If you have installation instructions for a different
  region or Linux distribution, please send them to the author so that
  it can be included in other versions of this document.

  The contributors for this document are:

  +o  Overall structure and Mandrake 9.0: Robert Kulagowski,
     <mailto:rkulagow@rocketmail.com>

  +o  Red Hat Linux 8.0: Cedar McKay,
     <mailto:mythhowto.3.ohthetrees@spamgourmet.com>

  +o  Gentoo: Tony Clark,  <mailto:tclark@telia.com>

  +o  Debian: Matthew Zimmerman,  <mailto:mdz@debian.org>

  [1m3.  Checking prerequisites.[0m

  [1m3.1.  Hardware.[0m

  mythtv is a software video encoder, which means that it uses a fairly
  generic "dumb" video capture card, encodes the frames of video using
  the CPU on your motherboard and writes them to disk.  High-end video
  capture cards and devices like the Tivo and RePlay have dedicated
  encoder chips on them which use specialized hardware to convert the
  video stream to the MPEG-2 format without using the motherboard CPU,
  which means that the main CPU only has to worry about running the
  Operating System and reading and writing to the disk.  These have
  fairly low CPU requirements compared to encoding video.  Currently,
  there are no known MPEG-2 encoder cards that have video4linux drivers
  which would be suitable for use with mythtv.  Once the drivers are
  written, support for hardware MPEG-2 encoders can be integrated.

  There are many variables that go into the question: "How fast a CPU do
  I need to run mythtv"?  Obviously, the faster your CPU, the better
  your experience will be with mythtv.  Performing the "Watch TV"
  function, where the CPU is both encoding and decoding video
  simultaneously to allow Pause, Fast Forward and Rewind functions for
  live TV requires twice as much CPU as just encoding or decoding.
  mythtv also supports multiple encoder cards in a single PC, increasing
  the CPU requirements if you are going to simultaneously encode
  multiple programs.

  Here are a few data points:

  +o  A PIII/733Mhz system can encode one video stream using the RTJPEG
     codec using 512x480 capture resolution.  This does not allow for
     live TV watching, but does allow for encoding video and then
     watching it later.

  +o  The developer states that his AMD1800+ system can [1malmost [22mencode two
     MPEG4 video streams and watch one program simultaneously.

  +o  A PIII/800Mhz system with 512MB RAM can encode one video stream
     using the RTJPEG codec with 480x480 capture resolution and play it
     back simultaneously, thereby allowing live TV watching.

  [1m3.2.  Software.[0m

  There are a few ways of installing programs on Linux systems; you can
  either use the graphical tools that come with your distribution, or
  you can use command-line utilities.  Either system will get the job
  done, and it all depends on your comfort level with Linux.

  In order to compile mythtv, we need to make sure that the software it
  needs is installed.  As of 2002-11-08, this list includes perl-5.8,
  mysql, gcc, freetype2-devel and qt-devel.  If you're going to use a
  remote control with mythtv, you're going to need the cdialog package
  in order to compile lircd.

  There appears to be issues with ALSA and simultaneously recording and
  playing sound, which is a core requirement for mythtv.  If you are not
  running ALSA 0.9.0rc6 and experience lock-ups of your system when
  trying to use mythtv, then please check the main ALSA website and
  upgrade to the latest version, or see if your distribution has already
  packaged the latest ALSA drivers.

  [1m3.2.1.  Graphical installation tools.[0m

  [1m3.2.1.1.  Mandrake 9.0[0m

  On systems running KDE, a tool which will allow you to see what
  packages are available and if they're installed on your system can be
  accessed by clicking K->Configuration->Packaging->KPackage

  There are many inter-related modules, so make sure that you've got the
  main package for each one, and not a sub package for an unrelated
  item.  For example, there are many modules that have "perl" in them;
  some are a part of the apache web server, others are a part of the
  perl distribution.  In each case, we're looking to make sure that the
  primary module is getting installed.

  Click the magnifying glass or press [1mCTRL-F [22mand enter "perl" as your
  search term.  You should find it under the "Perl" folder.  You need at
  least the perl 5.80 base package installed.  If not, click on the
  "Mark" button.

  Next, search for mysql - it should be under "Databases".  Make sure
  that mysql and mysql-clients are installed.  If not, click on "Mark".

  Search for gcc.  You're going to need gcc and gcc-c++ installed.

  Search for freetype2.  Make sure that you've got freetype2 and
  freetype2-devel installed.

  Finally, check for qt.  You'll need libqt3-devel (under folder "KDE
  and Qt") and libqt3 ("Libraries").

  Make sure that cdialog is installed if you want to use mythtv with a
  remote control.

  alsa-utils is needed for setting the volume.

  If you marked anything to install, click on Install Marked.  Click
  "Yes" or OK if you get a message about satisfying dependencies.

  [1m3.2.1.2.  Red Hat Linux 8.0[0m

  Red Hat Linux 8.0 does not have the same KDE graphical package manager
  that some other distributions have. You will need to use Red Hat's
  package manager.  This is the same utility you saw upon installation
  from the Red Hat Linux 8.0 installation CD, you can select these
  packages upon install of Red Hat Linux 8.0 or later. . You can get to
  this panel by selecting gnomemenu>System Settings>Packages If you did
  a typical Desktop install of Red Hat Linux 8.0 make sure in addition
  you have selected:

  +o  KDE Desktop Environment

  +o  SQL Database Server -  you will have to click on "details" and make
     sure "mysql-server" is checked.

  +o  Development Tools

  +o  X Software Development

  +o  KDE Software Development

  Click Install to continue.

  The version of QT supplied with Red Hat Linux 8.0 does not include a
  necessary mysql plugin. You will have to download and install that RPM
  package yourself. First go to http://rpm.pbone.net/
  <http://rpm.pbone.net/> and click on "Search" near the top of the
  page. On the search page unselect all checkboxes except "RedHat 8.X".
  Next select the "Search for RPMs by name in FTP........." radio
  button. In the search field enter "qt-MySQL" then click "Search".  You
  will be presented with a list of mirrors who host this particular RPM,
  currently called "qt-MySQL-3.0.5-17.i386.rpm". Download the RPM.  I
  had good luck downloading from the ftp.pbone.net mirror. Once
  downloaded, double click on the RPM package. You will be prompted for
  the root password, enter it, watch the progress bar, and you are
  finished.

  [1m3.2.2.  Command-line installation.[0m

  This section details the various methods for installing pre-requisites
  from the command line.

  [1m3.2.2.1.  Mandrake 8.2 and 9.0[0m

  The simplest tool for installing packages from the command line is
  [1murpmi[22m.

  Open a shell, and execute the following, all on the same line:

       % su -
       # urpmi perl-5.8 mysql gcc gcc-c++ freetype2-devel libqt3-devel cdialog
       alsa-utils

  You may get asked a number of questions regarding dependencies.  It's
  best to answer "YES".

  However, you might get this when you execute the command above:

       [root@pvr root]# urpmi perl-5.8 mysql gcc gcc-c++
       freetype2-devel libqt3-devel cdialog
       everything already installed

  In that case, you're ready to move onto the next step.

  [1m3.2.2.2.  Red Hat Linux 8.0[0m

  [Please submit instructions]

  [1m3.2.2.3.  Gentoo.[0m

  If KDE has not been installed on your system: Edit /etc/make.conf and
  locate the "USE" variable.  If the line is commented out, remove the
  comment.  The line should have at least:

       USE="mysql qt alsa"

  Next you need to build KDE.  If you don't plan on using the ebuilds as
  described in the Gentoo ``section'' then you also need to install
  lame.

       $emerge kde lame

  All the necessary files will be downloaded and built.  This will take
  a lot of time, even on a fast machine.

  [1m4.  Setting up paths and ldconfig.[0m

  There are some paths that need to be modified before starting the main
  compile of mythtv, otherwise you will get errors.

  [1m4.1.  Distribution-specific information.[0m

  [1m4.1.1.  Mandrake 9.0[0m

  As root, create the following file in /etc/profile.d  On my system I
  call it "mythtv.sh".

  Open a shell, and switch to superuser mode.  [1mNOTE: ^D [22mmeans press [1mCTRL[0m
  and [1md [22mat the same time.

       % su -
       # cd /etc/profile.d
       cat > mythtv.sh
       export QTDIR=/usr/lib/qt3
       export PATH=$PATH:/usr/lib/qt3/bin
       ^D

       # chmod a+x mythtv.sh
       # exit
       % exit

  The last two commands are to exit out of the shell.  This way, when
  you next open a shell your new commands will take effect.

  [1m4.1.2.  Red Hat Linux 8.0[0m

  Red Hat Linux 8.0 uses an unusual character encoding scheme that some
  programs don't deal well with. As a result, whenever you run setup or
  mythfilldatabase you will have to set a variable to correct this
  problem.  Failure to set this variable will result in a lot of UTF-8
  errors.

  There are two modifications that you can make to your system so that
  you can follow the "standard" instructions.

  You can either modify the /etc/sysconfig/i18n file and set
  LANG="en_US", or you can create a file in ~/.i18n:

  % cat > ~/.i18n
  LANG="en_US"
  ^D
  % exit

  By making these modifications, you can follow the "other
  distributions" instructions in the "Configuring mythtv" section later
  in this document.

  [1m4.2.  Checking that it worked.[0m

  Open a shell and switch to superuser mode again.

       % su -
       # set

       [lots of text]
       QTDIR=/usr/lib/qt3
       PATH=/usr/local/bin:/bin:/usr/bin:/usr/X11R6/bin:/usr/games:/usr/lib/qt3/bin:/home/mythtv/bin:/usr/lib/qt3/bin

  You should see QTDIR and the path changes you made.

  Next, we need to make sure that the libraries that we're building will
  be found when we need them.

  [1m4.3.  Modifying /etc/ld.so.conf[0m

  Switch to /etc and execute the following:

       # cd /etc
       # cat >> ld.so.conf
       /usr/local/lib
       ^D

       # ldconfig
       # exit
       %

  [1m5.  Downloading and compiling.[0m

  Get mythtv from the mythtv.org <http://www.mythtv.org> web site.  Save
  the tarball to a directory you can find.

  Get XMLTV from http://xmltv.sourceforge.net
  <http://xmltv.sourceforge.net>.  Download version 0.5.3

  Get lame from http://www.mp3dev.org/mp3 <http://www.mp3dev.org/mp3>.
  Download the source code to v3.92 by following the links to
  sourceforge.net

  [1m5.1.  Notes on compiling on a system with non-Intel processors.[0m

  If you've got a system with an AMD K6-2 or a VIA C3 processor, make
  the following change in the settings.pro file.

  Look for

  -march=pentiumpro

  and replace it with

  -march=i586

  before you compile.

  Recent AMD processors, like the Duron, Thunderbird and Athlon don't
  need this change.

  [1m5.2.  Building LAME.[0m

  Open a shell and switch to the directory where you saved lame.

       % tar -xzf lame-3.92.tar.gz
       % cd lame-3.92
       % ./configure
       % make
       % make test
       % su
       # make install

  Check that it worked:

       # ls -l /usr/local/lib
       -rw-r--r--    1 root     root       381706 Nov  4 14:22 libmp3lame.a
       -rwxr-xr-x    1 root     root          674 Nov  4 14:22 libmp3lame.la*
       lrwxrwxrwx    1 root     root           19 Nov  4 14:22 libmp3lame.so ->
       libmp3lame.so.0.0.0*
       lrwxrwxrwx    1 root     root           19 Nov  4 14:22 libmp3lame.so.0 ->
       libmp3lame.so.0.0.0*
       -rwxr-xr-x    1 root     root       360197 Nov  4 14:22
       libmp3lame.so.0.0.0*

       # exit
       %

  [1m5.3.  Building XMLTV.[0m

  [1mNOTE[22m: Red Hat Linux 8.0 users, you [4mmust[24m download and install an
  updated version of libexpat.  The version that ships with Red Hat
  Linux 8.0 (version 1.95.4) is buggy, and will cause problems with
  XML::Twig.  All other distributions may skip the step and proceed with
  untar'ing the xmltv file.

  Download version 1.95.5 from sourceforge.net:
  http://sourceforge.net/projects/expat/
  <http://sourceforge.net/projects/expat/>

  Open a shell prompt:

       % tar -xzf expat-1.95.5.tar.gz
       % cd expat-1.95.5
       % ./configure
       % make
       % su
       # make install
       # exit
       %

  Untar the xmltv file:

       % tar -xjf xmltv-0.5.3.tar.bz2
       % cd xmltv-0.5.3

  Install the xmltv prerequisites:

       % su -
       # perl -MCPAN -e shell
       cpan> install XML::Twig
       cpan> install Date::Manip
       Date::Manip is up to date.
       cpan> install LWP
       cpan> install XML::Writer
       cpan> exit

  Change to the XMLTV directory and compile it:

       % cd xmltv-0.5.3
       % perl Makefile.PL

  You can answer "N" to the tv_check, tv_pick_cgi questions.  Say "yes"
  to the grabber required for your location.

  You may get errors about modules not being installed.  They shouldn't
  matter if you're installing North America and have followed the
  instructions to this point.

       % make
       % make test
       % su
       # make install
       # exit

  [1m5.4.  Manually building mythtv.[0m

  Unpack mythtv

       % tar -xjf mythtv-0.7.tar.bz2
       % cd mythtv-0.7
       % ./configure
       % make

  Switch to superuser:

       % su
       # make install
       # exit

  [1m5.5.  Gentoo.[0m

  [Documentation being finalized]

  There are ebuilds setup for mythtv and for XMLTV.  To use them, do the
  following.

  First, edit your /etc/make.conf file so that it looks like this:

       # Build-time functionality
       # ========================
       #
       # The USE variable is used to enable optional build-time functionality. For
       # example, quite a few packages have optional X, gtk or GNOME functionality
       # that can only be enabled or disabled at compile-time. Gentoo Linux has a
       # very extensive set of USE variables described in our USE variable HOWTO at
       # http://www.gentoo.org/doc/use-howto.html
       #
       # The available list of use flags with descriptions is in your portage tree.
       # Use 'less' to view them:  --> less /usr/portage/profiles/use.desc <--
       #
       # Example:
       #USE="X gtk gnome -alsa"
       USE="mysql qt dvd X -alsa gtk gnome -esd oss"
       # PORTDIR_OVERLAY is a directory where local ebuilds may be stored without
       #     concern that they will be deleted by rsync updates. Default is not
       #     defined.
       PORTDIR_OVERLAY=/home/[yourusername]/portage

  Next, create the following directories:

       mkdir -p /home/[yourusername]/portage/video-media/mythtv
       mkdir -p /home/[yourusername]/portage/dev-perl/xmltv

  Download the ebuilds and save them to their respective directories
  made above.  Make sure the downloaded file names are the same as those
  on bugs.gentoo.org.  The correct source files will fail to download if
  the ebuild names are wrong.  The two ebuilds are:

  +o  mythtv: http://bugs.gentoo.org/show_bug.cgi?id=10533
     <http://bugs.gentoo.org/show_bug.cgi?id=10533>

  +o  XMLTV: http://bugs.gentoo.org/show_bug.cgi?id=10536
     <http://bugs.gentoo.org/show_bug.cgi?id=10536>

  By default, Gentoo doesn't build QT libraries with SQL support.  To
  enable SQL support you need to rebuild QT by running "emerge qt".

  You will also need to perform an "emerge mysql" step.

  emerge mythtv.  It should download the source then complain about a
  missing digest.  To fix this

       % ebuild /home/[yourusername]/portage/video-media/mythtv/mythtv-0.7.0.ebuild digest

  emerge mythtv again and it should compile and install.

  Do the same for xmltv but an additonal step will be required first to
  fool it into thinking XML-Twig is installed.  To achieve this:

       % emerge inject dev-perl/XML-Twig

       % emerge mysql

  [1m5.6.  Debian.[0m

  Debian packages for MythTV and some of its add-on modules have been
  packaged by Matt Zimmerman  <mailto:mdz@debian.org> and are available
  at http://dijkstra.csh.rit.edu:8088/~mdz/debian/dists/woody/mythtv/
  <http://dijkstra.csh.rit.edu:8088/~mdz/debian/dists/woody/mythtv/>,
  including installation instructions.  All of the prerequisites for
  MythTV are available as Debian packages.

  The mailing list message for this announcement can be accessed at
  http://www.snowman.net/pipermail/mythtv-dev/2002-November/001116.html
  <http://www.snowman.net/pipermail/mythtv-
  dev/2002-November/001116.html>.

  [1m6.  MySQL.[0m

  [1m6.1.  Mandrake 9.0[0m

  Make sure that mysql is running and started at boot.  Click on
  Mandrake Control Center->System->Services, find mysql and click the
  "On Boot" button and the "Start" button if the mysql status shows that
  it isn't running yet.

  [1m6.2.  Red Hat Linux 8.0[0m

  Make sure that mysql is running and started at boot. Click on GNOME
  menu>Server Settings>Services and enter the root password when asked.
  Check "mysqld" and then click Start. Click Save, then close the
  window.

  [1m6.3.  Gentoo.[0m

  By default, doesn't build QT libraries with SQL support.  To enable
  SQL support you need to add to your USE variable (USE="mysql") in
  /etc/make.conf and rebuild QT by running

       % emerge qt

  [1m6.4.  Setting up the initial database.[0m

  Setup the initial mysql databases:

       % cd database

  [1m6.4.1.  Mandrake 9.0[0m

       % mysql -u root < mc.sql

  [1m6.4.2.  Debian 3.0[0m

       % mysql < mc.sql

  [1m6.4.3.  Red Hat Linux 8.0[0m

       % mysql < mc.sql

  if this returns an error message try switching to root first.

       % su
       # mysql < mc.sql
       # exit
       %

  [1m7.  Setting up ALSA and the mixer.[0m

  If your video doesn't appear to be in-sync with your audio, it could
  be because you are listening to the real-time audio from your video
  card rather than after it's been processed and synchronized to the
  video by mythtv.

  What you need to do is to mute the "line-in" of your sound card and
  also set it as the recording source.

  There are two ways to do this.  Graphically, and from the command
  line.

  [1m7.1.  Graphically setting up the mixer.[0m

  [1m7.1.1.  Mandrake 9.0[0m

  Open Kmix by K->Multimedia->Sound->Kmix

  Click on Settings->Configure  Make sure that "Tick Marks" and "Show
  labels" have "X"'s in them.  This will make it easier to find the
  correct audio source.  Click OK.

  On the mixer page, look for Line-In on your sound card.  You should
  see two LED's - a green one at the top, and a red one at the bottom.
  The green one at the top is for muting; you want to make sure that the
  green LED is a dark green, meaning that it's "off".  You also want to
  click on the red LED so that it turns bright red, indicating that it's
  "ON"; this insures that the Line-in is used as the source.  Click OK,
  and make sure that you save the settings so that this is your default.

  [1m7.1.2.  Red Hat Linux 8.0[0m

  There is some uncertainty (in my mind anyway) about ALSA sound and Red
  Hat.  Take everything here with a grain of salt. Here is what my
  impression of how things are right now. The mythtv developer
  recommends ALSA sound drivers.  However, Red Hat Linux 8.0 ships with
  some other sound driver/management package.  Installing ALSA looks
  like a real bear, and includes a kernel recompile. Then you have to
  figure out how to deactivate the Red Hat Linux 8.0 built in sound
  package. I decided to give it whirl with the built in sound package. I
  [1mwas [22mable to get satisfactory results on my machine using the RTJPEG
  video encoder and turning off MP3 sound compression. If I try to use
  the better MPEG4 video encoder and/or use MP3 audio compression I get
  slight sound sync issues and a few skips. I think this is because my
  machine is too slow. However, it is possible that it is really because
  I'm using the wrong sound package. Since I didn't install ALSA myself
  you will need to evaluate the situation on your own. However, I will
  give instructions for how I got the default Red Hat Linux 8.0 sound
  package working with mythtv.

  Red Hat Linux 8.0 does not use some default KDE and Gnome control
  panels and substitutes its own. Sound is one of these cases. To
  configure sound to work with mythtv, select Gnome Menu> Sound &
  Video>Volume Control. This will open up a mixer. Make sure your global
  volume (on the far left) is up. Also make sure that the "line in"
  section has "mute" checked, and "record" checked and the gain is
  turned up. You may have to experiment with volume/gain levels to get
  the best sound.  If you experience difficulty with sound try removing
  your sound jack from "line in" and moving it to "mike in" Then go to
  the mixer and check "mute" and "record" on the "mike in", and turn up
  the gain.

  [1m7.2.  Setting the mixer from the command line.[0m

  If you're running Mandrake 9.0 and have installed the alsa-utils
  package, then the [1mamixer [22mprogram can be used to setup the mixer.

       % amixer set Master,0 100%,100% unmute
       % amixer set Line,0 100%,100% mute capture
       % su -
       # alsactl store
       # exit
       %

  That takes care of setting the volume correctly, and the ALSA startup
  script will restore the volume after a reboot.

  [1m8.  Setting up a remote control.[0m

  mythtv does not have native remote control receiver and decoder
  software built-in.  Instead, remote control functions are implemented
  by cooperating with lirc, the Linux Infra Red Control program.  lirc
  handles the IR hardware and passes keystrokes to mythtv, which then
  acts as if the user had pressed the keys on the keyboard.

  lircd has two prerequisites:  dialog, available in Mandrake through
  the "cdialog" RPM, and the kernel source.  Mandrake 9.0 is using the
  2.4.19 kernel, so the easiest thing is to go to http://www.kernel.org
  <http://www.kernel.org> and download the full 2.4.19 tar file from
  http://www.kernel.org/pub/linux/kernel/v2.4/
  <http://www.kernel.org/pub/linux/kernel/v2.4/>.

  [1m8.1.  Obtaining the kernel.[0m

  An easy way is to use the wget command:

       % wget http://www.kernel.org/pub/linux/kernel/v2.4/linux-2.4.19.tar.bz2

  Next, open a shell and login as superuser.

  % su
  # mkdir /usr/src
  # mv linux-2.4.19.tar.bz2 /usr/src
  # cd /usr/src
  # tar -xjf linux-2.4.19.tar.bz2
  # chown -R root.root linux-2.4.19
  # ln -sf linux-2.4.19 linux
  # exit
  %

  [1m8.2.  Obtaining and compiling lirc.[0m

  You're going to need to download and compile lircd.  Go to
  http://www.lirc.org <http://www.lirc.org> and download lirc; as of
  2002-11-07, the version available is 0.6.6.  Grab the remotes.tgz file
  as well.

       % tar -xjf lirc-0.6.6.tar.bz2
       % cd lirc-0.6.6
       % ./setup.sh

  You're going to need to know what sort of receiver you have and where
  it's connected.  In my case, I have a Pinnacle Studio TV card, with
  the IR receiver connected to COM1 (/dev/ttys0), so once the configura-
  tion menu came up I did Driver Configuration->Other Serial Port
  Devices->Pinnacle Systems Receiver->OK and on the next page selected
  COM1->OK.

  Each remote is different; some remote receivers connect directly to
  your capture card and not to a serial port, so make sure that you've
  got the correct one.

  You then click "Save Configuration and run configure" to continue.

  Once the configuration step is complete:

       % make
       % su
       # make install
       # chmod 666 /dev/lircd

  Next, we're going to manually start lircd the first time:

       # /usr/local/sbin/lircd

  Now, we're going to add the commands necessary for lircd to run each
  time we boot:

  # cd /etc/rc.d
  # cat >> rc.local
  echo "Starting lircd"
  /usr/local/sbin/lircd
  ^D
  # exit
  %

  This takes care of the lircd portion, which "listens" for the IR sig-
  nals. If everything went well, the install script for lircd put an
  appropriate configuration file for your remote into /etc/lircd.conf
  This file maps the buttons on the remote control to the IR pulses com-
  ing from the receiver.

  The next step is to convert those signals into something that can be
  used to control mythtv.

       % cd ~/mythtv-0.7/configfiles
       % cp lircrc.example ~/.lircrc

  or

       % cp lircrc.example.pinnaclestudiopctv ~/.lircrc

  if you've got a Pinnacle Studio PCTV remote.

       % irw

  Start pressing the keys on your remote; [1mirw [22mwill print the name of the
  button as it is defined in your /etc/lircd.conf. If you don't see any-
  thing at this point, you need to troubleshoot further by going back to
  the lirc home page and investigating from there.

  If it is working, then press [1mCTRL-C [22mto abort the program.  Once you
  know that your remote is working, you need to run the [1mirxevent[0m
  program, which takes the key presses and sends them to mythtv.
  [1mirxevent [22misn't a daemon, so if you know that your remote is working
  you need to invoke it like this:

       % irxevent &

  If [1mirxevent [22misn't running, then mythtv will not respond to your remote
  control.

  Currently, mythtv doesn't have native support for controlling the
  mixer volume and mute settings.  A workaround at this time is to
  invoke the [1mamixer [22mprogram.  If you wish to define keys to control the
  mixer, the [1mirexec [22mprogram can accomplish this fairly easily.  The
  configfiles/lircrc.example.pinnaclestudiopctv file has an example of
  calling an external program from a remote control button.

  [1m8.3.  Additional information for lirc.[0m

  Take a look at the lircrc.example files in the configfiles/ directory.
  In my case, (Pinnacle Studio card) the channel up and down functions
  weren't working, due to the fact that the button names were different
  than the default lircrc.example file that came with mythtv.

  The lircrc.example file has this:

       begin
           prog = irxevent
           button = ChannelUp
           config = Key Up CurrentWindow
       end

       begin
           prog = irxevent
           button = ChannelDown
           config = Key Down CurrentWindow
       end

  but the /etc/lircd.conf that comes in the lircd package defines the
  buttons for the Pinnacle Studio PCTV as:

                 channel+                 0x0000000000000017
                 channel-                 0x000000000000001C

  rather than "ChannelUp" and "ChannelDown".  I added the following to
  my /home/[yourusername]/.lircrc file:

       begin
           prog = irxevent
           button = channel+
           config = Key Up CurrentWindow
       end

       begin
           prog = irxevent
           button = channel-
           config = Key Down CurrentWindow
       end

  which took care of basic functionality.  Because the PCTV Studio
  remote has additional buttons, look at the configfiles/lircrc.exam-
  ple.pinnaclestudiopctv for an example of how to define additional but-
  tons, and how to debug potential button name conflicts between the
  lircrc.example file and how [1myour [22mremote defines the button names.

  By examining the button names defined in /etc/lircd.conf and using the
  [1mirw [22mprogram to make sure that your remote is working, you can create
  the appropriate mappings in .lircrc to get excellent remote
  functionality with mythtv.

  [1m8.4.  Configuring lirc for use with an IR blaster.[0m

  By Carlos Talbot,  <mailto:carlos@talbot.net>

  Lirc has support for various IR transmitters. A popular model is the
  Actisys IR-200L http://store.yahoo.com/snapstreammedia/irblasbun.html
  <http://store.yahoo.com/snapstreammedia/irblasbun.html>. It was
  originally designed for IRDA communication, but can be used to
  transmit A/V remote control codes. By using the lirc SIR driver, this
  device can easily be integrated with mythtv. I have tested this device
  with an AT&T DCT2000 digital cable box but the instructions can be
  used to configure other IRDA devices and A/V remotes.

  Follow the steps in the previous section.  When you run setup.sh,
  select option 1, driver configuration. From here select option 6, IrDA
  hardware.  Select your appropriate device and the corresponding serial
  port, then Save configuration & run configure from the main menu. Once
  configure is done type:

       % make

  Please note: unlike the Pinnacle receiver above you will be compiling
  lircd in addition to a kernel module for the SIR transmitter.
  Depending on whether you have your serial port driver configured as a
  kernel module you might see the following message during make:

       lirc_sir.c:56:2: warning: #warning
       "******************************************"

       lirc_sir.c:57:2: warning: #warning "Your serial port driver is compiled into "

       lirc_sir.c:58:2: warning: #warning "the kernel. You will have to release the "

       lirc_sir.c:59:2: warning: #warning "port you want to use for LIRC with:"

       lirc_sir.c:60:2: warning: #warning "setserial /dev/ttySx uart none"

       lirc_sir.c:61:2: warning: #warning
       "******************************************"

  If you do receive this statement make sure to run the [1msetserial[0m
  command before you load the lirc_sir module. Follow this with the
  install:

       % su
       # make install

  You will notice that lirc installs the kernel module in
  /lib/modules/uname -a/misc.

  The configuration for starting [1mlircd [22mdiffers if you're going to be
  sending and receiving IR versus just receiving.

       # cd /etc/rc.d
       # cat >> rc.local
       echo "Starting lircd"
       setserial /dev/ttySx uart none        # (if required)
       modprobe lirc_sir
       /usr/local/sbin/lircd
       ^D
       # exit
       %

  At this point you have to populate the /etc/lircd.conf file with the
  proper codes for your A/V remote. You should be able to find your
  remote within the lirc remote tar file located at
  http://www.lirc.org/remotes.tar.bz2
  <http://www.lirc.org/remotes.tar.bz2>. In my case I extracted the file
  from remotes/motorola/DCT2000 (gi-motorola-dct2000)

  To test the lirc_sir module you can run [1mirw [22mto verify the codes are
  being received. If everything is configured correctly you should see
  something similar to the following:

       % irw
       0000000000007ff0 00 1 gi-motorola-dct2000
       000000000000bff8 00 2 gi-motorola-dct2000
       000000000000f7f0 00 ENTER gi-motorola-dct2000

  Once you've verified lirc is working you can press [1mCTRL-C [22mto exit [1mirw[0m
  and configure the channel changing script.

  Within /usr/local/share/mythtv/settings.txt  (or
  ~/.mythtv/settings.txt) you need to add the following line:

       str ExternalChannelCommand=/usr/local/bin/change_channel

  This csh script will be called each time mythtv needs to change the
  channel.  Below is a copy of the script followed by the corresponding
  perl script.  Make sure both are in your path. Also make sure you
  leave the #!/bin/csh setting and not change it to bourne or bash. This
  will create a frustrating symptom to diagnose where mythtv cannot open
  /dev/device. Unlike bourne or bash, csh scripts automatically close
  parent file descriptors before they start.

  % cd /usr/local/bin
  # su
  # cat > change_channel.csh
  #!/bin/csh
  echo "changing to $1"
  /usr/local/bin/channel.pl $1 &
  ^D
  # chmod a+x change_channel.csh
  # exit
  % exit

  The following file should be saved as /usr/local/bin/channel.pl

       #!/usr/bin/perl

       # make sure to set this string to
       # the corresponding remote in /etc/lircd.conf
       $remote_name = "gi-motorola-dct2000";

       sub change_channel {
               my($channel_digit) = @_;
               system ("rc SEND_ONCE $remote_name $channel_digit");
               sleep 1;
       }

       $channel=$ARGV[0];
       sleep 1;
       if (length($channel) > 2) {
               change_channel(substr($channel,0,1));
               change_channel(substr($channel,1,1));
               change_channel(substr($channel,2,1));
       } elsif (length($channel) > 1) {
               change_channel(substr($channel,0,1));
               change_channel(substr($channel,1,1));
       } else {
               change_channel(substr($channel,0,1));
       }
       system ("rc SEND_ONCE $remote_name ENTER");

  The last statement within the perl script is the lirc rc command. This
  is the command that transmits the code to your cable/dss box. Make
  sure to have the IRDA device within a few feet of the box.

  [1m9.  Configuring mythtv.[0m

  By this point, all of the prerequisites have been installed, [1mmysql [22mis
  running and has had its initial database setup.  It's now time to
  configure mythtv.

  [1m9.1.  Editing the settings.txt file.[0m

  Open a shell and switch to the /usr/local/share/mythtv directory.  You
  [1mMUST [22medit the settings.txt file so that it's appropriate for your
  system.  At a minimum, ensure that the BufferName, RecordFilePrefix
  and PIPBuffername variables are set to directories that exist on your
  system.  By default, these point to /mnt/store.  For example, you may
  wish to create a /var/video subdirectory, so you would change
  /mnt/store to /var/video

       % su
       # mkdir /var/video
       # chmod a+rwx /var/video
       # exit

  The settings.txt file is fairly self-explanatory.  Currently, mythtv
  supports two different video encoders, MPEG4 and RTJPEG.  Take note
  that RTJPEG has lower CPU demands, but makes large files, and MPEG4
  has high CPU demands, but makes smaller files.

  [1mNOTE[22m: although the width and height can be changed to almost anything,
  if you start mythtv and don't see video or you get "segmentation
  fault" errors, it is likely that the video4linux (v4l) subsystem did
  not like the height and width parameters specified.  It's best to
  leave the default as-is until you're sure that mythtv is operational.

  [1mNOTE[22m: the int Deinterlace=1 variable controls the deinterlacer.
  Support for deinterlacing requires that your processor has MMX2.
  Intel Celeron and Pentium Pro CPUs do not have MMX2, so make sure that
  you've got this set to "0" if you have one of these.  If you don' t,
  you will get "Illegal Instruction" errors.

  Users in North America can now exit and save the file.  Users in other
  parts of the world need to modify the first line and modify the
  XMLTVGrabber variable to the correct grabber for their region.
  [1mtv_grab_uk [22mfor the UK, etc.  Use the name from the xmltv directory.

  [1m9.2.  Running setup.[0m

  Now that you've edited your settings.txt file, it's time to run the
  setup program and perform the initial configuration.

  Open a shell, and switch to the setup directory:

       % cd setup

  Red Hat 8.0 users, ensure that you do this:

       % env LANG=C setup

  instead of what all the other distributions should use:

       % ./setup

  The setup program will ask you a few questions and then proceed to run
  the XMLTV grabber program.

  [1m9.3.  Running mythfilldatabase.[0m

  Now that the setup program has completed, run [1mmythfilldatabase [22mto get
  one week of data inserted into the database.

  Red Hat 8.0 users, ensure that you do this:

       % env LANG=C mythfilldatabase

  All other distributions can execute the following:

       % mythfilldatabase

  [1mNOTE[22m:  [1mmythfilldatabase [22mmight take a while to complete, depending on
  any number of factors, most of which you can't control.  It's best to
  just let the program run to completion.

  [1mmythfilldatabase --manual [22mis another option; the manual option will
  allow you to fine tune channel frequencies and specify which channels
  will be added to the database.  If you are not using the tv_grab_na
  grabber, you must use the [1m--manual [22moption.

  [1mmythfilldatabse --file [22mis an option if there isn't an XMLTV grabber
  for your country, but you [1mdo [22mhave an XML formatted listings file
  created by some other program.

  [1m9.3.1.  Setting mythfilldatabase  to run from cron[0m

  In order to keep your database filled, [1mmythfilldatabase [22mshould be run
  once a day.

  There are two ways to accomplish this:  either as a user-based cron
  job, or as a system based cron.  If you use a user-based cron, you can
  select the time that the cron job will be run.  A system-based cron
  job will run at the same time as any other system cron jobs.

  If you are a Mandrake 9.0 user and wish to use a system cron job, you
  can perform the following steps:

       % cd configfiles
       % su
       # cp mythfilldatabasecron /etc/cron.daily

  If you want to know what time your job will run, you can do the
  following:

  # cat /etc/crontab
  SHELL=/bin/bash
  PATH=/sbin:/bin:/usr/sbin:/usr/bin
  MAILTO=root
  HOME=/

  # run-parts
  01 * * * * root nice -n 19 run-parts /etc/cron.hourly
  02 4 * * * root nice -n 19 run-parts /etc/cron.daily
  22 4 * * 0 root nice -n 19 run-parts /etc/cron.weekly
  42 4 1 * * root nice -n 19 run-parts /etc/cron.monthly
  # exit
  %

  We can see from the display that the cron.daily job will run at 0402
  every morning.

  If you wish to specify a custom time, then the user-based cron job is
  the better method.

  The default [1mconfigfiles/mythcrontab [22mfile will run the [1mmythfilldatabase[0m
  program every day at 0430.  If you want to change this, then open the
  configfiles/mythcrontab file in your favorite editor and modify it as
  you like.  Once you're satisfied with the time that [1mmythfilldatabase[0m
  will run, save and exit, and return to the shell prompt.

       % cd configfiles
       % crontab mythcrontab
       % crontab -l  NOTE: this is a lowercase L.
       # The following will run the mythfilldatabase shell script at 0430
       # every day.  Format is
       # minutes hour day_of_month month day_of_week
       # man 5 crontab for more information
       # Need to use a shell script because the QTDIR environment variable isn't
       # being honored by crontab?
       # The next text should be all on the same line.
       30 04 * * * /bin/bash $HOME/mythtv-0.7/MC/configfiles/mythfilldatabasecron
       %

  As you can see, [1mmythfilldatabase [22mwill now be run at 0430 every day.

  If you decide to alter the time that the [1mmythfilldatabase [22mruns, you
  can use the crontab command to open your existing job and edit it in
  place.

       % crontab -e

  The [1mcrontab -e [22mcommand will allow you to edit the existing crontab.
  [1mNOTE[22m:  By default, the crontab will use [1mvi [22mas your editor.  If you
  don't like to use [1mvi[22m, make sure that you've set VISUAL to something
  other than [1mvi[22m.

       % export VISUAL=/usr/bin/joe
       % crontab -e

  This will cause [1mcrontab [22mto use [1mjoe[22m, a visual editor that uses the
  Wordstar command sequence.  You may use [1memacs[22m, or any other editor
  that you're comfortable with.  You may also add the EXPORT command to
  your .bashrc or to the /etc/profile.d/mythtv.sh file.

  Once you've completed this step, run the [1mmythepg [22mprogram to check that
  the database has been filled.  The cursor keys will move you around
  the grid, the "I" key will give you more information on a program and
  ESC will exit out back to the shell.

  [1m10.  Using mythtv.[0m

  [1mmythfrontend [22mis the main interface to the mythtv program.  This
  program allows you to choose which of the other modules you'd like to
  run and ensures that programs that you've scheduled for recording
  actually get recorded, so it's important that this program is always
  running.

  [1m10.1.  Using themes with mythtv.[0m

  mythtv is "themeable", meaning that the visual appearance of the
  program can be modified by the user without re-compiling or altering
  the program functionality.  /usr/local/share/mythtv/theme.txt allows
  you to alter the theme for mythtv.  The default theme is called
  "blue".  Other themes that ship with mythtv can be found in the
  /usr/local/share/mythtv/themes directory.  Change the first variable
  in the theme.txt file and exit and restart [1mmythfrontend [22mfor it to take
  effect.

  [1mNOTE[22m: Exiting [1mmythfrontend [22mwill stop any recordings you have in
  progress, so make sure that the system isn't busy if you modify the
  theme while [1mmythfrontend [22mis still running.

  [1m10.2.  Adding DirecTV information to the database.[0m

  A script for adding DirecTV information into the database has been
  written by tarek Lubani  <mailto:tarek@tarek.2y.net> and is available
  at http://tarek.2y.net/myth/ppv.pl <http://tarek.2y.net/myth/ppv.pl>.
  This is currently an external user-supplied program, so if you have
  issues with the script, please contact the author.

  [1m10.3.  Adding support for an external tuner.[0m

  mythtv supports changing the channel on an external tuner.  If you
  have an external tuner, such as a DirecTV or digital cable set top
  box, the following command should be added to your settings.txt file:

       str ExternalChannelCommand=/usr/local/bin/changechannel

  The [1mchangechannel [22mprogram is not supplied with mythtv, so this is
  going to be dependant on what sort of external tuner you have.  An
  example script can be obtained from http://tarek.2y.net/myth/sony.pl
  <http://tarek.2y.net/myth/sony.pl>.  This is currently an external
  user-supplied program, so if you have issues with the script, please
  contact the author.

  Feel free to browse some of what sort of hardware is available at
  http://shop.store.yahoo.com/snapstreammedia/cablepacks.html
  <http://shop.store.yahoo.com/snapstreammedia/cablepacks.html>, or if
  you wish to assemble your own, rather than purchase, the following may
  be helpful: http://www.snapstream.com/products/irblaster/sonydss.htm
  <http://www.snapstream.com/products/irblaster/sonydss.htm> for cable
  pinouts for RCA DSS receivers.

  [1m11.  mythweb.[0m

  mythweb allows you to use a web page to control various aspects of
  your mythtv system.  mythweb is a separate application, but it's
  dependant on mythtv being installed and operational.

  [1m11.1.  Installation and pre-requisites.[0m

  Download mythweb from http://www.mythtv.org/ <http://www.mythtv.org/>
  and save it to a location where you can find it.  The next step
  depends on whether your distribution has a web server and if you have
  php support.

  [1m11.1.1.  Mandrake 9.0[0m

  Mandrake 9.0 has [1mapache [22mand [1mphp [22mpre-packaged, so installation is quite
  simple.  Once you have installed the two programs, either with the
  graphical installer (see instructions in ``Graphic Install Tools'') or
  through the command line (section ``Command Line''), and you've
  ensured that the [1mapache [22mserver will start at boot using the Mandrake
  Control Center.

  [1m11.2.  Completing the installation.[0m

       % tar -xjf mythweb-0.7.tar.bz2
       % cd mythweb-0.7
       % su
       # mkdir /var/www/html/mythweb
       # cp -r . /var/www/html/mythweb
       # exit
       %

  To access the web page, open a web browser and use [1mhttp://[name or ip[0m
  [1maddress]/mythweb/[0m

  [1mNOTE[22m: Make sure that you have a trailing slash on the URL, otherwise
  you will get a 404 Page not Found error.

  [1m12.  mythgallery.[0m

  mythgallery is a photo and slideshow application.  mythgallery is a
  separate application, but it's dependant on mythtv being installed and
  operational.

  [1m12.1.  Installation and pre-requisites.[0m

  Download mythgallery from http://www.mythtv.org/
  <http://www.mythtv.org/> and save it to a location where you can find
  it.

       % tar -xjf mythgallery-0.7.tar.bz2
       % cd mythgallery-0.7
       % make
       # su
       # make install
       # exit
       %

  The configuration file for mythgallery is located in
  /usr/local/share/mythtv.  This file needs to be edited:  ensure that
  your GalleryDir variable is set to the directory where your pictures
  are stored.

  +o  Use the arrow keys to move around the thumbnails.

  +o  Use SPACE or ENTER to maximize a photo.

     +o  Use p or P to start the slideshow of all the files in the
        directory.  "Play" or "Pause" on your remote may also work.

     +o  Use SPACE or ENTER to advance to the next photo.

  +o  Use ESC to go up one level, or to exit out of the module if you're
     at the first level.

  [1m13.  mythgame.[0m

  [1m14.  mythmusic.[0m

  [Documentation still being developed.]

  mythmusic has a number of pre-requisites that must be satisfied before
  it is operational.  Depending on your distribution, some of these
  prerequisites can be satisfied through the various package managers.
  If your distribution doesn't offer pre-compiled versions of the
  software below, then follow the generic instructions for manually
  compiling and installing the software.

  The pre-requisites for mythtmusic are:

  +o  MAD

  +o  libvorbis-devel

  +o  FLAC

  +o  libcdaudio

  +o  CDParanoia

  [1m14.1.  Manual installation of pre-requisites[0m

  These instructions are for distributions which don't have pre-compiled
  versions of the software necessary to run mythtv.

  Download MAD from http://www.mars.org/home/rob/proj/mpeg/
  <http://www.mars.org/home/rob/proj/mpeg/>  Save it to a directory you
  can find later.

       % tar -xzf mad-0.14.2b.tar.gz
       % cd mad-0.14.2b
       % ./configure
       % make
       % su
       # make install
       # exit
       %

  Download FLAC from http://flac.sourceforge.net
  <http://flac.sourceforge.net> and install:

       % tar -xzf flac-1.0.4.tar.gz
       % cd flac-1.0.4
       % ./configure
       % make
       % su
       # make install
       # exit
       %

  Download and install libcdaudio:

       % tar -xzf libcdaudio-XXXXX
       % cd libcdaudio-XXXXX
       % ./configure
       % make
       % su
       # make install
       # exit
       %

  Download cdparanoia from the website and copy
  interface/cdda_interface.h to /usr/local/include

  /usr/lib: ln -sf libcdda_interface.so.0.9.8 libcdda_interface.so ln
  -sf libcdda_paranoia.so.0.9.8 libcdda_paranoia.so

  [1m14.2.  Mandrake 9.0[0m

  Mandrake 9.0 has a number of the pre-requisites available on the
  installation CD.  Some of the software you're going to need will have
  to be obtained from the " contrib" or "cooker" development
  repositories.  Applications downloaded from " cooker" come from the
  development branch, so there may be issues with some software.

  Install libvorbis-devel using urpmi or the Mandrake Control Center
  installer.

  Install cdparanoia using urpmi or the Mandrake Control Center.

  Once all the pre-requisites have been installed, you can proceed with
  getting mythmusic going.

       % ./configure
       % make
       % su
       # make install
       # exit
       % cd musicdb
       % mysql -u root < metadata.sql

  Edit the /usr/local/share/mythtv/mythmusic-settings.txt file for your
  particular system.

  [1m15.  Troubleshooting.[0m

  [1m15.1.  Illegal Instruction.[0m

  This error can happen for the following reasons:

  +o  You have an AMD K6-2 or VIA C3 processor.  If you have either of
     these, make sure that you you followed the instructions in this
     ``section''.

  +o  You have an Intel Celeron or Pentium Pro.  If you have either of
     these processors, make sure that your ``deinterlace'' variable is
     set correctly.

  [1m15.2.  mythfilldatabase failing.[0m

  If mythtvfilldatabase appears to be failing, edit the
  /usr/lib/perl5/site_perl/5.8.0/XMLTV/ZapListings.pm file and perform a
  global search and replace, searching for "tvlistings2" and replacing
  it with "tvlistings".

  [1m15.3.  mythtv seems to disappear; can't see video[0m

  If you're using Gnome as your window manager, try switching to KDE.
  For Red Hat Linux 8.0 users, edit /etc/sysconfig/desktop and change
  "GNOME" to "KDE".

  [1m15.4.  Fast CPU, choppy video.[0m

  This is most likely because your hard drive isn't setup to use DMA.
  Use the [1mhdparm [22mprogram to check and enable DMA.

