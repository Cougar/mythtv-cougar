  Installing and using MythTV
  Robert Kulagowski,  <mailto:rkulagow@rocketmail.com>
  2003-02-10, v1.091

  Initially, installation of MythTV seems like a huge task.  There are
  lots of dependencies, and various distributions seem to do the same
  thing different ways.  This document will attempt to give general
  installation instructions, as well as including distribution-specific
  instructions where necessary.
  ______________________________________________________________________

  Table of Contents

  1. How to obtain this document.
  2. Introduction.
  3. Checking prerequisites.
     3.1 Hardware.
     3.2 Software.
        3.2.1 Graphical installation tools.
           3.2.1.1 Mandrake 9.0
           3.2.1.2 Red Hat Linux 8.0
        3.2.2 Command-line installation.
           3.2.2.1 Mandrake
              3.2.2.1.1 Special instructions for Mandrake 8.2
              3.2.2.1.2 Mandrake 8.2 and 9.0
           3.2.2.2 Red Hat Linux 8.0
           3.2.2.3 Gentoo.

  4. Setting up paths, ldconfig and other shell variables.
     4.1 Distribution-specific information.
        4.1.1 Mandrake 9.0
        4.1.2 Red Hat Linux 8.0
     4.2 Checking QTDIR and the PATH.
     4.3 Modifying /etc/ld.so.conf

  5. Downloading and compiling.
     5.1 Notes on compiling on a system with non-Intel processors.
     5.2 Building LAME.
     5.3 Building XMLTV.
     5.4 Manually building MythTV.
     5.5 Gentoo.
     5.6 Debian.

  6. MySQL.
     6.1 Mandrake 9.0
     6.2 Red Hat Linux 8.0
     6.3 Gentoo.
     6.4 Setting up the initial database.
        6.4.1 Mandrake 9.0
        6.4.2 Debian 3.0
        6.4.3 Red Hat Linux 8.0
        6.4.4 Gentoo

  7. Setting up ALSA and the mixer.
     7.1 Graphically setting up the mixer.
        7.1.1 Mandrake 9.0
        7.1.2 Red Hat Linux 8.0
           7.1.2.1 Using OSS drivers.
           7.1.2.2 Using ALSA drivers.
     7.2 Setting the mixer from the command line.

  8. Setting up a remote control.
     8.1 Gentoo
     8.2 Mandrake
        8.2.1 Obtaining the kernel.
     8.3 Red Hat Linux 8.0
     8.4 Obtaining and compiling lirc.
        8.4.1 Recompiling your kernel on Red Hat Linux
     8.5 Completing the lirc install.
     8.6 Additional information for lirc.
     8.7 Configuring lirc for use with an IR blaster.

  9. Configuring MythTV.
     9.1 Editing the settings.txt file.
     9.2 Running setup.
     9.3 Running mythfilldatabase.
        9.3.1 Setting mythfilldatabase to run from cron

  10. Using MythTV.
     10.1 Using themes with MythTV.
     10.2 Adding DirecTV information to the database.
     10.3 Adding support for an external tuner.

  11. MythWeb.
     11.1 Installation and pre-requisites.
        11.1.1 Mandrake 9.0
     11.2 Completing the installation.

  12. MythGallery.
     12.1 Installation and pre-requisites.

  13. MythGame.
  14. MythMusic.
     14.1 Manual installation of pre-requisites
     14.2 Mandrake 9.0
     14.3 Compiling MythMusic.

  15. MythWeather
  16. MythVideo
  17. Troubleshooting.
     17.1 Illegal Instruction.
     17.2 mythfilldatabase failing.
     17.3 MythTV seems to disappear; can't see video
     17.4 Fast CPU, choppy or jittery video.
     17.5 I keep losing all of my settings every time I compile!
     17.6 Compile errors.
     17.7 My screen goes blank, but comes back when I wiggle the mouse or use the keyboard.
     17.8 I can't checkout using CVS anymore!
     17.9 I get segfaults / MythTV isn't doing anything.
     17.10 MythTV makes my system crash.
     17.11 Troubleshooting audio
     17.12 MythWeather is showing me the weather in the Bahamas!
     17.13 I can't see parts of the On Screen Display.

  18. Miscellaneous.
     18.1 I'd like to watch the files without using MythTV / I'd like to convert the files to some other format.
     18.2 I'd like to use some other window manager.
     18.3 I'd like MythTV to automatically startup.
     18.4 What resolution should I use?
     18.5 I'd like to delete the mysql database.
     18.6 I'd like to start using the development version of MythTV.

  ______________________________________________________________________

  [1m1.  How to obtain this document.[0m

  This HOWTO document is maintained at the primary MythTV website:
  http://www.mythtv.org < http://www.mythtv.org>.  The latest version of
  this document can be found in CVS, accessible either through the
  ViewCVS <http://cvs.mythtv.org/cgi-bin/viewcvs.cgi/> web interface, or
  directly from the CVS repository.  You may download the latest copy of
  MythTV and the documentation from CVS this way:

       $ mkdir mythtv
       $ cd mythtv
       $ cvs -d :pserver:mythtv@cvs.mythtv.org:/var/lib/cvs login
       Logging in to :pserver:mythtv@cvs.mythtv.org:/var/lib/cvs
       CVS password: mythtv
       $ cvs -z3 -d :pserver:mythtv@cvs.mythtv.org:/var/lib/cvs checkout MC

  This documentation will be in the docs/ subdirectory.

  [1mNOTE[22m: If you are going to use CVS to compile MythTV rather than using
  the distribution tarballs, it is [1mstrongly [22mrecommended that you join
  <http://www.snowman.net/mailman/listinfo/mythtv-commits/> the mythtv-
  dev mailing list.

  This HOWTO is for MythTV v0.7.

  [1m2.  Introduction.[0m

  This HOWTO document will focus on MythTV in a North American
  environment.  If you have installation instructions for a different
  region or Linux distribution, please send them to the author so that
  it can be included in other versions of this document.

  The contributors to MythTV are:

  +o  Lead developer:  Isaac Richardson,  <mailto:ijr@po.cwru.edu>

  +o  Developer:  Matthew Zimmerman,  <mailto:mdz@debian.org>

  +o  Overall structure of HOWTO and Mandrake 9.0 documentation: Robert
     Kulagowski,  <mailto:rkulagow@rocketmail.com>

  +o  Red Hat Linux 8.0 documentation: Cedar McKay,
     <mailto:mythhowto.3.ohthetrees@spamgourmet.com>

  +o  Gentoo documentation and package: Tony Clark,
     <mailto:tclark@telia.com>

  +o  Debian package: Matthew Zimmerman,  <mailto:mdz@debian.org>

  +o  Mandrake 8.2 documentation: Harondel J. Sibble,
     <mailto:help@pdscc.com>

  [1m3.  Checking prerequisites.[0m

  [1m3.1.  Hardware.[0m

  MythTV is a software video encoder, which means that it uses a fairly
  generic "dumb" video capture card to get frames of video, encodes them
  using the CPU on your motherboard and writes them to disk.  High-end
  video capture cards and devices like the Tivo and RePlay have
  dedicated encoder chips which use specialized hardware to convert the
  video stream to the MPEG-2 format without using the motherboard CPU.
  The main CPU has the responsibility of running the Operating System
  and reading and writing the encoded frames to the disk.  These tasks
  have fairly low CPU requirements compared to encoding video, which is
  why a device like a Series 1 Tivo can run with only 16MB of RAM and a
  54Mhz CPU.

  Currently, there are no known MPEG-2 encoder cards that have
  video4linux drivers which would be suitable for use with MythTV.  Once
  the drivers are written, support for hardware MPEG-2 encoders can be
  integrated.

  There are many variables that go into the question: "How fast a CPU do
  I need to run MythTV"?  Obviously, the faster your CPU, the better
  your experience will be with MythTV.  Performing the "Watch TV"
  function, where the CPU is both encoding and decoding video
  simultaneously to allow Pause, Fast Forward and Rewind functions for
  live TV requires more CPU then just encoding or decoding.  MythTV also
  supports multiple encoder cards in a single PC, thereby increasing the
  CPU requirements if you plan on simultaneously encoding multiple
  programs.

  Here are a few data points:

  +o  A PIII/733Mhz system can encode one video stream using the RTJPEG
     codec using 512x480 capture resolution.  This does not allow for
     live TV watching, but does allow for encoding video and then
     watching it later.

  +o  The developer states that his AMD1800+ system can [1malmost [22mencode two
     MPEG4 video streams and watch one program simultaneously.

  +o  A PIII/800Mhz system with 512MB RAM can encode one video stream
     using the RTJPEG codec with 480x480 capture resolution and play it
     back simultaneously, thereby allowing live TV watching.

  +o  A dual Celeron/450Mhz is able to view a 480x480 MPEG4/3300Kbps file
     created on a different system with 30% CPU usage.

  [1mNOTE[22m:  You [4mmust[24m use DMA for hard drive access to prevent choppy or
  jittery video.  Red Hat Linux 8.0 apparently does not enable DMA at
  boot time.  See the Troubleshooting Section for ``instructions'' on
  how to do this.

  Mark Cooper has setup a hardware database at
  http://www.goldfish.org/~mcooper/pvrhw/
  <http://www.goldfish.org/~mcooper/pvrhw/>.  The website will let you
  browse what other users have reported as their hardware configuration,
  and how happy they are with the results.

  [1m3.2.  Software.[0m

  There are a few ways of installing programs on Linux systems; you can
  either use the graphical tools that come with your distribution, or
  you can use command-line utilities.  Either system will get the job
  done, and it all depends on your comfort level with Linux.

  [1mNOTE[22m: If you are using MythTV on multiple systems, at least one of
  them will maintain the master database and will need mysql installed.

  In order to compile MythTV, we need to make sure that the software it
  needs is installed.  As of 2002-12-17, this list includes [1mperl[22m, [1mmysql[22m,
  [1mgcc[22m, [1mfreetype2-devel[22m, [1mXFree86-devel [22mand [1mqt-devel[22m.  If you're going to
  use a remote control with MythTV, you're going to need the [1mcdialog[0m
  package in order to compile [1mlircd[22m.

  There appears to be issues with ALSA and simultaneously recording and
  playing sound, which is a core requirement for MythTV.  If you are not
  running ALSA 0.9.0rc6 and experience lock-ups of your system when
  trying to use MythTV, then please check the main ALSA website and
  upgrade to the latest version, or see if your distribution has already
  packaged the latest ALSA drivers.

  [1m3.2.1.  Graphical installation tools.[0m

  [1m3.2.1.1.  Mandrake 9.0[0m

  On systems running KDE, a tool which will allow you to see what
  packages are available and if they're installed on your system can be
  accessed by clicking K->Configuration->Packaging->KPackage

  There are many inter-related modules, so make sure that you've got the
  main package for each one, and not a sub package for an unrelated
  item.  For example, there are many modules that have "perl" in them;
  some are a part of the apache web server, others are a part of the
  perl distribution.  In each case, we're looking to make sure that the
  primary module is getting installed.

  Click the magnifying glass or press [1mCTRL-F [22mand enter "perl" as your
  search term.  You should find it under the "Perl" folder.  You need at
  least the perl 5.80 base package installed.  If not, click on the
  "Mark" button.

  If you are going to be installing mysql on this system, search for
  mysql - it should be under "Databases".  Make sure that mysql and
  mysql-clients are installed.  If not, click on "Mark".

  Search for gcc.  You're going to need gcc and gcc-c++ installed.

  Search for freetype2.  Make sure that you've got freetype2 and
  freetype2-devel installed.

  Search for XFree86-devel.

  Finally, check for qt.  You'll need libqt3-devel (under folder "KDE
  and Qt") and libqt3 ("Libraries").

  Make sure that cdialog is installed if you want to use MythTV with a
  remote control.

  alsa-utils is needed for setting the volume.

  If you marked anything to install, click on Install Marked.  Click
  "Yes" or OK if you get a message about satisfying dependencies.

  [1m3.2.1.2.  Red Hat Linux 8.0[0m

  Red Hat Linux 8.0 does not have the same graphical package manager
  used by other distributions, so you will need to use Red Hat's package
  manager.  This is the same utility you saw upon installation from the
  Red Hat Linux 8.0 installation CD, and it allows you to select
  packages at installation time, or once the system is up and running.
  You can access this program by selecting

  RedHatMenu>System Settings>Packages

  If you did a typical Desktop install of Red Hat Linux 8.0 make sure
  you have selected:

  +o  KDE Desktop Environment

  +o  SQL Database Server -  you will have to click on "details" and make
     sure "mysql-server" is checked.  (only required on the master
     system)

  +o  Development Tools

  +o  X Software Development

  +o  KDE Software Development

  +o  Kernel Development

  Click Install to continue.

  You can not install qt-MySQL, a necessary prerequisite, graphically.
  To install this package using the command line do

       $ up2date --solvedeps qt-MySQL

  [1m3.2.2.  Command-line installation.[0m

  This section details the various methods for installing pre-requisites
  from the command line.

  [1m3.2.2.1.  Mandrake[0m

  [1murpmi [22mis the simplest tool for installation of packages from the
  command line.  The difficult part is the configuration aspect.  The
  following website http://plf.zarb.org/~nanardon/urpmiweb.php
  <http://plf.zarb.org/~nanardon/urpmiweb.php> will allow you to choose
  a mirror site and then present the command-line configuration text for
  that mirror.  You will most likely need to add a "Contrib" mirror to
  your setup.

  [1m3.2.2.1.1.  Special instructions for Mandrake 8.2[0m

  Mandrake 8.2 does not have a pre-packaged libqt3-devel, so you must
  compile and install this manually.  The following command will install
  the pre-requisites for qt3, so don't skip this step.  The simplest
  tool for installing packages from the command line is [1murpmi[22m.

  Open a shell, and execute the following.  You may get asked a number
  of questions regarding dependencies.  It's best to answer "YES".

       $ urpmi mesa-common-devel libmng1-devel mysql-devel libunixodbc2-devel
       $ urpmi postgresql-devel xfree86-static-libs

  Once all of the pre-requisites have been installed, the next step is
  to obtain and compile the source RPM.

  Go to http://www.rpmfind.net <http://www.rpmfind.net> and search for
  qt3.  There will be a number of different versions available.  As of
  2002-12-02, the latest version for Mandrake is called
  qt3-3.0.5-7mdk.src.rpm. Unless you are running [1mMandrake Cooker [22m(the
  beta version of the next release of Mandrake), make sure to download
  the standard "Mandrake" release.  Download the .src.rpm file to a
  directory that you can find.

       $ su
       # cp qt3-3.0.5-7mdk.src.rpm /usr/src/RPMS/SRPMS
       # cd /usr/src/RPMS/SRPMS
       # rpm --rebuild qt3-3.0.5-7mdk.src.rpm
       # cd ../RPMS
       # ls -l

  The "ls -l" command will show you a directory listing.  There should
  be two files, one will be named "qt3" and the other will be
  "qt3-devel".  The full filenames will vary, so one you know the file-
  name, you can install them with

       # rpm -Uvh [filename1]
       # rpm -Uvh [filename2]

  Once this has completed (it can take a while, so please be patient),
  continue by following the Mandrake 9.0 instructions.

  [1m3.2.2.1.2.  Mandrake 8.2 and 9.0[0m

  The simplest tool for installing packages from the command line is
  [1murpmi[22m.

  Open a shell, and execute the following, all on the same line. You may
  get asked a number of questions regarding dependencies.  It's best to
  answer "YES".

       $ su
       # urpmi perl mysql gcc gcc-c++ freetype2-devel cdialog alsa-utils
       # urpmi XFree86-devel

  [1mNOTE[22m: Mandrake 8.2 users, [4mdo[24m [4mnot[24m execute the following command.
  You've already manually installed the files in the previous section.

       # urpmi libqt3-devel

  However, you might get this when you execute the command above:

       [root@pvr root]# urpmi perl mysql gcc gcc-c++ freetype2-devel libqt3-devel cdialog alsa-utils XFree86-devel
       everything already installed

  In that case, you're ready to move to the next ``section''.

  [1m3.2.2.2.  Red Hat Linux 8.0[0m

  [Please submit instructions]

  [1m3.2.2.3.  Gentoo.[0m

  If KDE has not been installed on your system: Edit /etc/make.conf and
  locate the "USE" variable. If the line is commented out, remove the
  comment. The line should have at least:

  USE="mysql qt alsa"

  Next you need to build KDE. If you don't plan on using the ebuilds as
  described in the Gentoo section then you also need to install lame.

       $ emerge kde lame mysql

  If KDE has already been installed, by default, QT libraries with SQL
  support are not built. To enable SQL support, add "mysql qt" to your
  USE variable in /etc/make.conf and rebuild QT by running

       $ emerge qt

  Install MySQL if this is the master system:

       $ emerge mysql

  All the necessary files will be downloaded and built. This will take a
  lot of time, even on a fast machine if you have to do a full KDE
  build.

  [1m4.  Setting up paths, ldconfig and other shell variables.[0m

  There are modifications that need to be made to your system before you
  start compiling.

  QTDIR needs to be set, and /usr/lib/qt3/bin must be added to your
  path.  Your distribution may already be making these changes as a part
  of the installation of the software pre-requisites detailed earlier.

  [1m4.1.  Distribution-specific information.[0m

  [1m4.1.1.  Mandrake 9.0[0m

  The following instructions work for Mandrake 9.0 using bash as the
  shell, and may be applicable for a distribution which uses
  /etc/profile.d.

  As root, create the following file in /etc/profile.d  The example
  filename is "mythtv.sh".  Use what you feel is appropriate.

  Open a shell, and switch to superuser mode.  [1mNOTE: ^D [22mmeans press [1mCTRL[0m
  and [1md [22mat the same time.

  $ su
  # cd /etc/profile.d
  cat > mythtv.sh
  export QTDIR=/usr/lib/qt3
  export PATH=$PATH:/usr/lib/qt3/bin
  ^D

  # chmod a+x mythtv.sh
  # exit
  $ exit

  The last two commands are to exit out of the shell.  This way, when
  you next open a shell your new commands will take effect.

  [1m4.1.2.  Red Hat Linux 8.0[0m

  Red Hat Linux 8.0 uses an unusual character encoding scheme which
  causes problems when running certain programs. As a result, whenever
  you run setup or mythfilldatabase you will have to set a variable to
  correct this problem.  Failure to set this variable will result in a
  lot of UTF-8 errors.

  There are two modifications that you can make to your system to avoid
  this problem. The first is a system wide solution, the second will
  only apply to your current user.

  The global change is to modify the /etc/sysconfig/i18n file and set
  LANG="en_US".  If you want the change to only affect a single user,
  you could create a file called ~/.i18n:

       $ cat > ~/.i18n
       LANG="en_US"
       ^D
       $ exit

  [1m4.2.  Checking QTDIR and the PATH.[0m

  Open a new shell and switch to superuser mode.

       $ su
       # set

       [lots of text]
       QTDIR=/usr/lib/qt3
       PATH=/usr/local/bin:/bin:/usr/bin:/usr/X11R6/bin:/usr/games:/usr/lib/qt3/bin:/home/mythtv/bin:/usr/lib/qt3/bin

  You should see QTDIR and /usr/lib/qt3/bin in your path.

  If you don't, do not proceed past this step until you have resolved
  this error.  You may need to manually specify the QTDIR and PATH at
  the shell prompt before compiling.

  Next, we need to make sure that the libraries that we're building will
  be found when we need them.

  [1m4.3.  Modifying /etc/ld.so.conf[0m

  Switch to /etc and execute the following:

       # cd /etc
       # cat >> ld.so.conf
       /usr/local/lib
       ^D

       # /sbin/ldconfig
       # exit
       $

  [1mNOTE[22m:  It appears that Red Hat Linux 8.0 requires that the [1mldconfig[0m
  command needs to be run twice. Red Hat will also frequently "forget"
  about the path. It's recommended to run [1m/sbin/ldconfig [22mafter
  installing every package. Failing that, always run it if you get an
  unexpected error about not finding libraries.

  [1m5.  Downloading and compiling.[0m

  Get MythTV from the mythtv.org <http://www.mythtv.org> web site.  Save
  the tarball to a directory you can find.

  Get XMLTV from http://xmltv.sourceforge.net
  <http://xmltv.sourceforge.net>.  Download version 0.5.7

  Get lame from http://www.mp3dev.org/mp3 <http://www.mp3dev.org/mp3>.
  Download the source code to v3.93.1 by following the links to
  sourceforge.net

  [1m5.1.  Notes on compiling on a system with non-Intel processors.[0m

  If you've got a system with an AMD K6-2 or a VIA C3 processor, make
  the following change in the settings.pro file.

  Look for

  -march=pentiumpro

  and replace it with

  -march=i586

  before you compile.

  Recent AMD processors, like the Duron, Thunderbird and Athlon don't
  need this change.

  [1m5.2.  Building LAME.[0m

  Open a shell and switch to the directory where you saved lame.

  $ tar -xzf lame-3.93.1.tar.gz
  $ cd lame-3.93.1
  $ ./configure
  $ make
  $ make test
  $ su
  # make install

  Check that it worked:

       # ls -l /usr/local/lib
       -rw-r--r--    1 root     root       381706 Nov  4 14:22 libmp3lame.a
       -rwxr-xr-x    1 root     root          674 Nov  4 14:22 libmp3lame.la*
       lrwxrwxrwx    1 root     root           19 Nov  4 14:22 libmp3lame.so ->
       libmp3lame.so.0.0.0*
       lrwxrwxrwx    1 root     root           19 Nov  4 14:22 libmp3lame.so.0 ->
       libmp3lame.so.0.0.0*
       -rwxr-xr-x    1 root     root       360197 Nov  4 14:22
       libmp3lame.so.0.0.0*

       # exit
       $

  [1m5.3.  Building XMLTV.[0m

  [1mNOTE[22m: Red Hat Linux 8.0 and Suse 8.1 users, you [4mmust[24m download and
  install an updated version of libexpat.  The version that ships with
  Red Hat Linux 8.0 and Suse 8.1 (version 1.95.4) is buggy, and will
  cause problems with XML::Twig. All other distributions may skip this
  step and proceed with ``untar'ing'' the xmltv file.

  If you get errors installing XML::Twig or other XMLTV prerequisites,
  try deleting the old versions of libexpat

       $ su
       # rm -f /usr/lib/libexpat*
       # /sbin/ldconfig
       # exit

  Download version 1.95.5 from sourceforge.net:
  http://sourceforge.net/projects/expat/
  <http://sourceforge.net/projects/expat/>

  Open a shell prompt:

  $ tar -xzf expat-1.95.5.tar.gz
  $ cd expat-1.95.5
  $ ./configure
  $ make
  $ su
  # make install
  # /sbin/ldconfig
  # exit
  $

  [1mNOTE[22m:  Red Hat Linux 8.0 users, make sure that you set your LANG as
  described in ``Section 4''.

  Continuing on:

  Untar the xmltv file:

       $ tar -xjf xmltv-0.5.7.tar.bz2
       $ cd xmltv-0.5.7

  Install the xmltv prerequisites:

       $ su
       # perl -MCPAN -e shell
       cpan> install XML::Twig
       cpan> install Date::Manip
       Date::Manip is up to date.
       cpan> install LWP
       cpan> install XML::Writer
       cpan> exit

  Change to the XMLTV directory and compile it:

       $ cd xmltv-0.5.7
       $ perl Makefile.PL

  You can answer "N" to the tv_check, tv_pick_cgi questions.  Say "yes"
  to the grabber required for your location.

  You may get errors about modules not being installed.  They shouldn't
  matter if you're installing North America and have followed the
  instructions to this point.

       $ make
       $ make test
       $ su
       # make install
       # exit

  [1m5.4.  Manually building MythTV.[0m

  Unpack MythTV

       $ tar -xjf mythtv-0.7.tar.bz2
       $ cd mythtv-0.7
       $ ./configure
       $ make

  [1mNOTE for Red Hat 8 users only[22m: You must manually modify a Makefile
  within the themes directory, otherwise your on screen display (OSD)
  will be "generic" rather than themed.  The solution is to edit the
  Makefile within the themes directory and comment out (using a # symbol
  before each line) every line that starts with the word "strip". Make
  sure you switch back to the MythTV build directory before executing
  the next step.

  Switch to superuser:

       $ su
       # make install
       # exit

  [1m5.5.  Gentoo.[0m

  Installation of MythTV on Gentoo consists of making a local portage
  directory with the necessary ebuild and digest files.  Tony Clark
  <mailto:tclark@telia.net> has created a portage file which can be
  downloaded from http://smalltime.com/mythtv/mythtv-gentoo-
  portage.tar.bz2 <http://smalltime.com/mythtv/mythtv-gentoo-
  portage.tar.bz2>

  Once you have downloaded the portage file, installation is simple.

       $ su -
       # emerge rsync # make sure portage is up to date.
       # cd /usr/local
       # tar xvfjp Path_To/mythtv-gentoo-portage.tar.bz2
       # vi /etc/make.conf

  Add mysql to your USE variable.  ie USE="mysql ...."

  Locate the line that contains: #/usr/local/portage and remove the #

       # ACCEPT_KEYWORDS="~x86" emerge mythtv

  [1mNOTE[22m: If you have perl dependency problems update to >=ExtUtils-
  MakeMaker-6.05-r4

  [1m5.6.  Debian.[0m

  Debian packages for MythTV and some of its add-on modules have been
  packaged by Matt Zimmerman  <mailto:mdz@debian.org> and are available
  at http://dijkstra.csh.rit.edu:8088/~mdz/debian/dists/woody/mythtv/
  <http://dijkstra.csh.rit.edu:8088/~mdz/debian/dists/woody/mythtv/>,
  including installation instructions.  All of the prerequisites for
  MythTV are available as Debian packages.

  The mailing list message for this announcement can be accessed at
  http://www.snowman.net/pipermail/mythtv-dev/2002-November/001116.html
  <http://www.snowman.net/pipermail/mythtv-
  dev/2002-November/001116.html>.

  [1m6.  MySQL.[0m

  [1m6.1.  Mandrake 9.0[0m

  If this is the master system, make sure that mysql is running and
  started at boot.  Click on Mandrake Control Center->System->Services,
  find mysql and click the "On Boot" button and the "Start" button if
  the mysql status shows that it isn't running yet.

  [1mNOTE[22m:  There have been reports that mysql isn't starting at boot.

       $ su
       # chkconfig --level 35 mysql on
       # /etc/rc.d/init.d/mysql start
       # exit

  [1m6.2.  Red Hat Linux 8.0[0m

  If this is the master system, make sure that mysql is running and
  started at boot. Click on Redhat menu>Server Settings>Services and
  enter the root password when asked.  Check "mysqld" and then click
  Start. Click Save, then close the window.

  [1m6.3.  Gentoo.[0m

  After installing mysql you need to initialise the database by running
  mysql_install_db as root.

  [1m6.4.  Setting up the initial database.[0m

  This step is only required for systems that will be maintaining a
  database of listings.  If you are running multiple MythTV systems you
  can either have one master database read by all the other systems, or
  you can have each system maintaining its own.  To setup the initial
  mysql databases:

       $ cd database

  [1m6.4.1.  Mandrake 9.0[0m

       $ mysql -u root < mc.sql

  [1m6.4.2.  Debian 3.0[0m

       $ mysql < mc.sql

  [1m6.4.3.  Red Hat Linux 8.0[0m

       $ su
       # mysql < mc.sql

  [1m6.4.4.  Gentoo[0m

       $ su
       # mysql < /usr/share/mythtv/database/mc.sql

  [1m7.  Setting up ALSA and the mixer.[0m

  If your video doesn't appear to be in-sync with your audio, it could
  be because you are listening to the real-time audio from your video
  card rather than after it's been processed and synchronized to the
  video by MythTV.

  What you need to do is to mute the "line-in" of your sound card and
  also set it as the recording source.

  There are two ways to do this.  Graphically, and from the command
  line.

  [1m7.1.  Graphically setting up the mixer.[0m

  [1m7.1.1.  Mandrake 9.0[0m

  Open Kmix by K->Multimedia->Sound->Kmix

  Click on Settings->Configure  Make sure that "Tick Marks" and "Show
  labels" have "X"'s in them.  This will make it easier to find the
  correct audio source.  Click OK.

  On the mixer page, look for Line-In on your sound card.  You should
  see two LED's - a green one at the top, and a red one at the bottom.
  The green one at the top is for muting; you want to make sure that the
  green LED is a dark green, meaning that it's "off".  You also want to
  click on the red LED so that it turns bright red, indicating that it's
  "ON"; this insures that the Line-in is used as the source.  Click OK,
  and make sure that you save the settings so that this is your default.

  [1m7.1.2.  Red Hat Linux 8.0[0m

  [1m7.1.2.1.  Using OSS drivers.[0m

  Red Hat Linux 8.0 ships with OSS sound drivers rather than the ALSA
  drivers recommended by the MythTV team. The OSS drivers do work for
  some people, and for some cards, but others report problems (sync and
  jitter) with OSS. In addition, OSS does not support full duplex on
  some cards, which is required if you want to record and play sound
  using just one sound card.  ALSA has good full duplex support, and
  also has drivers for some built-in (motherboard) sound cards that OSS
  does not. Installing ALSA is less painful than you might think, so we
  encourgage you to go that route. For those of you who do not wish to
  install ALSA you must do this:

  To configure sound to work with MythTV, select

  RedHat Menu>Sound & Video>Volume Control

  to open up a mixer. Make sure your global volume (on the far left) is
  up. Also make sure that the "line in" section has "mute" and "record"
  checked and that the gain is turned up. You may have to experiment
  with volume/gain levels to get the best sound.  If you experience dif-
  ficulty with sound try moving your patch cord from "Line in" to "Mic
  in". You will need to go back to the mixer and select "mute" and
  "record" on the "Mic in" and turn up the gain for the Mic rather than
  Line.

  [1m7.1.2.2.  Using ALSA drivers.[0m

  For those of you who do want to install ALSA please follow the
  directions below, compiled with much assistance from Gregorio
  Gervasio.

  First you must find out the name of your driver, which isn't
  necessarily the same as the name of your sound card. Go to
  http://www.alsa-project.org/alsa-doc/ <http://www.alsa-
  project.org/alsa-doc/>, find your sound card on the list and click
  "details". Near the top it will say something like "The module options
  for snd-XXX", where XXX is the name of your driver. In the
  instructions below, replace "XXX" with the name of your driver.

  Download the development release (0.9.x) from the ALSA web site
  http://www.alsa-project.org <http://www.alsa-project.org>.  You need
  at least three files:

  +o  alsa-driver-0.9.x.tar.bz2

  +o  alsa-lib-0.9.x.tar.bz2

  +o  alsa-utils-0.9.x.tar.bz2

  Start with the alsa-driver package:

  $ tar -xjf alsa-driver-0.9.x.tar.bz2
  $ cd alsa-driver-0.9.x
  $ ./configure --with-cards=XXX --with-sequencer=yes
  $ make
  $ su
  # make install
  # ./snddevices
  # exit
  $

  This will compile and install the kernel modules and initialization
  scripts, as well as create device nodes in /dev.

  Install the rest of the packages:

       $ cd ~
       $ tar -xjf alsa-lib-0.9.x.tar.bz2
       $ cd alsa-lib-0.9.x
       $ ./configure
       $ make
       $ su
       # make install
       # exit
       $ cd ..
       $ tar -xjf alsa-utils-0.9.x.tar.bz2
       $ cd alsa-utils-0.9.x
       $ ./configure
       $ make
       $ su
       # make install

  Next, you must edit /etc/modules.conf so that the ALSA modules are
  loaded automatically. The first step is to remove your old OSS
  configuration to ensure that you don't end up with mysterious
  conflicts in the future.  You should end up with a /etc/modules.conf
  file that has this configuration:

       alias char-major-116 snd
       alias snd-card-0 snd-XXX
       # module options should go here
       # OSS/Free portion
       alias char-major-14 soundcore
       alias sound-slot-0 snd-card-0
       # card #1
       alias sound-service-0-0 snd-mixer-oss
       alias sound-service-0-1 snd-seq-oss
       alias sound-service-0-3 snd-pcm-oss
       alias sound-service-0-8 snd-seq-oss
       alias sound-service-0-12 snd-pcm-oss

  "XXX" should be the ALSA driver name for your sound card/chip. In some
  rare cases you need to supply extra options to the driver. These
  options are descried in the "INSTALL" file in the alsa-driver
  directory or at http://www.alsa-project.org/alsa-doc/
  <http://www.alsa-project.org/alsa-doc/>.

  For now we will assume that no extra options are required.  The next
  step is to ensure that the ALSA drivers are started during boot-up.

       $ su
       # cd /etc/rc.d/init.d
       # /sbin/chkconfig --add alsasound

  The next set of instructions will cause the ALSA volume/mixer/etc.
  state to be saved when the machine is shut down properly. Note that
  the mixer settings won't get restored the next time you boot unless
  you ran the shutdown script or you've explicitly saved the state which
  you can do as root with:

       # alsactl -f /etc/asound.state store

  Reboot your machine.  Login and adjust the sound levels using
  "alsamixer".  You should increase the main volume (the first slider)
  and the PCM volume, and unmute them by hitting "m".  For MythTV, if
  your tuner card audio output is patched to the Line-In input of your
  sound card, set the Line input for capture by pressing SPACE at the
  slider and mute it by pressing "M". If you've patched your tuner card
  to the Mic-In port of your soundcard, follow the same instructions but
  make sure that you're on the Mic slider.

  Test the driver by playing a simple file:

       $ aplay /usr/share/sounds/info.wav

  If it works, you're done installing ALSA!

  [1m7.2.  Setting the mixer from the command line.[0m

  If you're running Mandrake 9.0 and have installed the alsa-utils
  package, then the [1mamixer [22mprogram can be used to setup the mixer.

       $ amixer set Master,0 100%,100% unmute
       $ amixer set Line,0 100%,100% mute capture
       $ su
       # alsactl store
       # exit
       $

  That takes care of setting the volume correctly, and the ALSA startup
  script will restore the volume after a reboot.

  You may also use the [1malsamixer [22mprogram to set the volume.  First,
  start [1malsamixer [22mfrom the command line.  You should start out on the
  "Master" volume control slider.  Use the up and down cursor to set the
  master volume to around 75%.  Next, use the left and right cursor keys
  to move around on the screen until you find the "Line" slider.  Press
  SPACE to set it as the capture source, set the level to around 50-75%
  and press "M" to mute it.  You can now press ESC to exit out of the
  [1malsamixer [22mprogram.

  [1m8.  Setting up a remote control.[0m

  MythTV does not have native remote control receiver and decoder
  software built-in.  Instead, remote control functions are implemented
  by cooperating with [1mlirc[22m, the Linux Infra Red Control program.  [1mlirc[0m
  handles the IR hardware and passes keystrokes to MythTV, which then
  acts as if the user had pressed the keys on the keyboard.

  Some IR devices require a kernel recompile, and some don't. However,
  all at least require having the kernel source available as a resource
  for the lirc build process.

  [1m8.1.  Gentoo[0m

  To install lirc on Gentoo, all you need to do is:

       $ emerge lirc

  [1m8.2.  Mandrake[0m

  lircd has two prerequisites:  [1mdialog[22m, available in Mandrake through
  the "cdialog" RPM, and the kernel source.  Mandrake 9.0 is using the
  2.4.19 kernel, so the easiest thing is to go to http://www.kernel.org
  <http://www.kernel.org> and download the full 2.4.19 tar file from
  http://www.kernel.org/pub/linux/kernel/v2.4/
  <http://www.kernel.org/pub/linux/kernel/v2.4/>.

  [1m8.2.1.  Obtaining the kernel.[0m

  An easy way is to use the wget command:

       $ wget http://www.kernel.org/pub/linux/kernel/v2.4/linux-2.4.19.tar.bz2

  Next, open a shell and login as superuser.

  $ su
  # mkdir /usr/src
  # mv linux-2.4.19.tar.bz2 /usr/src
  # cd /usr/src
  # tar -xjf linux-2.4.19.tar.bz2
  # chown -R root.root linux-2.4.19
  # ln -sf linux-2.4.19 linux
  # exit
  $

  [1m8.3.  Red Hat Linux 8.0[0m

  You should already have the source from the "Kernel Development"
  package you installed in section 3.2. Ensure that a symlink has been
  created:

       $ cd /usr/src
       $ su
       # ln -s linux-2.4.18-x.x.x linux
       # exit

  [1m8.4.  Obtaining and compiling lirc.[0m

  You're going to need to download and compile lircd.  Go to
  http://www.lirc.org <http://www.lirc.org> and download lirc; as of
  2002-11-07, the version available is 0.6.6.  Grab the remotes.tgz file
  as well.

       $ tar -xjf lirc-0.6.6.tar.bz2
       $ cd lirc-0.6.6
       $ ./setup.sh

  You're going to need to know what sort of receiver you have and where
  it's connected.  In the case of the Pinnacle Studio TV card, with the
  IR receiver connected to COM1 (/dev/ttys0), once the configuration
  menu comes up, perform the configuration by going to Driver Configura-
  tion->Other Serial Port Devices->Pinnacle Systems Receiver->OK and on
  the next page select COM1->OK.

  Each remote is different; some remote receivers connect directly to
  your capture card and not to a serial port, so make sure that you've
  got the correct one.

  You then click "Save Configuration and run configure" to continue.

  Make sure you read the last text generated by the configure step. It
  will tell you if you require a kernel recompile, and what the name of
  your kernel module will be (if necessary). For instance a home-built
  receiver may require a kernel recompile, so you would be notified that
  you will have to load the lirc_serial module. If you did not get any
  such messages skip the kernel recompile steps below and go directly to
  making and installing the lirc driver.
  Once the configuration step is complete:

       $ make
       $ su
       # make install
       # chmod 666 /dev/lircd

  At this point, if you're using a serial receiver, check that the link
  has been correctly made in /dev

       $ ls -l /dev/li*
       lr-xr-xr-x    1 root     root            5 Jan 27 09:00 /dev/lirc -> ttyS0
       srw-rw-rw-    1 root     root            0 Jan 27 15:01 /dev/lircd=
       prw-r--r--    1 root     root            0 Jan 27 09:00 /dev/lircm|

  As you can see, there's a link from /dev/lirc to ttyS0, aka "COM1".

  If the link was not created, ensure that you ran the make install step
  as root.  If it still doesn't work, then you must create the link
  manually.  In this example, the IR device is connected to ttyS0.  If
  it were connected to "COM2", then use ttyS1, etc.

       $ su
       # cd /dev
       # ln -sf ttyS0 lirc
       # exit
       $

  [1m8.4.1.  Recompiling your kernel on Red Hat Linux[0m

  Don't Panic! Red Hat makes a kernel recompile very easy. They provide
  configuration files that make it so you can recompile your kernel with
  Red Hat defaults. And as a side benefit, your kernel will be compiled
  specifically for your architecture. For a more detailed description
  (or if you run into trouble) of how to do this go to
  http://www.redhat.com/docs/manuals/linux/RHL-8.0-Manual/custom-
  guide/ch-custom-kernel.html
  <http://www.redhat.com/docs/manuals/linux/RHL-8.0-Manual/custom-
  guide/ch-custom-kernel.html>

  For the impatient: Make sure you have an emergency floppy boot disk
  available!

       $ cd /usr/src/linux
       $ su
       # make mrproper
       # cd configs
       # ls

  at this point you must look at the file names and determine which
  config file is right for you. For instance if you have an Athlon XP
  you should choose "kernel-2.4.18-athlon.config" but if you have a dual
  processor P4 you might choose "kernel-2.4.18-i686-smp.config"

       # cp yourconfig.config ../.config
       # cd ../
       # make xconfig

  At this point you will get a graphical configuration utility. All that
  you must do to make lirc work is go to the "character devices" section
  and change "Standard/generic (8250/16550 and compatible UARTs) serial
  support" from "y" to "m". Now if you want you can have a look around.
  For instance, you might wish to turn off ham radio support, or perhaps
  turn off pcmcia support if you are not on a laptop. But be careful!
  Only change things you know you can change. If you are not sure, just
  stick to the one required change. Click "save and exit".  Next:

       # make dep
       # make clean
       # make bzImage modules
       # make modules_install
       # make install

  if you are using [1mgrub[22m, that should be it, reboot and select your
  custom kernel upon boot. If you are using [1mlilo[22m, change your lilo
  configuration according to
  http://www.redhat.com/docs/manuals/linux/RHL-8.0-Manual/custom-guide/
  s1-custom-kernel-bootloader.html
  <http://www.redhat.com/docs/manuals/linux/RHL-8.0-Manual/custom-guide/
  s1-custom-kernel-bootloader.html> Remember, if you have any custom
  kernel modules (alsa, etc) you will have to recompile/reinstall those.

  [1m8.5.  Completing the lirc install.[0m

  If configure did not mention anything about a kernel module, then you
  are finished. If it did mention a kernel module, you must edit the
  /etc/modules.conf file. Add this line as the first thing in the file.
  It must come first, or it may not work.

       alias char-major-61 XXX

  replace XXX with the name which you determined earlier, which in this
  example was "lirc_serial"

       $ su
       # modprobe lirc_serial
       # /sbin/ldconfig

  Next, we're going to manually start lircd the first time:

       # /usr/local/sbin/lircd

  If this fails, complaining of a missing lircd.conf file, then you must
  find or make one. First look for a premade configuration file at
  http://lirc.sourceforge.net/remotes/
  <http://lirc.sourceforge.net/remotes/>.  If you find one your remote
  there, download the file, name it lircd.conf and put it in your /etc
  directory. If you couldn't find your remote, you must make your own
  lircd.conf file.

  To make your own lircd.conf file

       $ irrecord myremote

  Follow the on-screen directions to train your remote and define keys.
  If your remote ends up working well, you should consider submitting
  your lircd.conf file back to the lirc developers. Once finished:

       $ su
       # cp myremote /etc/lircd.conf

  now try to start lircd again:

       # /usr/local/sbin/lircd

  Now, we're going to add the commands necessary for lircd to run each
  time we boot:

       # cd /etc/rc.d
       # cat >> rc.local
       echo "Starting lircd"
       /usr/local/sbin/lircd
       ^D
       # exit
       $

  This takes care of the lircd portion, which "listens" for the IR sig-
  nals. If everything went well, the install script for lircd put an
  appropriate configuration file for your remote into /etc/lircd.conf
  This file maps the buttons on the remote control to the IR pulses com-
  ing from the receiver.

  The next step is to convert those signals into something that can be
  used to control MythTV.

       $ cd ~/mythtv-0.7/configfiles
       $ cp lircrc.example ~/.lircrc

  or

       $ cp lircrc.example.pinnaclestudiopctv ~/.lircrc

  if you've got a Pinnacle Studio PCTV remote.

       $ irw

  Start pressing the keys on your remote; [1mirw [22mwill print the name of the
  button as it is defined in your /etc/lircd.conf. If you don't see any-
  thing at this point, you need to troubleshoot further by going back to
  the lirc home page and investigating from there.

  If it is working, then press [1mCTRL-C [22mto abort the program.  Once you
  know that your remote is working, you need to run the [1mirxevent[0m
  program, which takes the key presses and sends them to MythTV.
  [1mirxevent [22misn't a daemon, so if you know that your remote is working
  you need to invoke it like this:

       $ irxevent &

  If [1mirxevent [22misn't running, then MythTV will not respond to your remote
  control.

  Currently, MythTV doesn't have native support for controlling the
  mixer volume and mute settings.  A workaround at this time is to
  invoke the [1mamixer [22mprogram.  If you wish to define keys to control the
  mixer, the [1mirexec [22mprogram can accomplish this fairly easily.  The
  configfiles/lircrc.example.pinnaclestudiopctv file has an example of
  calling an external program from a remote control button.

  [1m8.6.  Additional information for lirc.[0m

  Take a look at the lircrc.example files in the configfiles/ directory.
  In my case, (Pinnacle Studio card) the channel up and down functions
  weren't working, due to the fact that the button names were different
  than the default lircrc.example file that came with MythTV.

  The lircrc.example file has this:

  begin
      prog = irxevent
      button = ChannelUp
      config = Key Up CurrentWindow
  end

  begin
      prog = irxevent
      button = ChannelDown
      config = Key Down CurrentWindow
  end

  but the /etc/lircd.conf that comes in the lircd package defines the
  buttons for the Pinnacle Studio PCTV as:

                 channel+                 0x0000000000000017
                 channel-                 0x000000000000001C

  rather than "ChannelUp" and "ChannelDown".  I added the following to
  my /home/[yourusername]/.lircrc file:

       begin
           prog = irxevent
           button = channel+
           config = Key Up CurrentWindow
       end

       begin
           prog = irxevent
           button = channel-
           config = Key Down CurrentWindow
       end

  which took care of basic functionality.  Because the PCTV Studio
  remote has additional buttons, look at the configfiles/lircrc.exam-
  ple.pinnaclestudiopctv for an example of how to define additional but-
  tons, and how to debug potential button name conflicts between the
  lircrc.example file and how [1myour [22mremote defines the button names.

  By examining the button names defined in /etc/lircd.conf and using the
  [1mirw [22mprogram to make sure that your remote is working, you can create
  the appropriate mappings in .lircrc to get excellent remote
  functionality with MythTV.

  [1m8.7.  Configuring lirc for use with an IR blaster.[0m

  By Carlos Talbot,  <mailto:carlos@talbot.net>

  Lirc has support for various IR transmitters. A popular model is the
  Actisys IR-200L http://store.yahoo.com/snapstreammedia/irblasbun.html
  <http://store.yahoo.com/snapstreammedia/irblasbun.html>. It was
  originally designed for IRDA communication, but can be used to
  transmit A/V remote control codes. By using the lirc SIR driver, this
  device can easily be integrated with MythTV. I have tested this device
  with an AT&T DCT2000 digital cable box but the instructions can be
  used to configure other IRDA devices and A/V remotes.

  Follow the steps in the previous section.  When you run setup.sh,
  select option 1, driver configuration. From here select option 6, IrDA
  hardware.  Select your appropriate device and the corresponding serial
  port, then Save configuration & run configure from the main menu. Once
  configure is done type:

       $ make

  Please note: unlike the Pinnacle receiver above you will be compiling
  lircd in addition to a kernel module for the SIR transmitter.
  Depending on whether you have your serial port driver configured as a
  kernel module you might see the following message during make:

       lirc_sir.c:56:2: warning: #warning
       "******************************************"

       lirc_sir.c:57:2: warning: #warning "Your serial port driver is compiled into "

       lirc_sir.c:58:2: warning: #warning "the kernel. You will have to release the "

       lirc_sir.c:59:2: warning: #warning "port you want to use for LIRC with:"

       lirc_sir.c:60:2: warning: #warning "setserial /dev/ttySx uart none"

       lirc_sir.c:61:2: warning: #warning
       "******************************************"

  If you do receive this statement make sure to run the [1msetserial[0m
  command before you load the lirc_sir module. Follow this with the
  install:

       $ su
       # make install

  You will notice that lirc installs the kernel module in
  /lib/modules/uname -a/misc.

  The configuration for starting [1mlircd [22mdiffers if you're going to be
  sending and receiving IR versus just receiving.

  # cd /etc/rc.d
  # cat >> rc.local
  echo "Starting lircd"
  setserial /dev/ttySx uart none        # (if required)
  modprobe lirc_sir
  /usr/local/sbin/lircd
  ^D
  # exit
  $

  At this point you have to populate the /etc/lircd.conf file with the
  proper codes for your A/V remote. You should be able to find your
  remote within the lirc remote tar file located at
  http://www.lirc.org/remotes.tar.bz2
  <http://www.lirc.org/remotes.tar.bz2>. In my case I extracted the file
  from remotes/motorola/DCT2000 (gi-motorola-dct2000)

  To test the lirc_sir module you can run [1mirw [22mto verify the codes are
  being received. If everything is configured correctly you should see
  something similar to the following:

       $ irw
       0000000000007ff0 00 1 gi-motorola-dct2000
       000000000000bff8 00 2 gi-motorola-dct2000
       000000000000f7f0 00 ENTER gi-motorola-dct2000

  Once you've verified lirc is working you can press [1mCTRL-C [22mto exit [1mirw[0m
  and configure the channel changing script.

  Within /usr/local/share/mythtv/settings.txt  (or
  ~/.mythtv/settings.txt) you need to add the following line:

       str ExternalChannelCommand=/usr/local/bin/change_channel

  This csh script will be called each time MythTV needs to change the
  channel.  Below is a copy of the script followed by the corresponding
  perl script.  Make sure both are in your path. Also make sure you
  leave the #!/bin/csh setting and not change it to bourne or bash. This
  will create a frustrating symptom to diagnose where MythTV cannot open
  /dev/device. Unlike bourne or bash, csh scripts automatically close
  parent file descriptors before they start.

  $ cd /usr/local/bin
  # su
  # cat > change_channel.csh
  #!/bin/csh
  echo "changing to $1"
  /usr/local/bin/channel.pl $1 &
  ^D
  # chmod a+x change_channel.csh
  # exit
  $ exit

  The following file should be saved as /usr/local/bin/channel.pl

       #!/usr/bin/perl

       # make sure to set this string to
       # the corresponding remote in /etc/lircd.conf
       $remote_name = "gi-motorola-dct2000";

       sub change_channel {
               my($channel_digit) = @_;
               system ("rc SEND_ONCE $remote_name $channel_digit");
               sleep 1;
       }

       $channel=$ARGV[0];
       sleep 1;
       if (length($channel) > 2) {
               change_channel(substr($channel,0,1));
               change_channel(substr($channel,1,1));
               change_channel(substr($channel,2,1));
       } elsif (length($channel) > 1) {
               change_channel(substr($channel,0,1));
               change_channel(substr($channel,1,1));
       } else {
               change_channel(substr($channel,0,1));
       }
       system ("rc SEND_ONCE $remote_name ENTER");

  The last statement within the perl script is the lirc rc command. This
  is the command that transmits the code to your cable/dss box. Make
  sure to have the IRDA device within a few feet of the box.

  [1m9.  Configuring MythTV.[0m

  By this point, all of the prerequisites have been installed, [1mmysql [22mis
  running and has had its initial database setup.  It's now time to
  configure MythTV.

  [1m9.1.  Editing the settings.txt file.[0m

  Open a shell and switch to the /usr/local/share/mythtv directory.  You
  [1mMUST [22medit the settings.txt file so that it's appropriate for your
  system.  At a minimum, ensure that the BufferName, RecordFilePrefix
  and PIPBuffername variables are set to directories that exist on your
  system.  By default, these point to /mnt/store.  For example, you may
  wish to create a /var/video subdirectory, so you would change
  /mnt/store to /var/video

       $ su
       # mkdir /var/video
       # chmod a+rwx /var/video
       # exit

  The settings.txt file is fairly self-explanatory.  Currently, MythTV
  supports two different video encoders, MPEG4 and RTJPEG.  Take note
  that RTJPEG has lower CPU demands, but makes large files, and MPEG4
  has high CPU demands, but makes smaller files.

  [1mNOTE[22m: although the width and height can be changed to almost anything,
  if you start MythTV and don't see video or you get "segmentation
  fault" errors, it is likely that the video4linux (v4l) subsystem did
  not like the height and width parameters specified.  It's best to
  leave the default as-is until you're sure that MythTV is operational.

  [1mNOTE[22m: the int Deinterlace=1 variable controls the deinterlacer.
  Support for deinterlacing requires that your processor has SSE
  (Streaming SIMD Extensions, aka "MMX2").  Early Intel Celeron (those
  that don't use the Coppermine 0.18um core and are usually <600Mhz),
  Pentium Pro and Pentium II CPUs do not have SSE, so make sure that
  you've got this set to "0" if you have one of these.  If you don't,
  you will get "Illegal Instruction" errors.

  To determine if you've got SSE, you can:

       $ cat /proc/cpuinfo
       [snip]
       flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca
       cmov pat pse36 mmx fxsr sse

  Notice the [1msse [22mat the end of the line.

  Users in North America can now exit and save the file.  Users in other
  parts of the world need to modify the first line and modify the
  XMLTVGrabber variable to the correct grabber for their region.
  [1mtv_grab_uk [22mfor the UK, etc.  Use the name from the xmltv directory.

  [1m9.2.  Running setup.[0m

  Now that you've edited your settings.txt file, it's time to run the
  setup program and perform the initial configuration.

  [1mNOTE[22m: Red Hat 8.0 users, if you haven't followed ``these'' steps, you
  [4mmust[24m do so before continuing.

  Open a shell, and switch to the setup directory:

       $ cd setup
       $ ./setup

  The setup program will ask you a few questions and then proceed to run
  the XMLTV grabber program.

  [1m9.3.  Running mythfilldatabase.[0m

  Now that the setup program has completed, run [1mmythfilldatabase [22mto get
  one week of data inserted into the database.

       $ mythfilldatabase

  [1mNOTE[22m:  [1mmythfilldatabase [22mmight take a while to complete, depending on
  any number of factors, most of which you can't control.  It's best to
  just let the program run to completion.

  [1mmythfilldatabase --manual [22mis another option; the manual option will
  allow you to fine tune channel frequencies and specify which channels
  will be added to the database.  If you are not using the tv_grab_na
  grabber, you must use the [1m--manual [22moption.

  [1mmythfilldatabse --file [22mis an option if there isn't an XMLTV grabber
  for your country, but you [1mdo [22mhave an XML formatted listings file
  created by some other program.

  [1mmythfilldatabase --xawchannels [22mis an option if you have used [1mxawtv [22mto
  fine-tune your channels and would like to import the fine tuning
  offsets into MythTV.

  [1m9.3.1.  Setting mythfilldatabase  to run from cron[0m

  In order to keep your database filled, [1mmythfilldatabase [22mshould be run
  once a day.

  There are two ways to accomplish this:  either as a user-based cron
  job, or as a system based cron.  If you use a user-based cron, you can
  select the time that the cron job will be run.  A system-based cron
  job will run at the same time as any other system cron jobs.

  If you are a Mandrake 9.0 user and wish to use a system cron job, you
  can perform the following steps:

       $ cd configfiles
       $ su
       # cp mythfilldatabasecron /etc/cron.daily

  If you want to know what time your job will run, you can do the
  following:

  # cat /etc/crontab
  SHELL=/bin/bash
  PATH=/sbin:/bin:/usr/sbin:/usr/bin
  MAILTO=root
  HOME=/

  # run-parts
  01 * * * * root nice -n 19 run-parts /etc/cron.hourly
  02 4 * * * root nice -n 19 run-parts /etc/cron.daily
  22 4 * * 0 root nice -n 19 run-parts /etc/cron.weekly
  42 4 1 * * root nice -n 19 run-parts /etc/cron.monthly
  # exit
  $

  We can see from the display that the cron.daily job will run at 0402
  every morning.

  If you wish to specify a custom time, then the user-based cron job is
  the better method.

  The default [1mconfigfiles/mythcrontab [22mfile will run the [1mmythfilldatabase[0m
  program every day at 0430.  If you want to change this, then open the
  configfiles/mythcrontab file in your favorite editor and modify it as
  you like.  Once you're satisfied with the time that [1mmythfilldatabase[0m
  will run, save and exit, and return to the shell prompt.

       $ cd configfiles
       $ crontab mythcrontab
       $ crontab -l  NOTE: this is a lowercase L.
       # The following will run the mythfilldatabase shell script at 0430
       # every day.  Format is
       # minutes hour day_of_month month day_of_week
       # man 5 crontab for more information
       # Need to use a shell script because the QTDIR environment variable isn't
       # being honored by crontab?
       # The next text should be all on the same line.
       30 04 * * * /bin/bash $HOME/mythtv-0.7/MC/configfiles/mythfilldatabasecron
       $

  As you can see, [1mmythfilldatabase [22mwill now be run at 0430 every day.

  If you decide to alter the time that the [1mmythfilldatabase [22mruns, you
  can use the crontab command to open your existing job and edit it in
  place.

       $ crontab -e

  The [1mcrontab -e [22mcommand will allow you to edit the existing crontab.
  [1mNOTE[22m:  By default, the crontab will use [1mvi [22mas your editor.  If you
  don't like to use [1mvi[22m, make sure that you've set VISUAL to something
  other than [1mvi[22m.

       $ export VISUAL=/usr/bin/joe
       $ crontab -e

  This will cause [1mcrontab [22mto use [1mjoe[22m, a visual editor that uses the
  Wordstar command sequence.  You may use [1memacs[22m, or any other editor
  that you're comfortable with.  You may also add the EXPORT command to
  your .bashrc or to the /etc/profile.d/mythtv.sh file.

  Once you've completed this step, run the [1mmythepg [22mprogram to check that
  the database has been filled.  The cursor keys will move you around
  the grid, the "I" key will give you more information on a program and
  ESC will exit out back to the shell.

  [1m10.  Using MythTV.[0m

  [1mNOTE to Red Hat 8.0 users[22m:Red Hat Linux 8.0 ships with Gnome as the
  default desktop environment.  However, Gnome seems to have issues with
  window focus and window switching which sometimes cause mythfrontend
  to obscure the video. KDE does not seem to have any such issues.
  Therefore you will need to switch to KDE by selecting
  RedHatMenu>Extras>System Settings>Desktop Switching Tool and choose
  "KDE".

  [1mmythfrontend [22mis the main interface to the MythTV program.  This
  program allows you to choose which of the other modules you'd like to
  run and ensures that programs that you've scheduled for recording
  actually get recorded, so it's important that this program is always
  running.

  [1m10.1.  Using themes with MythTV.[0m

  MythTV is "themeable", meaning that the visual appearance of the
  program can be modified by the user without re-compiling or altering
  the program functionality.  /usr/local/share/mythtv/theme.txt allows
  you to alter the theme for MythTV.  The default theme is called
  "blue".  Other themes that ship with MythTV can be found in the
  /usr/local/share/mythtv/themes directory.  Change the first variable
  in the theme.txt file and exit and restart [1mmythfrontend [22mfor it to take
  effect.

  [1mNOTE[22m: Exiting [1mmythfrontend [22mwill stop any recordings you have in
  progress, so make sure that the system isn't busy if you modify the
  theme while [1mmythfrontend [22mis still running.

  [1m10.2.  Adding DirecTV information to the database.[0m

  A script for adding DirecTV information into the database has been
  written by tarek Lubani  <mailto:tarek@tarek.2y.net> and is available
  at http://tarek.2y.net/myth/ppv.pl <http://tarek.2y.net/myth/ppv.pl>.
  This is currently an external user-supplied program, so if you have
  issues with the script, please contact the author.

  [1m10.3.  Adding support for an external tuner.[0m

  MythTV supports changing the channel on an external tuner.  If you
  have an external tuner, such as a DirecTV or digital cable set top
  box, the following command should be added to your settings.txt file:

  str ExternalChannelCommand=/usr/local/bin/changechannel

  The [1mchangechannel [22mprogram is not supplied with MythTV, so this is
  going to be dependent on what sort of external tuner you have.
  Example scripts for Sony and RCA receivers can be obtained from
  http://tarek.2y.net/myth/ <http://tarek.2y.net/myth/>.  This is
  currently an external user-supplied program, so if you have issues
  with the script, please contact the author.

  Feel free to browse some of what sort of hardware is available at
  http://shop.store.yahoo.com/snapstreammedia/cablepacks.html
  <http://shop.store.yahoo.com/snapstreammedia/cablepacks.html>, or if
  you wish to assemble your own, rather than purchase, the following may
  be helpful: http://www.snapstream.com/products/irblaster/sonydss.htm
  <http://www.snapstream.com/products/irblaster/sonydss.htm> for cable
  pinouts for RCA DSS receivers.

  [1m11.  MythWeb.[0m

  MythWeb allows you to use a web page to control various aspects of
  your MythTV system.  MythWeb is a separate application, but it's
  dependent on MythTV being installed and operational.

  [1m11.1.  Installation and pre-requisites.[0m

  Download mythweb from http://www.mythtv.org/ <http://www.mythtv.org/>
  and save it to a location where you can find it.  The next step
  depends on whether your distribution has a web server and if you have
  php support.

  [1m11.1.1.  Mandrake 9.0[0m

  Mandrake 9.0 has [1mapache [22mand [1mphp [22mpre-packaged, so installation is quite
  simple.  Once you have installed the two programs, either with the
  graphical installer (see instructions in ``Graphic Install Tools'') or
  through the command line (section ``Command Line''), and you've
  ensured that the [1mapache [22mserver will start at boot using the Mandrake
  Control Center.

  [1m11.2.  Completing the installation.[0m

       $ tar -xjf mythweb-0.7.tar.bz2
       $ cd mythweb-0.7
       $ su
       # mkdir /var/www/html/mythweb
       # cp -r . /var/www/html/mythweb
       # exit
       $

  To access the web page, open a web browser and use [1mhttp://[name or ip[0m
  [1maddress]/mythweb/[0m

  [1mNOTE[22m: Make sure that you have a trailing slash on the URL, otherwise
  you will get a 404 Page not Found error.
  [1m12.  MythGallery.[0m

  MythGallery is a photo and slideshow application.  MythGallery is a
  separate application, but it's dependent on MythTV being installed and
  operational.

  [1m12.1.  Installation and pre-requisites.[0m

  Download MythGallery from http://www.mythtv.org/
  <http://www.mythtv.org/> and save it to a location where you can find
  it.

       $ tar -xjf mythgallery-0.7.tar.bz2
       $ cd mythgallery-0.7
       $ make
       # su
       # make install
       # exit
       $

  The configuration file for MythGallery is located in
  /usr/local/share/mythtv.  This file needs to be edited:  ensure that
  your GalleryDir variable is set to the directory where your pictures
  are stored.

  +o  Use the arrow keys to move around the thumbnails.

  +o  Use SPACE or ENTER to maximize a photo.

     +o  Use p or P to start the slideshow of all the files in the
        directory.  "Play" or "Pause" on your remote may also work.

     +o  Use SPACE or ENTER to advance to the next photo.

  +o  Use ESC to go up one level, or to exit out of the module if you're
     at the first level.

  [1m13.  MythGame.[0m

  [1m14.  MythMusic.[0m

  [Documentation still being developed.]

  MythMusic has a number of pre-requisites that must be satisfied before
  it is operational.  Depending on your distribution, some of these
  prerequisites can be satisfied through the various package managers.
  If your distribution doesn't offer pre-compiled versions of the
  software below, then follow the generic instructions for manually
  compiling and installing the software.

  The pre-requisites for MythMusic are:

  +o  MAD

  +o  libvorbis-devel

  +o  FLAC

  +o  libcdaudio

  +o  CDParanoia

  [1m14.1.  Manual installation of pre-requisites[0m

  These instructions are for distributions which don't have pre-compiled
  versions of the software necessary to run MythTV.

  Download MAD from http://www.mars.org/home/rob/proj/mpeg/
  <http://www.mars.org/home/rob/proj/mpeg/>  Save it to a directory you
  can find later.

       $ tar -xzf mad-0.14.2b.tar.gz
       $ cd mad-0.14.2b
       $ ./configure
       $ make
       $ su
       # make install
       # exit
       $

  Download FLAC from http://flac.sourceforge.net
  <http://flac.sourceforge.net> and install:

       $ tar -xzf flac-1.0.4.tar.gz
       $ cd flac-1.0.4
       $ ./configure
       $ make
       $ su
       # make install
       # exit
       $

  Download libcdaudio from libcdaudio.sourceforge.net
  <http://sourceforge.net/project/showfiles.php?group_id=27134> and
  install:

       $ tar -xzf libcdaudio-0.99-6.tar.gz
       $ cd libcdaudio-0.99.6
       $ ./configure
       $ make
       $ su
       # make install
       # exit
       $

  Download cdparanoia from http://www.xiph.org/paranoia/down.html
  <http://www.xiph.org/paranoia/download/cdparanoia-III-
  alpha9.8.src.tgz>.

  $ tar -xzf cdparanoia-III-alpha9.8.src.tgz
  $ cd cdparanoia-III-alpha9.8
  $ ./configure
  $ make
  $ su
  # make install
  <!-- see if the next step is a Mandrake only issue -->
  # cp interface/cdda_interface.h /usr/local/include
  # cd /usr/lib
  # ln -sf libcdda_interface.so.0.9.8 libcdda_interface.so
  # ln -sf libcdda_paranoia.so.0.9.8 libcdda_paranoia.so
  # exit
  $

  [1m14.2.  Mandrake 9.0[0m

  Mandrake 9.0 has a number of the pre-requisites available on the
  installation CD.  Some of the software you're going to need will have
  to be obtained from the "contrib" or "cooker" development
  repositories.  Applications downloaded from "cooker" come from the
  development branch, so there may be issues with some software.

  [1murpmi [22mis the simplest tool for installation of packages from the
  command line.  The difficult part is the configuration aspect.  The
  following website http://plf.zarb.org/~nanardon/urpmiweb.php
  <http://plf.zarb.org/~nanardon/urpmiweb.php> will allow you to choose
  a mirror site and then present the command-line configuration text for
  that mirror.  You will most likely need to add a "Contrib" mirror to
  your setup.  Once you have done that, you can proceed.

       # urpmi mad flac libcdaudio cdparanoia libvorbis-devel libcdda0-devel

  [1m14.3.  Compiling MythMusic.[0m

  Once all the pre-requisites have been installed, you can proceed with
  getting MythMusic going.

       $ make
       $ su
       # make install
       # exit
       $ cd musicdb
       $ mysql -u root < metadata.sql

  Edit the /usr/local/share/mythtv/mythmusic-settings.txt file for your
  particular system.

  [1m15.  MythWeather[0m

  The MythWeather module will obtain the weather information for the
  location that you specify.
  Change into the MythWeather directory, then make and make install:

       $ cd mythweather
       $ make
       $ su
       # make install
       # exit

  MythWeather uses MSNBC.com as its source for weather data.  You may
  specify a number of identifiers in order to obtain your local weather.

  +o  Your zip code.

  +o  An airport code.

  +o  The "accid".

  In order to determine your accid, access the msnbc.com weather site at
  the following URL:
  http://www.msnbc.com/news/wea_front.asp?0wl=w3&tab=oth&ta=y
  <http://www.msnbc.com/news/wea_front.asp?0wl=w3&tab=oth&ta=y>  Once
  there, fill in your location.  After the MSNBC server completes your
  request, check the URL in the address bar for "accid=XXXXX".  The
  "XXXXX" portion is the area id you will need for the next
  configuration step.

  For now, you must manually configure MythWeather:

       $ mysql -u root
       mysql> use mythconverg;
       mysql> insert into settings (value, data) VALUES ('locale','YOUR_ZIPCODE_OR_AREA_ID_OR_AIRPORTCODE');
       mysql> exit
       $

  So, as an example for zipcode 60561:

       $ mysql -u root
       mysql> use mythconverg;
       mysql> insert into settings (value, data) VALUES ('locale','60561');
       mysql> exit
       $

  An example for Paris, France:

       $ mysql -u root
       mysql> use mythconverg;
       mysql> insert into settings (value, data) VALUES ('locale','FRXX0076');
       mysql> exit
       $

  If you wish to use Celsius as the default:

       mysql> insert into settings (value, data) VALUES ('SIUnits', 'Yes');
       mysql>

  These are the keyboard commands for MythWeather:

       Left Key             Goes back one page, and extends the time spent
                            on the page you are on.
       Right Key            Goes forward one page, see above.
       Space                Pause, wait on the current page until space is hit
                            again.
       Numeric Keys         You can check other weather by keying in other ZIP codes.
       Enter Key            Switch between celsius and fahrenheit. Can also
                            be used a way to force a data update.
       "m" Key              Resets the location to the database default, then updates the data.

  MythWeather also has an "Aggressiveness" setting.  This affects how
  long MythWeather waits for data from the msnbc.com website before
  timing out.  If you are on a slow connection, or have a slow DNS, or
  MythWeather just doesn't seem to be working and you've already tried
  everything else, then try increasing the aggressiveness level
  parameter.  This parameter is inverse; a higher number actually means
  that MythWeather will be less aggressive, and will therefore wait
  longer before timing out.

  MythWeather will print debugging information on the terminal.  If you
  wish to see additional debugging information while MythWeather is
  running, you'll need to modify the source and recompile.

  Open file weather.cpp and go to line 40.  You should see debug =
  false.  Change this to true, go back to the main mythweather directory
  and run make clean distclean; make then switch to superuser and run
  make install.  MythWeather will now print additional data to the
  terminal to allow you to troubleshoot MythWeather issues.

  [1m16.  MythVideo[0m

  The MythVideo application will allow you to use an external program to
  watch media files that are not directly supported by MythTV.

  Change into the MythVideo directory, then make and make install:

       $ cd mythvideo
       $ make
       $ su
       # make install
       # exit

  The next step is to edit the /usr/local/share/mythvideo/mythexplorer-
  settings.txt file.  Change the StartDir to a valid mount point on your
  system.

  [1m17.  Troubleshooting.[0m

  [1m17.1.  Illegal Instruction.[0m

  This error can happen for the following reasons:

  +o  You have an AMD K6-2 or VIA C3 processor.  If you have either of
     these, make sure that you you followed the instructions in this
     ``section''.

  +o  You have an early production Intel Celeron, Pentium Pro or Pentium
     II.  If you have any of these processors, make sure that your
     ``deinterlace'' variable is set correctly.  Your CPU needs to
     support SSE instructions for deinterlace support.  You may check
     this by doing a $ cat /proc/cpuinfo and looking for "sse" in the
     processor flags section.

  [1m17.2.  mythfilldatabase failing.[0m

  If mythfilldatabase suddenly appears to be failing, check to see what
  version of XMLTV you're running.  Versions prior to 0.5.4 need to have
  the following change made: edit the
  /usr/lib/perl5/site_perl/5.8.0/XMLTV/ZapListings.pm file and perform a
  global search and replace, searching for "tvlistings2" and replacing
  it with "tvlistings".  [1mNOTE[22m:  It is highly recommended to run the
  latest version of XMLTV available.  In North America, zap2it, the
  listings provider, has been making numerous changes to their website
  which negatively impact XMLTV.

  [1m17.3.  MythTV seems to disappear; can't see video[0m

  If you're using Gnome as your window manager, try switching to KDE.
  For Red Hat Linux 8.0 users, edit /etc/sysconfig/desktop and change
  "GNOME" to "KDE".

  [1m17.4.  Fast CPU, choppy or jittery video.[0m

  This is most likely because your hard drive isn't setup to use DMA.
  Use the [1mhdparm [22mprogram to check and enable DMA.

       # hdparm -d /dev/hd?

  will tell you the DMA status for your hard drives.  If you run [1mhdparm[0m
  with the -d1 parameter, it will turn DMA on.

  You may also setup your PC to do this at boot time, either by adding
  the command to your /etc/rc.local file, or by adding files to
  /etc/sysconfig.

  On Mandrake and other distributions, if you install hdparm from an RPM
  you will most likely get a /etc/sysconfig/harddisks file installed.
  This file will be parsed by the /etc/rc.sysinit script.  If you use
  the default harddisks file, your changes will affect all IDE devices
  (including CD ROMs).  If you wish to use different parameters for
  various devices, rename and/or copy the file to harddiskhda,
  harddiskhdb, etc.  Edit the file to your liking and on the next reboot
  your setting will be preserved.

  [1m17.5.  I keep losing all of my settings every time I compile![0m

  MythTV will overwrite any settings in /usr/local/share/mythtv.  If you
  want to make sure that you don't lose your modifications, make a
  directory ~/.mythtv and copy your settings.txt file to this location.

  [1m17.6.  Compile errors.[0m

  Some compile errors are worse than others.  If you get an error that
  doesn't abort the compilation, and says something like:

       cc1plus: warning: changing search order for system directory
       "/usr/local/include"
       cc1plus: warning:   as it has already been specified as a non-system
       directory

  then it shouldn't be a problem.

  If you get an error like /usr/bin/ld: cannot find -lXext, the compiler
  is telling you that you don't have XFree86-devel installed, and this
  needs to be fixed before MythTV will work correctly.

  [1m17.7.  My screen goes blank, but comes back when I wiggle the mouse or[0m
  [1muse the keyboard.[0m

  This is due to DPMS, the Display Power Management System, which is
  used to save power by turning off your monitor when the system decides
  that it's not being used.  Since it's likely that watching TV will not
  generate keyboard or mouse events for a time, you need to turn off
  DPMS.  There are a few ways to do this.  You may also need to check
  your BIOS for power saving modes and disable screen blanking there as
  well.

  Edit your /etc/X11/XF86Config-4 file, and look for:

       Section "ServerFlags"
           #DontZap # disable <Crtl><Alt><BS> (server abort)
           #DontZoom # disable <Crtl><Alt><KP_+>/<KP_-> (resolution switching)
           AllowMouseOpenFail # allows the server to start up even if the mouse doesn't work
       EndSection

  Add Option "NoPM" "true" and Option "BlankTime" "0"to the ServerFlags
  section.

  Also, look for:

       Section "Device"
           Identifier "device1"
           VendorName "nVidia Corporation"
           BoardName "NVIDIA GeForce 256 (generic)"
           Driver "nv"
           Option "DPMS"
       EndSection

  In this case, you would need to either delete the Option "DPMS" line,
  or change it to # Option "DPMS" to comment it out.  The next time you
  start XFree this change will take effect.

  Finally, check:

       Section "Monitor"
           Identifier "monitor1"
           VendorName "Plug'n Play"
           HorizSync 30-85
           VertRefresh 50-160

           # Sony Vaio C1(X,XS,VE,VN)?
           # 1024x480 @ 85.6 Hz, 48 kHz hsync
           ModeLine "1024x480"    65.00 1024 1032 1176 1344   480  488  494  563 -hsync -vsync

           # TV fullscreen mode or DVD fullscreen output.
           # 768x576 @ 79 Hz, 50 kHz hsync
           ModeLine "768x576"     50.00  768  832  846 1000   576  590  595  630

           # 768x576 @ 100 Hz, 61.6 kHz hsync
           ModeLine "768x576"     63.07  768  800  960 1024   576  578  590  616
       EndSection

  Ensure that there isn't an Option "DPMS" in the Monitor configuration.

  You can also turn off DPMS from the Command Line, but this will not
  survive a reboot.

       $ xset -dpms

  Using xset +dpms will turn it back on.

  Finally, depending on your distribution, you may be able to turn it
  off from within the control panel.

  [1m17.8.  I can't checkout using CVS anymore![0m

  Isaac has changed some things around.  The CVS repository is now known
  as cvs.mythtv.org, rather than www.mythtv.org or mythtv.org.  Make
  sure you change your CVSROOT to point to the new server, delete your
  old tree, and re-do the checkout.

  [1m17.9.  I get segfaults / MythTV isn't doing anything.[0m

  Without details, the developers will not be able to determine if you
  have discovered a genuine code-bug,  or it the problem is with your
  system.  In order to determine what's going on, you must recompile
  MythTV with debugging support and run MythTV within [1mgdb[22m, the GNU
  debugger.

  Edit the settings.pro file.  Make sure that the top of the file looks
  like this:

       $ cat settings.pro
       CONFIG += debug
       #CONFIG += release

  Now, you need to clear out the old versions of the software to ensure
  that you're running with the debugging code, then compile and install.

       $ make clean distclean
       $ ./configure
       $ make
       $ su
       # make install
       # exit

  At this point, you now have debug-enabled software ready.  Let's
  assume that the problem you're having is in the setup program.

       $ cd setup
       $ gdb ./setup

       GNU gdb 5.2.1-2mdk (Mandrake Linux)
       Copyright 2002 Free Software Foundation, Inc.
       GDB is free software, covered by the GNU General Public License, and you are
       welcome to change it and/or distribute copies of it under certain
       conditions.
       Type "show copying" to see the conditions.
       There is absolutely no warranty for GDB.  Type "show warranty" for details.
       This GDB was configured as "i586-mandrake-linux-gnu"...
       (gdb)

  [1mgdb [22mhas a number of options, read the man page for more information.

  Once at the (gdb) prompt, type run to start program execution.  When
  the program segfaults, type bt to get the backtrace.  The backtrace
  should be posted to the mythtv-dev mailing list, along with the steps
  you followed to get the program to crash.

  [1m17.10.  MythTV makes my system crash.[0m

  MythTV [4mcan[24m [4mnot[24m crash your system - it is a user-level program.  If
  your system is crashing when you run MythTV, then you have some issue
  with the drivers for your capture card or other hardware, or the CPU
  fan has fallen off/broken and your system is overheating when asked to
  perform a CPU intensive task like encoding video.

  [1m17.11.  Troubleshooting audio[0m

  By Bruce Markey, mailto:bjm@lvcm.com <mailto:bjm@lvcm.com>

  Audio appears to be one of the bigger issues that users run into on
  the mailing list.  If the audio isn't configured correctly, then
  MythTV will often appear to hang, when in fact it is trying to
  manipulate the audio subsystem and failing.  You may or may not
  receive error messages indicating that the source of the error is the
  audio subsystem.

  You can not use [1mxawtv [22mto determine if your audio is working correctly,
  since [1mxawtv [22mis simply using the the analog sound patched through line-
  in to line-out. It doesn't need to digitize the sound unless you are
  using the recording function.

  A better test to verify that sound will work for MythTV (and recording
  with [1mxawtv [22mfor that matter) is to startup [1mxawtv[22m, mute the line-in then
  run aplay /dev/dsp. Once this test succeeds, MythTV should also work
  correctly because it writes to and read from /dev/dsp in the same way
  that [1maplay [22mdoes.

  To record audio along with video the audio signal must be digitized by
  a DSP so that the audio data can be stored in a file. On playback, the
  audio data is written to /dev/dsp and converted back to an analog
  signal. This analog signal should then be sent to your speakers. Here
  is what is needed in alsamixer:

  CAPTUR source - the analog source to be sent to the DSP. This should
  be set to the input source from the tuner card to the sound card. In
  most cases this is Line but this could also be Aux, CD, Mic, etc.,
  depending on how you connect the input cable. This source should be
  muted to prevent patching through the analog sound. The volume of this
  source will not affect the record level.

  Capture mixer - this sets the level for the analog to digital
  recording.  While a volume of 100% is recommended for testing,
  distortion may occur.  Lowering this level to 75% to 85% may result in
  better audio quality.  "Capture" should be marked as the CAPTUR
  destination.

  PCM mixer - this sets the level for the digital to analog playback.
  While a volume of 100% is recommended for testing, distortion may
  occur. Lowering this level to 75% to 85% may result in better audio
  quality.

  Master mixer - sets the level for the analog signal sent to line-out
  or the speakers.

  You may also want to ensure that /dev/dsp hasn't already been grabbed
  by another process, like [1mesd [22mor [1martsd[22m.  If /dev/dsp isn't available,
  then MythTV won't work.  Check your windowmanager documentation for
  instructions on disabling the sound manager.  If you wish to see what
  application is grabbing a resource, you can use the fuser command:

       # fuser -v /dev/dsp

  If you're using multiple sound cards and multiple tuners, use
  alsamixer -c 1 to work with the second sound card.  The first card is
  #0, the second card is #1, etc.

  [1m17.12.  MythWeather is showing me the weather in the Bahamas![0m

  You didn't read the documentation.  Ensure that you set your locale
  correctly.

  [1m17.13.  I can't see parts of the On Screen Display.[0m

  If you're a Red Hat 8.0 user, make sure that you've followed the
  instructions which tell you how to modify the Themes makefile.
  ``Link''.

  [1m18.  Miscellaneous.[0m

  [1m18.1.  I'd like to watch the files without using MythTV / I'd like to[0m
  [1mconvert the files to some other format.[0m

  Matthew Zimmerman has created a patch for MPlayer / Mencoder
  http://www.mplayerhq.hu <http://www.mplayerhq.hu> that allows you view
  the files created by MythTV.  MythTV doesn't use standard Nupplevideo
  files, which is why you MPlayer complains if you try to view them.

  Download the patch to MPlayer from Matt's website.
  http://dijkstra.csh.rit.edu:8088/~mdz/mythtv/
  <http://dijkstra.csh.rit.edu:8088/~mdz/mythtv/>.

       $ wget http://dijkstra.csh.rit.edu:8088/~mdz/mythtv/mplayer-0.90pre10+mythtv.patch

  Download the source to MPlayer and patch:

       $ wget http://ftp.lug.udel.edu/MPlayer/releases/MPlayer-0.90rc1.tar.bz2
       $ tar -xjf MPlayer-0.90rc1.tar.bz2
       $ cp mplayer-0.90pre10+mythtv.patch MPlayer-0.90rc1
       $ cd MPlayer-0.90rc1
       $ patch -p1 < mplayer-0.90pre10+mythtv.patch

  At this point, you can read the MPlayer documentation and start the
  compile process.

  [1m18.2.  I'd like to use some other window manager.[0m

  MythTV is not dependent on any particular window manager.  If you wish
  to run a lightweight window manager, the configfiles/ directory has an
  example of a .twmrc file you may use.

  [1m18.3.  I'd like MythTV to automatically startup.[0m

  Here's an example submitted to the mythtv-dev list by Pat Pflaum
  mailto:pat@netburp.com <mailto:pat@netburp.com> using fvwm:

       $ cat > .xinitrc
       fvwm &
       mythfrontend
       ^D
       $ cat > .fvwmrc
       Style "myth*"      NoTitle, NoHandles, Sticky, WindowListSkip, BorderWidth 0
       ^D
       $

  [1m18.4.  What resolution should I use?[0m

  While MythTV allows you to set various GUI and capture resolutions,
  not all combinations make sense.

  First, analog video signals have a defined vertical resolution.  In
  NTSC, the video standard specifies that there are 525 vertical scan
  lines.  Once the "extra" lines are removed (they're used to
  synchronize the video signal, and encode closed captioning data), you
  have 480 vertical lines.

  In PAL, there are 625 "raw" lines of resolution, with a net of 576
  vertical lines.

  Horizontally, the maximum you can expect from a Bt8X8 chip is 720.

  With this in mind, there are certain commonly accepted values for
  resolution.  While other values may be accepted, they will cause scan
  lines to be repeated or dropped.

  From "best" to "worst", in NTSC:

  +o  720x480 (but more commonly, 704x480.  "DVD" resolution)

  +o  640x480 4:3

  +o  544x480 (TiVo high resolution)

  +o  480x480 (Video CD resolution)

  +o  352x480 (ReplayTV "Standard" quality)

  +o  320x480

  +o  544x240

  +o  480x240

  +o  352x240

  +o  320x240

  As you can see, the lower quality values are half of the better ones.
  720x240 is possible, but isn't a good tradeoff relative to the number
  of vertical lines lost.  In a PAL country, the you would use values
  like 720x576 or x288.

  The higher resolutions will be more CPU intensive. If the CPU is
  overtaxed, frames will be dropped causing uneven motion. You will
  likely see the best results at resolutions which average at least 10%
  CPU idle time (meaning that the first value shown in the load average
  using w or top is no more than .90) while recording.  If the load
  average is consistently exceeding .90, your CPU will not have enough
  cycles to service other system events, thereby causing frame drops
  when it context switches away from MythTV to service other processes.

  As an example, if you are capturing at 640x480, you may wish to run X
  Windows and the MythTV GUI at 640x480.

  If you'd like to read more on this, go to the vcdhelp website at
  http://www.vcdhelp.com/forum/userguides/94382.php
  <http://www.vcdhelp.com/forum/userguides/94382.php>.

  [1m18.5.  I'd like to delete the mysql database.[0m

  [1mNOTE[22m:  Performing this step will remove the entire database.  You will
  lose all of your settings and will need to re-run the mc.sql script to
  setup the database structure before running the setup program.

       $ mysql -u root
       mysql> drop database mythconverg;
       mysql> quit

  [1m18.6.  I'd like to start using the development version of MythTV.[0m

  [Content under development]

  [1mNOTE[22m:It should be clear that using the development version of MythTV
  may cause loss of data on your system.  There is no guarantee that the
  development version of MythTV will work for you.

  [1mTHERE IS NO GUARANTEE THAT THESE INSTRUCTIONS WILL WORK.  USE AT YOUR[0m
  [1mOWN RISK.[0m

  Here are some of the features in version 0.8:

  +o  A front-end and back-end system.  The back-end is responsible for
     maintaining the database and capturing and encoding the video.  The
     front-end is responsible for displaying the video.  This allows you
     to put a lightweight, quiet, diskless and fanless machine in "the
     living room", with a large server-type machine in "the basement".
     The front-end and back-end communicate over TCP on a specified
     port.

  +o  GUI-based configuration.  Much of the configuration of MythTV can
     now be done using a GUI-based setup, avoiding the necessity to edit
     the settings.txt file.

  +o  Themes.  MythTV now has more themes for the user to choose from.

  +o  Recording profiles.  You may now setup various encoder profiles
     from the GUI, giving you the flexibility to record programs using
     various quality levels.

  +o  Increased hardware encoder support.  MythTV can now use the MJPEG
     encoder/decoder found on Matrox G200 series cards.  This greatly
     reduces the CPU utilization.

  [1mNOTE[22m:  Problem reports for version 0.8 posted to the mailing list
  should have accompanying solutions.

  Before you begin, shutdown all running instances of 0.7.  You should
  perform a make clean distclean before starting the compile process.

  Compile and install the system as you would MythTV 0.7 by following
  the instructions found in this HOWTO.  If you are installing MythTV on
  a new machine, install the database by running the database/mc.sql
  script as detailed in earlier sections of this document.

  However, if you are upgrading an existing 0.7 system, you [4mmust[24m run the
  database/0-7-to-0-8.sql script before running the setup program to
  ensure that the database structure is up to date.

  Next, you must edit the /usr/local/share/mythtv/backend_settings.txt
  file.  Specify the IP address or hostname of the back-end server and
  port.  You may specify localhost if the front-end and back-end
  programs will be running on the same machine.  This file is read by
  the backend server during start-up.

  [1mNOTE[22m:  Do not change the port settings.  Leave them as-is.

  Once you're done editing the file, start the setup program:

       $ cd setup
       $ ./setup

  This will open the setup wizard which will allow you to graphically
  configure your system.

  Once the setup wizard is done: to run the new version of MythTV, you
  must first start the back-end server:

       $ mythbackend &

  and then run the front-end client:

       $ mythfrontend

  You should see the connection established between the front-end and
  back-end systems by examining the mythbackend window; it will display
  the client connection attempts.

  The cvs version of MythTV now supports pressing the ESC key to exit
  the application.  If you wish to configure MythTV to exit on ESC, go
  to the mythfrontend setup screen (not the setup program used to
  initially configure MythTV) and enter the General configuration
  screen.  Move through the setup until you get to the System Shutdown
  parameter.  By default, this is set to "No exit key", which means
  there is no defined exit key for MythTV.  If you set it to "ESC", this
  will mean that the ESC key is used to exit MythTV.  Control, Meta and
  ALT modifiers mean that the Modifier + ESC key must be pressed to
  activate the exit from MythTV function.

  [1mNOTE[22m:  Users that have been running the frontend and the backend on
  different machines using Red Hat Linux 8.0 have stated that they have
  been having issues with remote access of the MySQL database.  This is
  not yet a supported configuration.  The following instructions may or
  may not work.  Add the following to /etc/my.cnf on the backend
  machine.

       skip-innodb
       set-variable=thread_stack=256k

