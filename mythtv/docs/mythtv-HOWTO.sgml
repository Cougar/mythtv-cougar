<!doctype linuxdoc system>
<!-- Revision History
v1.00, 2002-11-05.  Initial.
v1.01, 2002-11-06.  Added section on lirc, spelling errors.
v1.02, 2002-11-11.  Converted to docbook, added more to the remote control
section, compiling on AMD and Via C3 processors, Debian packaging, ispell.
v1.03, 2002-11-12.  Added text from Cedar McKay on Red Hat Linux 8.0
v1.031, 2002-11-19.  Added text on the ALSA 0.9.0rc5/rc6 hanging bug, started
development on mythmusic instructions, added text on obtaining document and
using CVS.  Merged some more RH 8.0 documentation from Cedar McKay.  Applied
Debian information patch from Matt Zimmerman.
v1.032, 2002-11-22.  Added stuff on modifying xmltv, changed CVS
documentation so that it's not dependant on CVSROOT being set, pointer to
Tarek's DirecTV and external channel changing script, moved text around so
that external tuner / DirecTV are located under "using mythtv".  Added
troubleshooting information about KDE vs. Gnome on RH 8.0
-->
<!--
To create documentation, execute "% linuxdoc -B html mythtv-HOWTO.sgml" or
"% linuxdoc -B txt -b 1 mythtv-HOWTO.sgml"  
-->

<article>

<title>Installing and using mythtv
<author>Robert Kulagowski, <url url="mailto:rkulagow@rocketmail.com">
<date>2002-11-22, v1.032
<abstract>
Initially, installation of mythtv seems like a huge task.  There are lots
of dependencies, and various distributions seem to do the same thing
different ways.  This document will attempt to give general installation
instructions, as well as including distribution-specific instructions where
necessary.
</abstract>

<toc>

<sect>How to obtain this document.
<p>This howto document is maintained at the primary mythtv website:  <url url="
http://www.mythtv.org" name="http://www.mythtv.org">.  The latest version of
this document can be found in CVS, accessible either through the <url
url="http://www.mythtv.org/cgi-bin/viewcvs.cgi/" name="ViewCVS"> web interface, or directly from the
CVS repository.  You may download the latest copy of mythtv and the 
documentation from CVS this way:
<tscreen><verb>
% mkdir mythtv
% cd mythtv
% cvs -d :pserver:mythtv@mythtv.org:/var/lib/cvs login
Logging in to :pserver:mythtv@mythtv.org:/var/lib/cvs
CVS password: mythtv
% cvs -d :pserver:mythtv@mythtv.org:/var/lib/cvs -z3 checkout MC
</verb></tscreen>
This documentation will be in the <tt>docs/</tt> subdirectory.

<bf>NOTE</bf>: If you are going to use CVS to compile mythtv rather than using
the distribution tarballs, it is <bf>strongly</bf> recommended that you <url
url="http://www.snowman.net/mailman/listinfo/mythtv-commits/" name="join">
the mythtv-dev mailing list.

<sect>Introduction.
<p>This HOWTO document will focus on mythtv in a North American environment.
If you have installation instructions for a different region or Linux
distribution, please send them to the author so that it can be included in other
versions of this document.

The contributors for this document are:
<itemize>
<item>Overall structure and Mandrake 9.0: Robert Kulagowski, <url url="mailto:rkulagow@rocketmail.com">
<item>Red Hat Linux 8.0: Cedar McKay, <url url="mailto:mythhowto.3.ohthetrees@spamgourmet.com">
<item>Gentoo:
<item>Debian: Matthew Zimmerman, <url url="mailto:mdz@debian.org">
</itemize>

<sect>Checking prerequisites.
<sect1>Hardware.
<p>mythtv is a software video encoder, which means that it uses a fairly
generic "dumb" video capture card, encodes the frames of video using the CPU
on your motherboard and writes them to disk.  High-end video capture cards
and devices like the Tivo and RePlay have dedicated encoder chips on them
which use specialized hardware to convert the video stream to the MPEG-2
format without using the motherboard CPU, which means that the main CPU only
has to worry about running the Operating System and reading and writing to
the disk.  These have fairly low CPU requirements compared to encoding
video.  Currently, there are no known MPEG-2 encoder cards that have
video4linux drivers which would be suitable for use with mythtv.  Once the
drivers are written, support for hardware MPEG-2 encoders can be integrated.

There are many variables that go into the question: "How fast a CPU do I
need to run mythtv"?  Obviously, the faster your CPU, the better your
experience will be with mythtv.  Performing the "Watch TV" function, where
the CPU is both encoding and decoding video simultaneously to allow Pause,
Fast Forward and Rewind functions for live TV requires twice as much CPU as
just encoding or decoding.  mythtv also supports multiple encoder cards in a
single PC, increasing the CPU requirements if you are going to
simultaneously encode multiple programs.

Here are a few data points:
<itemize>
<item>A PIII/733Mhz system can encode one video stream using the RTJPEG
codec using 512x480 capture resolution.  This does not allow for live TV
watching, but does allow for encoding video and then watching it later.
<item>The developer states that his AMD1800+ system can <bf>almost</bf>
encode two MPEG4 video streams and watch one program simultaneously.
<item>A PIII/800Mhz system with 512MB RAM can encode one video
stream using the RTJPEG codec with 480x480 capture resolution and play it back
simultaneously, thereby allowing live TV watching.
</itemize>

<sect1>Software.
<p>There are a few ways of installing programs on Linux systems; you can either
use the graphical tools that come with your distribution, or you can use
command-line utilities.  Either system will get the job done, and it all
depends on your comfort level with Linux.

In order to compile mythtv, we need to make sure that the software it
needs is installed.  As of 2002-11-08, this list includes perl-5.8, mysql,
gcc, freetype2-devel and qt-devel.  If you're going to use a remote control
with mythtv, you're going to need the cdialog package in order to compile
lircd.

There appears to be issues with ALSA and simultaneously recording and playing 
sound, which is a core requirement for mythtv.  If you are not running 
ALSA 0.9.0rc6 and experience lock-ups of your system when trying to use mythtv, 
then please check the main ALSA website and upgrade to the latest version,
or see if your distribution has already packaged the latest ALSA drivers.
<!-- What:  download latest CVS?  Send to URL of patch? -->

<sect2>Graphical installation tools. <label id="graphicinstalltools_">
<sect3>Mandrake 9.0
<p>On systems running KDE, a tool which will allow you to see what packages
are available and if they're installed on your system can be accessed by
clicking K->Configuration->Packaging->KPackage

There are many inter-related modules, so make sure that you've got the
main package for each one, and not a sub package for an unrelated item.  For
example, there are many modules that have "perl" in them; some are a part of
the apache web server, others are a part of the perl distribution.  In each
case, we're looking to make sure that the primary module is getting
installed.

Click the magnifying glass or press <bf>CTRL-F</bf> and enter "perl" as your
search term.  You should find it under the "Perl" folder.  You need at least
the perl 5.80 base package installed.  If not, click on the "Mark" button.

Next, search for mysql - it should be under "Databases".  Make sure that
mysql and mysql-clients are installed.  If not, click on "Mark".

Search for gcc.  You're going to need gcc and gcc-c++ installed.

Search for freetype2.  Make sure that you've got freetype2 and
freetype2-devel installed.

Finally, check for qt.  You'll need libqt3-devel (under folder "KDE and
Qt") and libqt3 ("Libraries").

Make sure that cdialog is installed if you want to use mythtv with a remote
control.

alsa-utils is needed for setting the volume.

If you marked anything to install, click on Install Marked.  Click "Yes" or
OK if you get a message about satisfying dependencies.

<sect3>Red Hat Linux 8.0
<p>Red Hat Linux 8.0 does not have the same KDE graphical package manager that some
other distributions have. You will need to use Red Hat's package manager. 
This is the same utility you saw upon installation from the Red Hat Linux 8.0 
installation CD, you can select these packages upon install of Red Hat Linux 8.0 or 
later. . You can get to this panel by selecting gnomemenu>System 
Settings>Packages
If you did a typical Desktop install of Red Hat Linux 8.0 make sure in addition you 
have selected:
<itemize>
<item>KDE Desktop Environment
<item>SQL Database Server -  you will have to click on "details" and make 
sure "mysql-server" is checked.
<item>Development Tools
<item>X Software Development
<item>KDE Software Development
</itemize>

Click Install to continue.

The version of QT supplied with Red Hat Linux 8.0 does not include a
necessary mysql plugin. You will have to download and install that RPM
package yourself. First go to <url url="http://rpm.pbone.net/"
name="http://rpm.pbone.net/"> and click on "Search" near the top of the
page. On the search page unselect all checkboxes except "RedHat 8.X". Next
select the "Search for RPMs by name in FTP........." radio button. In the
search field enter "qt-MySQL" then click "Search".  You will be presented
with a list of mirrors who host this particular RPM, currently called 
"qt-MySQL-3.0.5-17.i386.rpm". Download the RPM.  I had good luck downloading
from the ftp.pbone.net mirror. Once downloaded, double click on the RPM
package. You will be prompted for the root password, enter it, watch the
progress bar, and you are finished.

<sect2>Command-line installation. <label id="CLIinstalltools_">
<p> This section details the various methods for installing pre-requisites
from the command line.

<sect3>Mandrake 8.2 and 9.0
<p>The simplest tool for installing packages from the command line is
<bf>urpmi</bf>.

Open a shell, and execute the following, all on the same line:
<tscreen><verb>
% su -
# urpmi perl-5.8 mysql gcc gcc-c++ freetype2-devel libqt3-devel cdialog
alsa-utils
</verb></tscreen>
You may get asked a number of questions regarding dependencies.  It's best
to answer "YES".

However, you might get this when you execute the command above:
<tscreen><verb>
[root@pvr root]# urpmi perl-5.8 mysql gcc gcc-c++
freetype2-devel libqt3-devel cdialog
everything already installed
</verb></tscreen>

In that case, you're ready to move onto the next step.
<sect3>Red Hat Linux 8.0

<p>[Please submit instructions]

<sect3>Gentoo.

<p>[Please submit instructions]

<sect3>Debian
<p>Debian packages for MythTV and some of its add-on modules have been
packaged by Matt Zimmerman <url url="mailto:mdz@debian.org"> and are
available at <url
url="http://dijkstra.csh.rit.edu:8088/~mdz/debian/dists/woody/mythtv/"
name="http://dijkstra.csh.rit.edu:8088/~mdz/debian/dists/woody/mythtv/"
>, including installation instructions.  All of the prerequisites for
MythTV are available as Debian packages.

The mailing list message for this announcement can be accessed at <url
url="http://www.snowman.net/pipermail/mythtv-dev/2002-November/001116.html"
name="http://www.snowman.net/pipermail/mythtv-dev/2002-November/001116.html">.

<sect>Setting up paths and ldconfig.

<p>There are some paths that need to be modified before starting the main
compile of mythtv, otherwise you will get errors.

<sect1>Distribution-specific information.
<sect2>Mandrake 9.0
<p>As root, create the following file in <tt>/etc/profile.d</tt>  On my system
I call it "mythtv.sh".

Open a shell, and switch to superuser mode.
<bf>NOTE: ^D</bf> means press <bf>CTRL</bf> and <bf>d</bf> at the same time.

<tscreen><verb>
% su -
# cd /etc/profile.d
cat > mythtv.sh
export QTDIR=/usr/lib/qt3
export PATH=$PATH:/usr/lib/qt3/bin
^D

# chmod a+x mythtv.sh
# exit
% exit
</verb></tscreen>
The last two commands are to exit out of the shell.  This way, when you next
open a shell your new commands will take effect.

<sect2>Red Hat Linux 8.0
<p>[Please submit instructions]

<sect2>Gentoo.

<p>[Please submit instructions]

<sect1>Checking that it worked.
<p>Open a shell and switch to superuser mode again.
<tscreen><verb>
% su -
# set

[lots of text]
QTDIR=/usr/lib/qt3
PATH=/usr/local/bin:/bin:/usr/bin:/usr/X11R6/bin:/usr/games:/usr/lib/qt3/bin:/home/mythtv/bin:/usr/lib/qt3/bin
</verb></tscreen>
You should see QTDIR and the path changes you made.

Next, we need to make sure that the libraries that we're building will be
found when we need them.

<sect1>Modifying <tt>/etc/ld.so.conf</tt>
<p>Switch to /etc and execute the following:
<tscreen><verb>
# cd /etc
# cat >> ld.so.conf
/usr/local/lib
^D

# ldconfig
# exit
%
</verb></tscreen>

<sect>Downloading and compiling.

<p>Get mythtv from the <url url="http://www.mythtv.org" name="mythtv.org">
web site.  Save the tarball to a directory you can find.

Get XMLTV from <url url="http://xmltv.sourceforge.net"
name="http://xmltv.sourceforge.net">.  Download version 0.5.2

Get lame from <url url="http://www.mp3dev.org/mp3"
name="http://www.mp3dev.org/mp3">.  Download the source code to v3.92 by
following the links to sourceforge.net

<sect1>Notes on compiling on a system with non-Intel processors. <label
id="nonintelcpu_">
<p>If
you've got a system with an AMD K6-2 or a VIA C3 processor, make the
following change in the <tt>settings.pro</tt> file.

Look for 
<verb>-march=pentiumpro</verb> 
and replace it with
<verb>-march=i586</verb> 
before you compile.

Recent AMD processors, like the Duron, Thunderbird and Athlon don't need this
change.

<sect1>Building LAME.

<p>Open a shell and switch to the directory where you saved lame.
<tscreen><verb>
% tar -xzf lame-3.92.tar.gz
% cd lame-3.92
% ./configure
% make
% make test
% su
# make install
</verb></tscreen>
Check that it worked:
<tscreen><verb>
# ls -l /usr/local/lib
-rw-r--r--    1 root     root       381706 Nov  4 14:22 libmp3lame.a
-rwxr-xr-x    1 root     root          674 Nov  4 14:22 libmp3lame.la*
lrwxrwxrwx    1 root     root           19 Nov  4 14:22 libmp3lame.so ->
libmp3lame.so.0.0.0*
lrwxrwxrwx    1 root     root           19 Nov  4 14:22 libmp3lame.so.0 ->
libmp3lame.so.0.0.0*
-rwxr-xr-x    1 root     root       360197 Nov  4 14:22
libmp3lame.so.0.0.0*

# exit
%
</verb></tscreen>

<sect1>Building XMLTV. 
<p><bf>NOTE</bf>: Red Hat Linux 8.0 users, you <em>must</em> download and
install an updated version of libexpat.  The version that ships with Red Hat
Linux 8.0 (version 1.95.4) is buggy, and will cause problems with XML::Twig.
All other distributions may skip the step and proceed with untar'ing the
xmltv file.

Download version 1.95.5 from sourceforge.net:  <url
url="http://sourceforge.net/projects/expat/"
name="http://sourceforge.net/projects/expat/">

Open a shell prompt:
<tscreen><verb>
% tar -xzf expat-1.95.5.tar.gz
% cd expat-1.95.5
% ./configure
% make
% su
# make install
# exit
%
</verb></tscreen>

Untar the xmltv file:
<tscreen><verb>
% tar -xjf xmltv-0.5.2.tar.bz2
% cd xmltv-0.5.2
</verb></tscreen>
Install the xmltv prerequisites:
<tscreen><verb>
% su -
# perl -MCPAN -e shell
cpan> install XML::Twig
cpan> install Date::Manip
Date::Manip is up to date.
cpan> install LWP
cpan> install XML::Writer
cpan> exit
</verb></tscreen>

Change to the XMLTV directory and compile it:
<tscreen><verb>
% cd xmltv-0.5.2
% perl Makefile.PL
</verb></tscreen>
You can answer "N" to the tv_check, tv_pick_cgi questions.  Say "yes" to
the grabber required for your location.

You may get errors about modules not being installed.  They shouldn't matter
if you're installing North America and have followed the instructions to
this point.
<tscreen><verb>
% make
% make test
% su
# make install
# exit
</verb></tscreen>

<sect1>Building mythtv.

<p>Unpack mythtv
<tscreen><verb>
% tar -xjf mythtv-0.7.tar.bz2
% cd mythtv-0.7
% ./configure
% make
</verb></tscreen>
Switch to superuser:
<tscreen><verb>
% su
# make install
# exit
</verb></tscreen>

<sect>MySQL.
<sect1>Mandrake 9.0
<p>Make sure that mysql is running and started at boot.  Click on Mandrake
Control Center->System->Services, find mysql and click the "On Boot" button and 
the "Start" button if the mysql status shows that it isn't running yet.

<sect1>Red Hat Linux 8.0
<p>Make sure that mysql is running and started at boot. Click on GNOME
menu>Server Settings>Services and enter the root password when asked.
Check "mysqld" and then click Start. Click Save, then close the window.
<sect1>Gentoo.
<p>Please submit content.

<sect1>Setting up the initial database.
<p>Setup the initial mysql databases:
<tscreen><verb>
% cd database
</verb></tscreen>
<sect2>Mandrake 9.0
<p>
<tscreen><verb>
% mysql -u root < mc.sql
</verb></tscreen>
<sect2>Debian 3.0
<p>
<tscreen><verb>
% mysql &lt; mc.sql
</verb></tscreen>
<sect2>Red Hat Linux 8.0
<p>
<tscreen><verb>
% mysql < mc.sql
</verb></tscreen>

if this returns an error message try switching to root first.

<tscreen><verb>
% su
# mysql < mc.sql
# exit
%
</verb></tscreen>

<sect>Setting up ALSA and the mixer.

<p>If your video doesn't appear to be in-sync with your audio, it could be
because you are listening to the real-time audio from your video card rather
than after it's been processed and synchronized to the video by mythtv.

What you need to do is to mute the "line-in" of your sound card and also
set it as the recording source.

There are two ways to do this.  Graphically, and from the command line.

<sect1>Graphically setting up the mixer.
<sect2>Mandrake 9.0
<p>Open Kmix by K->Multimedia->Sound->Kmix

Click on Settings->Configure  Make sure that "Tick Marks" and "Show
labels" have "X"'s in them.  This will make it easier to find the correct
audio source.  Click OK.

On the mixer page, look for Line-In on your sound card.  You should see
two LED's - a green one at the top, and a red one at the bottom.  The green
one at the top is for muting; you want to make sure that the green LED is a
dark green, meaning that it's "off".  You also want to click on the red LED
so that it turns bright red, indicating that it's "ON"; this insures that
the Line-in is used as the source.  Click OK, and make sure that you save
the settings so that this is your default.

<sect2>Red Hat Linux 8.0
<p>There is some uncertainty (in my mind anyway) about ALSA sound and Red Hat.
Take everything here with a grain of salt. Here is what my impression of
how things are right now. The mythtv developer recommends ALSA sound drivers.
However, Red Hat Linux 8.0 ships with some other sound driver/management
package.  Installing ALSA looks like a real bear, and includes a kernel
recompile. Then you have to figure out how to deactivate the Red Hat Linux
8.0 built in sound package. I decided to give it whirl with the built in
sound package. I <bf>was</bf> able to get satisfactory results on my
machine using the RTJPEG video encoder and turning off MP3 sound
compression. If I try to use the better MPEG4 video encoder and/or use MP3
audio compression I get slight sound sync issues and a few skips. I think
this is because my machine is too slow. However, it is possible that it is
really because I'm using the wrong sound package. Since I didn't install
ALSA myself you will need to evaluate the situation on your own. However, I
will give instructions for how I got the default Red Hat Linux 8.0 sound
package working with mythtv.

Red Hat Linux 8.0 does not use some default KDE and Gnome control panels and
substitutes its own. Sound is one of these cases. To configure sound to
work with mythtv, select Gnome Menu> Sound & Video>Volume Control. This
will open up a mixer. Make sure your global volume (on the far left) is
up. Also make sure that the "line in" section has "mute" checked, and
"record" checked and the gain is turned up. You may have to experiment
with volume/gain levels to get the best sound.  If you experience
difficulty with sound try removing your sound jack from "line in" and
moving it to "mike in" Then go to the mixer and check "mute" and
"record" on the "mike in", and turn up the gain.

<sect1>Setting the mixer from the command line.

<p>If you're running Mandrake 9.0 and have installed the alsa-utils package,
then the <bf>amixer</bf> program can be used to setup the mixer.

<tscreen><verb>
% amixer set Master,0 100%,100% unmute
% amixer set Line,0 100%,100% mute capture
% su -
# alsactl store
# exit
% 
</verb></tscreen>
That takes care of setting the volume correctly, and the ALSA startup script
will restore the volume after a reboot.

<sect>Setting up a remote control.

<p>mythtv does not have native remote control receiver and decoder software
built-in.  Instead, remote control functions are implemented by cooperating
with lirc, the Linux Infra Red Control program.  lirc handles the IR
hardware and passes keystrokes to mythtv, which then acts as if the user had
pressed the keys on the keyboard.

lircd has two prerequisites:  dialog, available in Mandrake through the
"cdialog" RPM, and the kernel source.  Mandrake 9.0 is using the 2.4.19
kernel, so the easiest thing is to go to <url url="http://www.kernel.org"
name="http://www.kernel.org"> and download
the full 2.4.19 tar file from <url
url="http://www.kernel.org/pub/linux/kernel/v2.4/"
name="http://www.kernel.org/pub/linux/kernel/v2.4/">.

<sect1>Obtaining the kernel.

<p>An easy way is to use the wget command:
<tscreen><verb>
% wget http://www.kernel.org/pub/linux/kernel/v2.4/linux-2.4.19.tar.bz2
</verb></tscreen>
Next, open a shell and login as superuser.
<tscreen><verb>
% su 
# mkdir /usr/src
# mv linux-2.4.19.tar.bz2 /usr/src
# cd /usr/src
# tar -xjf linux-2.4.19.tar.bz2
# chown -R root.root linux-2.4.19
# ln -sf linux-2.4.19 linux
# exit
%
</verb></tscreen>

<sect1>Obtaining and compiling lirc.

<p>You're going to need to download and compile lircd.  Go to <url
url="http://www.lirc.org" name="http://www.lirc.org"> and download lirc; as
of 2002-11-07, the version available is 0.6.6.  Grab the remotes.tgz file as
well. 
<tscreen><verb>
% tar -xjf lirc-0.6.6.tar.bz2
% cd lirc-0.6.6
% ./setup.sh
</verb></tscreen>
You're going to need to know what sort of receiver you have and where
it's connected.  In my case, I have a Pinnacle Studio TV card, with the IR
receiver connected to COM1 (/dev/ttys0), so once the configuration menu came
up I did Driver Configuration->Other Serial Port Devices->Pinnacle Systems
Receiver->OK and on the next page selected COM1->OK.

Each remote is different; some remote receivers connect directly to your
capture card and not to a serial port, so make sure that you've got the
correct one.

<p>You then click "Save Configuration and run configure" to continue.

Once the configuration step is complete:
<tscreen><verb>
% make
% su
# make install
# chmod 666 /dev/lircd
</verb></tscreen>
Next, we're going to manually start lircd the first time:
<tscreen><verb>
# /usr/local/sbin/lircd
</verb></tscreen>
Now, we're going to add the commands necessary for lircd to run each time
we boot:
<tscreen><verb>
# cd /etc/rc.d
# cat >> rc.local
echo "Starting lircd"
/usr/local/sbin/lircd
^D
# exit
%
</verb></tscreen> This takes care of the lircd portion, which "listens" for
the IR signals. If everything went well, the install script for lircd put an
appropriate configuration file for your remote into <tt>/etc/lircd.conf</tt> This
file maps the buttons on the remote control to the IR pulses coming from the
receiver.

The next step is to convert those signals into something that can be used
to control mythtv.
<tscreen><verb>
% cd ~/mythtv-0.7/configfiles
% cp lircrc.example ~/.lircrc
</verb></tscreen> 
or
<tscreen><verb>
% cp lircrc.example.pinnaclestudiopctv ~/.lircrc
</verb></tscreen>
if you've got a Pinnacle Studio PCTV remote.
<tscreen><verb>
% irw
</verb></tscreen>
Start pressing the keys on your remote; <bf>irw</bf> will
print the name of the button as it is defined in your
<tt>/etc/lircd.conf</tt>. If you don't see anything at this point, you need
to troubleshoot further by going back to the lirc home page and investigating
from there.

If it is working, then press <bf>CTRL-C</bf> to abort the program.  Once you
know that your remote is working, you need to run the <bf>irxevent</bf>
program, which takes the key presses and sends them to mythtv. 
<bf>irxevent</bf>
isn't a daemon, so if you know that your remote is working you need to
invoke it like this: 
<tscreen><verb>
% irxevent &
</verb></tscreen>
If <bf>irxevent</bf> isn't running, then mythtv will not respond to your remote
control.

Currently, mythtv doesn't have native support for controlling the mixer
volume and mute settings.  A workaround at this time is to invoke the
<bf>amixer</bf> program.  If you wish to define keys to control the mixer,
the <bf>irexec</bf> program can accomplish this fairly easily.  The
configfiles/lircrc.example.pinnaclestudiopctv file has an example of calling
an external program from a remote control button.

<sect1>Additional information for lirc.

<p>Take a look at the lircrc.example files in the <tt>configfiles/</tt>
directory.  In my case, (Pinnacle Studio card) the channel up and down functions
weren't working, due to the fact that the button names were different than
the default <tt>lircrc.example</tt> file that came with mythtv.

The <tt>lircrc.example</tt> file has this:
<tscreen><verb>
begin
    prog = irxevent
    button = ChannelUp
    config = Key Up CurrentWindow
end

begin
    prog = irxevent
    button = ChannelDown
    config = Key Down CurrentWindow
end
</verb></tscreen>
but the <tt>/etc/lircd.conf</tt> that comes in the lircd package 
defines the buttons for the Pinnacle Studio PCTV as:
<tscreen><verb>
          channel+                 0x0000000000000017
          channel-                 0x000000000000001C
</verb></tscreen>
rather than "ChannelUp" and "ChannelDown".  I added the 
following to my /home/[yourusername]/.lircrc file:
<tscreen><verb>
begin
    prog = irxevent
    button = channel+
    config = Key Up CurrentWindow
end

begin
    prog = irxevent
    button = channel-
    config = Key Down CurrentWindow
end
</verb></tscreen>
which took care of basic functionality.  Because the PCTV Studio remote
has additional buttons, look at the
<tt>configfiles/lircrc.example.pinnaclestudiopctv</tt> for an example of how
to define additional buttons, and how to debug potential button name
conflicts between the <tt>lircrc.example</tt> file and how <bf>your</bf>
remote defines the button names.

By examining the button names defined in <tt>/etc/lircd.conf</tt> and using
the <bf>irw</bf> program to make sure that your remote is working, you can
create the appropriate mappings in <tt>.lircrc</tt> to get excellent remote
functionality with mythtv.

<sect>Configuring mythtv.
<p>By this point, all of the prerequisites have been installed,
<bf>mysql</bf> is running and has had its initial database setup.  It's now
time to configure mythtv.

<sect1>Editing the settings.txt file.
<p>Open a shell and switch to the <tt>/usr/local/share/mythtv</tt> directory. 
You <bf>MUST</bf> edit the <tt>settings.txt</tt> file so that it's
appropriate for your system.  At a minimum, ensure that the BufferName, RecordFilePrefix
and PIPBuffername variables are set to directories that exist on your system. 
By default, these point to <tt>/mnt/store</tt>.  For example, you may wish to create
a <tt>/var/video</tt> subdirectory, so you would change <tt>/mnt/store</tt>
to <tt>/var/video</tt>
<tscreen><verb>
% su
# mkdir /var/video
# chmod a+rwx /var/video
# exit
</verb></tscreen>

The <tt>settings.txt</tt> file is fairly self-explanatory. 
Currently, mythtv supports two different video encoders, MPEG4 and RTJPEG. 
Take note that RTJPEG has lower CPU demands, but makes large files, and MPEG4
has high CPU demands, but makes smaller files.

<bf>NOTE</bf>: although the width and height can be changed to almost
anything, if you start mythtv and don't see video or you get "segmentation
fault" errors, it is likely that the video4linux (v4l) subsystem did not
like the height and width parameters specified.  It's best to leave the
default as-is until you're sure that mythtv is operational.

<label id="deinterlace_"><bf>NOTE</bf>: the <tt>int Deinterlace=1</tt> variable
controls the deinterlacer.  Support for deinterlacing requires that your
processor has MMX2.  Intel Celeron and Pentium Pro CPUs do not have MMX2, so
make sure that you've got this set to "0" if you have one of these.  If you don'
t, you will get "Illegal Instruction" errors.

Users in North America can now exit and save the file.  Users in other parts
of the world need to modify the first line and modify the XMLTVGrabber
variable to the correct grabber for their region.  <bf>tv_grab_uk</bf> for the
UK, etc.  Use the name from the xmltv directory.


<sect1>Running setup.
<p>
Now that you've edited your <tt>settings.txt</tt> file, it's time to run the
setup program and perform the initial configuration.

Open a shell, and switch to the setup directory:

<tscreen><verb>
% cd setup
</verb></tscreen>

<bf>NOTE</bf>:Red Hat Linux 8.0 uses an unusual character encoding scheme
that some programs don't deal well with. As a result, whenever you run setup
or mythfilldatabase you will have to set a variable to correct this problem.
Failure to set this variable will result in a lot of UTF-8 errors.

Red Hat 8.0 users, ensure that you do this:
<tscreen><verb>
% env LANG=C setup 
</verb></tscreen>

instead of what all the other distributions should use:

<tscreen><verb>
% ./setup
</verb></tscreen>

The setup program will ask you a few questions and then proceed to run the
XMLTV grabber program.

<sect1>Running mythfilldatabase.
<p>Now that the setup program has completed, run <bf>mythfilldatabase</bf> to
get one week of data inserted into the database.

Red Hat 8.0 users, ensure that you do this:
<tscreen><verb>
% env LANG=C mythfilldatabase
</verb></tscreen>

All other distributions can execute the following:

<tscreen><verb>
% mythfilldatabase
</verb></tscreen>

<bf>NOTE</bf>:  <bf>mythfilldatabase</bf> might take a while to complete,
depending on any number of factors, most of which you can't control.  It's
best to just let the program run to completion.

<bf>mythfilldatabase --manual</bf> is another option; the manual option will
allow you to fine tune channel frequencies and specify which channels will
be added to the database.  If you are not using the tv_grab_na grabber, you
must use the <bf>--manual</bf> option.

<bf>mythfilldatabse --file</bf> is an option if there isn't an XMLTV grabber
for your country, but you <bf>do</bf> have an XML formatted listings file
created by some other program.

<!-- get more information on the manual setting -->

<sect2>Setting <bf>mythfilldatabase</bf> to run from <bf>cron</bf>
<p>In order to keep your database filled, <bf>mythfilldatabase</bf> should be
run once a day.

There are two ways to accomplish this:  either as a user-based cron job, or
as a system based cron.  If you use a user-based cron, you can select the
time that the cron job will be run.  A system-based cron job will run at the
same time as any other system cron jobs.

If you are a Mandrake 9.0 user and wish to use a system cron job, you can
perform the following steps:
<tscreen><verb>
% cd configfiles
% su
# cp mythfilldatabasecron /etc/cron.daily
</verb></tscreen>

If you want to know what time your job will run, you can do the following:
<tscreen><verb>
# cat /etc/crontab
SHELL=/bin/bash
PATH=/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=root
HOME=/

# run-parts
01 * * * * root nice -n 19 run-parts /etc/cron.hourly
02 4 * * * root nice -n 19 run-parts /etc/cron.daily
22 4 * * 0 root nice -n 19 run-parts /etc/cron.weekly
42 4 1 * * root nice -n 19 run-parts /etc/cron.monthly
# exit
%
</verb></tscreen>

We can see from the display that the cron.daily job will run at 0402 every
morning.

If you wish to specify a custom time, then the user-based cron job is the
better method.

The default <bf>configfiles/mythcrontab</bf> file will run the <bf>
mythfilldatabase</bf> program every day at 0430.  If you want to change this,
then open the <tt>configfiles/mythcrontab</tt> file in your favorite editor and
modify it as you like.  Once you're satisfied with the time that <bf>
mythfilldatabase</bf> will run, save and exit, and return to the shell prompt.

<tscreen><verb>
% cd configfiles
% crontab mythcrontab
% crontab -l  NOTE: this is a lowercase L.
# The following will run the mythfilldatabase shell script at 0430
# every day.  Format is
# minutes hour day_of_month month day_of_week
# man 5 crontab for more information
# Need to use a shell script because the QTDIR environment variable isn't
# being honored by crontab?
# The next text should be all on the same line.
30 04 * * * /bin/bash $HOME/mythtv-0.7/MC/configfiles/mythfilldatabasecron
%
</verb></tscreen>

As you can see, <bf>mythfilldatabase</bf> will now be run at 0430
every day.

If you decide to alter the time that the <bf>mythfilldatabase</bf> runs,
you can use the crontab command to open your existing job and edit it in
place.

<tscreen><verb>
% crontab -e
</verb></tscreen>

The <bf>crontab -e</bf> command will allow you to edit the existing crontab.
<bf>NOTE</bf>:  By default, the crontab will use <bf>vi</bf> as your
editor.  If you don't like to use <bf>vi</bf>, make sure that you've set
<tt>VISUAL</tt> to something other than <bf>vi</bf>.

<tscreen><verb>
% export VISUAL=/usr/bin/joe
% crontab -e
</verb></tscreen>

This will cause <bf>crontab</bf> to use <bf>joe</bf>, a visual editor that
uses the Wordstar command sequence.  You may use <bf>emacs</bf>, or any
other editor that you're comfortable with.  You may also add the
<tt>EXPORT</tt> command to your <tt>.bashrc</tt> or to the
<tt>/etc/profile.d/mythtv.sh</tt> file.

Once you've completed this step, run the <bf>mythepg</bf> program to check
that the database has been filled.  The cursor keys will move you around the
grid, the "I" key will give you more information on a program and ESC will
exit out back to the shell.

<sect>Using mythtv.
<p><bf>mythfrontend</bf> is the main interface to the mythtv program.  This
program allows you to choose which of the other modules you'd like to run
and ensures that programs that you've scheduled for recording actually get
recorded, so it's important that this program is always running.

<!-- insert stuff on getting around, key sequences, etc -->

<sect1>Using themes with mythtv.
<p>mythtv is "themeable", meaning that the visual appearance of the program
can be modified by the user without re-compiling or altering the program
functionality.
<tt>usr/local/share/mythtv/theme.txt</tt> allows you to alter the theme
for mythtv.  The default theme is called "blue".  Other themes that ship
with mythtv can be found in the <tt>/usr/local/share/mythtv/themes</tt>
directory.  Change the first variable in the <tt>theme.txt</tt> file and
exit and restart <bf>mythfrontend</bf> for it to take effect.

<bf>NOTE</bf>: Exiting <bf>mythfrontend</bf> will stop any recordings you
have in progress, so make sure that the system isn't busy if you modify the
theme while <bf>mythfrontend</bf> is still running.

<sect1>Adding DirecTV information to the database.
<p>A script for adding DirecTV information into the database has been
written by tarek Lubani <url url="mailto:tarek@tarek.2y.net"> and is
available at <url url="http://tarek.2y.net/myth/ppv.pl"
name="http://tarek.2y.net/myth/ppv.pl">.  This is currently an external
user-supplied program, so if you have issues with the script, please contact
the author.

<sect1>Adding support for an external tuner.
<!-- Make this better -->
<p>mythtv supports changing the channel on an external tuner.  If you have
an external tuner, like a DirecTV or digital cable set top box, the
following command should be added to your settings.txt file:
<tscreen><verb>
str ExternalChannelCommand=/usr/local/bin/changechannel
</verb></tscreen>

The <bf>changechannel</bf> program is not supplied with mythtv, so this is
going to be dependant on what sort of external tuner you have.  An example
script can be obtained from <url url="http://tarek.2y.net/myth/sony.pl"
name="http://tarek.2y.net/myth/sony.pl">.  This is currently an external
user-supplied program, so if you have issues with the script, please contact
the author.

Feel free to browse some of what sort of hardware is available at <url
url="http://shop.store.yahoo.com/snapstreammedia/cablepacks.html"
name="http://shop.store.yahoo.com/snapstreammedia/cablepacks.html">, or if
you wish to assemble your own, rather than purchase, the following may be
helpful: <url url="http://www.snapstream.com/products/irblaster/sonydss.htm"
name="http://www.snapstream.com/products/irblaster/sonydss.htm"> for cable
pinouts for RCA DSS receivers.

<sect>mythweb.
<p>mythweb allows you to use a web page to control various aspects of your
mythtv system.  mythweb is a separate application, but it's dependant on
mythtv being installed and operational.

<sect1>Installation and pre-requisites.
<p>Download mythweb from <url url="http://www.mythtv.org/"
name="http://www.mythtv.org/"> and save it to a location where you can find
it.  The next step depends on whether your distribution has a web server and
if you have php support.

<sect2>Mandrake 9.0
<p>Mandrake 9.0 has <bf>apache</bf> and <bf>php</bf> pre-packaged, so
installation is quite simple.  Once you have installed the two programs,
either with the graphical installer (see instructions in <ref
id="graphicinstalltools_" name="Graphic Install Tools">) or through the
command line (section <ref id="CLIinstalltools_" name="Command Line">), and
you've ensured that the <bf>apache</bf> server will start at boot using the
Mandrake Control Center.

<sect1>Completing the installation.
<p>
<tscreen><verb>
% tar -xjf mythweb-0.7.tar.bz2
% cd mythweb-0.7
% su
# mkdir /var/www/html/mythweb
# cp -r . /var/www/html/mythweb
# exit
%
</verb></tscreen>
To access the web page, open a web browser and use <bf>http://[name or ip
address]/mythweb/</bf>

<bf>NOTE</bf>: Make sure that you have a trailing slash on the URL,
otherwise you will get a <tt>404 Page not Found</tt> error.

<sect>mythgallery.
<p>mythgallery is a photo and slideshow application.  mythgallery is a
separate application, but it's dependant on mythtv being installed and
operational.
<sect1>Installation and pre-requisites.
<p>Download mythgallery from <url url="http://www.mythtv.org/"
name="http://www.mythtv.org/"> and save it to a location where you can find
it.
<tscreen><verb>
% tar -xjf mythgallery-0.7.tar.bz2
% cd mythgallery-0.7
% make
# su
# make install
# exit
%
</verb></tscreen>
The configuration file for mythgallery is located in
<tt>/usr/local/share/mythtv</tt>.  This file needs to be edited:  ensure
that your GalleryDir variable is set to the directory where your pictures are
stored.

<itemize>
<item>Use the arrow keys to move around the thumbnails.
<item>Use SPACE or ENTER to maximize a photo.
<itemize><item>Use p or P to start the slideshow of all the files in the
directory.  "Play" or "Pause" on your remote may also work.
<item>Use SPACE or ENTER to advance to the next photo.
</itemize>
<item>Use ESC to go up one level, or to exit out of the module if
you're at the first level.
</itemize>

<sect>mythgame.

<sect>mythmusic.  
<p>[Documentation still being developed.]
<p>mythmusic has a number of pre-requisites that must be satisfied before it
is operational.  Depending on your distribution, some of these prerequisites can
be satisfied through the various package managers.  If your distribution doesn't
offer pre-compiled versions of the software below, then follow the generic
instructions for manually compiling and installing the software.

The pre-requisites for mythtmusic are:
<itemize>
<item>MAD
<item>libvorbis-devel
<item>FLAC
<item>libcdaudio
<item>CDParanoia
</itemize>

<sect1>Manual installation of pre-requisites
<p>These instructions are for distributions which don't have pre-compiled
versions of the software necessary to run mythtv.

Download MAD from <url url="http://www.mars.org/home/rob/proj/mpeg/"
name="http://www.mars.org/home/rob/proj/mpeg/">  Save it to a directory you
can find later.

<tscreen><verb>
% tar -xzf mad-0.14.2b.tar.gz
% cd mad-0.14.2b
% ./configure
% make
% su
# make install
# exit
%
</verb></tscreen>

Download FLAC from <url url="http://flac.sourceforge.net"
name="http://flac.sourceforge.net"> and install:

<tscreen><verb>
% tar -xzf flac-1.0.4.tar.gz
% cd flac-1.0.4
% ./configure
% make
% su
# make install
# exit
%
</verb></tscreen>

Download and install libcdaudio:
<tscreen><verb>
% tar -xzf libcdaudio-XXXXX
% cd libcdaudio-XXXXX
% ./configure
% make
% su
# make install
# exit
%
</verb></tscreen>

Download cdparanoia from the website and copy interface/cdda_interface.h to
/usr/local/include

/usr/lib:
ln -sf libcdda_interface.so.0.9.8 libcdda_interface.so
ln -sf libcdda_paranoia.so.0.9.8 libcdda_paranoia.so

<sect1>Mandrake 9.0
<p>Mandrake 9.0 has a number of the pre-requisites available on the installation
CD.  Some of the software you're going to need will have to be obtained from the "
contrib" or "cooker" development repositories.  Applications downloaded from "
cooker" come from the development branch, so there may be issues with some
software.

<!-- insert instructions on configuring urpmi for contrib and cooker -->

Install libvorbis-devel using urpmi or the Mandrake Control Center
installer.

Install cdparanoia using urpmi or the Mandrake Control Center.

<sect>Troubleshooting.
<sect1>Illegal Instruction.
<p>This error can happen for the following reasons:
<itemize>
<item>You have an AMD K6-2 or VIA C3 processor.  If you have either of
these, make sure that you you followed the instructions in this <ref id="nonintelcpu_"
name="section">.
<item>You have an Intel Celeron or Pentium Pro.  If you have either of these
processors, make sure that your <ref id="deinterlace_" name="deinterlace">
variable is set correctly.
</itemize>
<sect1>mythfilldatabase failing.
<p>If mythtvfilldatabase appears to be failing, edit the
<tt>/usr/bin/tv_grab_na</tt> file and replace "tvlistings2" with
"tvlistings" in line 1187.
<sect1>mythtv seems to disappear; can't see video
<p>If you're using Gnome as your window manager, try switching to KDE.  For
Red Hat Linux 8.0 users, edit <tt>/etc/sysconfig/desktop</tt> and
change "GNOME" to "KDE".
</article>
