<!doctype linuxdoc system>
<article>

<title>Installing and using MythTV
<author>Robert Kulagowski, <url url="mailto:rkulagow@rocketmail.com">
<date>2003-02-01, v1.088
<abstract>
Initially, installation of MythTV seems like a huge task.  There are lots
of dependencies, and various distributions seem to do the same thing
different ways.  This document will attempt to give general installation
instructions, as well as including distribution-specific instructions where
necessary.
</abstract>

<toc>

<sect>How to obtain this document.
<p>This HOWTO document is maintained at the primary MythTV website:  <url url="
http://www.mythtv.org" name="http://www.mythtv.org">.  The latest version of
this document can be found in CVS, accessible either through the <url
url="http://cvs.mythtv.org/cgi-bin/viewcvs.cgi/" name="ViewCVS"> web interface, or directly from the
CVS repository.  You may download the latest copy of MythTV and the 
documentation from CVS this way:
<tscreen><verb>
$ mkdir mythtv
$ cd mythtv
$ cvs -d :pserver:mythtv@cvs.mythtv.org:/var/lib/cvs login
Logging in to :pserver:mythtv@cvs.mythtv.org:/var/lib/cvs
CVS password: mythtv
$ cvs -z3 -d :pserver:mythtv@cvs.mythtv.org:/var/lib/cvs checkout MC
</verb></tscreen>
This documentation will be in the <tt>docs/</tt> subdirectory.

<bf>NOTE</bf>: If you are going to use CVS to compile MythTV rather than using
the distribution tarballs, it is <bf>strongly</bf> recommended that you <url
url="http://www.snowman.net/mailman/listinfo/mythtv-commits/" name="join">
the mythtv-dev mailing list.

This HOWTO is for MythTV v0.7.

<sect>Introduction.
<p>This HOWTO document will focus on MythTV in a North American environment.
If you have installation instructions for a different region or Linux
distribution, please send them to the author so that it can be included in other
versions of this document.

The contributors to MythTV are:
<itemize>
<item>Lead developer:  Isaac Richardson, <url url="mailto:ijr@po.cwru.edu">
<item>Developer:  Matthew Zimmerman, <url url="mailto:mdz@debian.org">
<item>Overall structure of HOWTO and Mandrake 9.0 documentation: Robert Kulagowski, <url url="mailto:rkulagow@rocketmail.com">
<item>Red Hat Linux 8.0 documentation: Cedar McKay, <url url="mailto:mythhowto.3.ohthetrees@spamgourmet.com">
<item>Gentoo documentation and package: Tony Clark, <url url="mailto:tclark@telia.com">
<item>Debian package: Matthew Zimmerman, <url url="mailto:mdz@debian.org">
<item>Mandrake 8.2 documentation: Harondel J. Sibble, <url url="mailto:help@pdscc.com">
</itemize>

<sect>Checking prerequisites. 
<sect1>Hardware. 
<p>MythTV is a software video encoder, which means that it uses a fairly
generic "dumb" video capture card to get frames of video, encodes them using
the CPU on your motherboard and writes them to disk.  High-end video capture
cards and devices like the Tivo and RePlay have dedicated encoder chips
which use specialized hardware to convert the video stream to the MPEG-2
format without using the motherboard CPU.  The main CPU has the
responsibility of running the Operating System and reading and writing the
encoded frames to the disk.  These tasks have fairly low CPU requirements
compared to encoding video, which is why a device like a Series 1 Tivo can
run with only 16MB of RAM and a 54Mhz CPU.

Currently, there are no known MPEG-2 encoder cards that have video4linux
drivers which would be suitable for use with MythTV.  Once the drivers are
written, support for hardware MPEG-2 encoders can be integrated.

There are many variables that go into the question: "How fast a CPU do I
need to run MythTV"?  Obviously, the faster your CPU, the better your
experience will be with MythTV.  Performing the "Watch TV" function, where
the CPU is both encoding and decoding video simultaneously to allow Pause,
Fast Forward and Rewind functions for live TV requires more CPU then just
encoding or decoding.  MythTV also supports multiple encoder cards in a
single PC, thereby increasing the CPU requirements if you plan on
simultaneously encoding multiple programs.

Here are a few data points:
<itemize>
<item>A PIII/733Mhz system can encode one video stream using the RTJPEG
codec using 512x480 capture resolution.  This does not allow for live TV
watching, but does allow for encoding video and then watching it later.
<item>The developer states that his AMD1800+ system can <bf>almost</bf>
encode two MPEG4 video streams and watch one program simultaneously.
<item>A PIII/800Mhz system with 512MB RAM can encode one video
stream using the RTJPEG codec with 480x480 capture resolution and play it back
simultaneously, thereby allowing live TV watching.
<item>A dual Celeron/450Mhz is able to view a 480x480 MPEG4/3300Kbps file
created on a different system with 30% CPU usage.
</itemize>

<bf>NOTE</bf>:  You <em>must</em> use DMA for hard drive access to prevent
choppy or jittery video.  Red Hat Linux 8.0 apparently does not enable DMA
at boot time.  See the Troubleshooting Section for <ref id="Setting_DMA"
name="instructions"> on how to do this.

Mark Cooper has setup a hardware database at <url
url="http://www.goldfish.org/~mcooper/pvrhw/"
name="http://www.goldfish.org/~mcooper/pvrhw/">.  The website will let you
browse what other users have reported as their hardware configuration, and
how happy they are with the results.

<sect1>Software.
<p>There are a few ways of installing programs on Linux systems; you can either
use the graphical tools that come with your distribution, or you can use
command-line utilities.  Either system will get the job done, and it all
depends on your comfort level with Linux.

<bf>NOTE</bf>: If you are using MythTV on multiple systems, at least one of
them will maintain the master database and will need mysql installed.  

In order to compile MythTV, we need to make sure that the software it needs
is installed.  As of 2002-12-17, this list includes <bf>perl</bf>,
<bf>mysql</bf>, <bf>gcc</bf>, <bf>freetype2-devel</bf>,
<bf>XFree86-devel</bf> and <bf>qt-devel</bf>.  If you're going to use a
remote control with MythTV, you're going to need the <bf>cdialog</bf>
package in order to compile <bf>lircd</bf>.

There appears to be issues with ALSA and simultaneously recording and playing 
sound, which is a core requirement for MythTV.  If you are not running 
ALSA 0.9.0rc6 and experience lock-ups of your system when trying to use MythTV, 
then please check the main ALSA website and upgrade to the latest version,
or see if your distribution has already packaged the latest ALSA drivers.

<sect2>Graphical installation tools. <label id="graphicinstalltools_">
<sect3>Mandrake 9.0
<p>On systems running KDE, a tool which will allow you to see what packages
are available and if they're installed on your system can be accessed by
clicking K->Configuration->Packaging->KPackage

There are many inter-related modules, so make sure that you've got the
main package for each one, and not a sub package for an unrelated item.  For
example, there are many modules that have "perl" in them; some are a part of
the apache web server, others are a part of the perl distribution.  In each
case, we're looking to make sure that the primary module is getting
installed.

Click the magnifying glass or press <bf>CTRL-F</bf> and enter "perl" as your
search term.  You should find it under the "Perl" folder.  You need at least
the perl 5.80 base package installed.  If not, click on the "Mark" button.

If you are going to be installing mysql on this system, search for mysql -
it should be under "Databases".  Make sure that mysql and mysql-clients are
installed.  If not, click on "Mark".

Search for gcc.  You're going to need gcc and gcc-c++ installed.

Search for freetype2.  Make sure that you've got freetype2 and
freetype2-devel installed.

Search for XFree86-devel.

Finally, check for qt.  You'll need libqt3-devel (under folder "KDE and
Qt") and libqt3 ("Libraries").

Make sure that cdialog is installed if you want to use MythTV with a remote
control.

alsa-utils is needed for setting the volume.

If you marked anything to install, click on Install Marked.  Click "Yes" or
OK if you get a message about satisfying dependencies.

<sect3>Red Hat Linux 8.0 
<p>Red Hat Linux 8.0 does not have the same graphical package manager used
by other distributions, so you will need to use Red Hat's package
manager.  This is the same utility you saw upon installation from the Red
Hat Linux 8.0 installation CD, and it allows you to select packages at
installation time, or once the system is up and running.  You can access
this program by selecting <verb>RedHatMenu>System Settings>Packages</verb>

If you did a typical Desktop install of Red Hat Linux 8.0 make sure you have
selected:

<itemize>
<item>KDE Desktop Environment
<item>SQL Database Server -  you will have to click on "details" and make 
sure "mysql-server" is checked.  (only required on the master system)
<item>Development Tools
<item>X Software Development
<item>KDE Software Development
<item>Kernel Development
</itemize>

Click Install to continue.

You can not install qt-MySQL, a necessary prerequisite, graphically. To  
install this package using the command line do

<tscreen><verb>
$ up2date --solvedeps qt-MySQL
</verb></tscreen>

<sect2>Command-line installation. <label id="CLIinstalltools_">
<p> This section details the various methods for installing pre-requisites
from the command line.

<sect3>Mandrake
<p><bf>urpmi</bf> is the simplest tool for installation of packages from the
command line.  The difficult part is the configuration aspect.  The
following website <url url="http://plf.zarb.org/~nanardon/urpmiweb.php"
name="http://plf.zarb.org/~nanardon/urpmiweb.php"> will allow you to choose
a mirror site and then present the command-line configuration text for that
mirror.  You will most likely need to add a "Contrib" mirror to your setup.

<sect4>Special instructions for Mandrake 8.2
<p>Mandrake 8.2 does not have a pre-packaged libqt3-devel, so you must compile and
install this manually.  The following command will install the
pre-requisites for qt3, so don't skip this step.  
The simplest tool for installing packages from the command line is
<bf>urpmi</bf>.

Open a shell, and execute the following.  You may get asked a number of
questions regarding dependencies.  It's best to answer "YES".

<tscreen><verb>
$ urpmi mesa-common-devel libmng1-devel mysql-devel libunixodbc2-devel
$ urpmi postgresql-devel xfree86-static-libs
</verb></tscreen>
Once all of the pre-requisites have been installed, the next step is to
obtain and compile the source RPM.

Go to <url url="http://www.rpmfind.net"
name="http://www.rpmfind.net"> and search for
<tt>qt3</tt>.  There will be a number of different versions available.  As
of 2002-12-02, the latest version for Mandrake is called
<tt>qt3-3.0.5-7mdk.src.rpm</tt>. Unless you are running <bf>Mandrake
Cooker</bf> (the beta version of the next release of Mandrake), make sure to
download the standard "Mandrake" release.  Download the <tt>.src.rpm</tt>
file to a directory that you can find.  
<tscreen><verb>
$ su
# cp qt3-3.0.5-7mdk.src.rpm /usr/src/RPMS/SRPMS
# cd /usr/src/RPMS/SRPMS
# rpm --rebuild qt3-3.0.5-7mdk.src.rpm
# cd ../RPMS
# ls -l
</verb></tscreen>
The "ls -l" command will show you a directory listing.  There should be two
files, one will be named "qt3" and the other will be "qt3-devel".  The full
filenames will vary, so one you know the filename, you can install them with
<tscreen><verb>
# rpm -Uvh [filename1]
# rpm -Uvh [filename2]
</verb></tscreen>
Once this has completed (it can take a while, so please be patient),
continue by following the Mandrake 9.0 instructions.

<sect4>Mandrake 8.2 and 9.0
<p>The simplest tool for installing packages from the command line is
<bf>urpmi</bf>.

Open a shell, and execute the following, all on the same line. You may get
asked a number of questions regarding dependencies.  It's best to answer
"YES".

<tscreen><verb>
$ su
# urpmi perl mysql gcc gcc-c++ freetype2-devel cdialog alsa-utils
# urpmi XFree86-devel
</verb></tscreen>

<bf>NOTE</bf>: Mandrake 8.2 users, <em>do not</em> execute the following
command.  You've already manually installed the files in the previous
section.
<tscreen><verb>
# urpmi libqt3-devel
</verb></tscreen>

However, you might get this when you execute the command above:
<tscreen><verb>
[root@pvr root]# urpmi perl mysql gcc gcc-c++ freetype2-devel libqt3-devel cdialog alsa-utils XFree86-devel
everything already installed
</verb></tscreen>

In that case, you're ready to move to the next <ref
id="Setting_up_paths" name="section">.
<sect3>Red Hat Linux 8.0

<p>[Please submit instructions]

<sect3>Gentoo. 
<p>If KDE has not been installed on your system: Edit
<tt>/etc/make.conf</tt> and locate the "USE" variable. If the line is
commented out, remove the comment. The line should have at least:
<tscreen><verb>
USE="mysql qt alsa"
</verb></tscreen>
Next you need to build KDE. If you don't plan on using the ebuilds as 
described in the Gentoo section then you also need to install lame.
<tscreen><verb>
$ emerge kde lame mysql
</verb></tscreen>
If KDE has already been installed, by default, QT libraries with SQL support 
are not built. To enable SQL support, add "mysql qt" to your USE variable in 
<tt>/etc/make.conf</tt> and rebuild QT by running
<tscreen><verb>
$ emerge qt
</verb></tscreen>
Install MySQL if this is the master system:
<tscreen><verb>
$ emerge mysql
</verb></tscreen>

All the necessary files will be downloaded and built. This will take a lot
of time, even on a fast machine if you have to do a full KDE build.

<sect>Setting up paths, ldconfig and other shell variables. <label
id="Setting_up_paths">
<p>There are modifications that need to be made to your system before you
start compiling.

<tt>QTDIR</tt> needs to be set, and <tt>/usr/lib/qt3/bin</tt> must be added
to your path.  Your distribution may already be making these changes as a part of the
installation of the software pre-requisites detailed earlier.

<sect1>Distribution-specific information. <label
id="Distribution-specific_information">
<sect2>Mandrake 9.0
<p>The following instructions work for Mandrake 9.0 using <tt>bash</tt> as the
shell, and may be applicable for a distribution which uses
<tt>/etc/profile.d</tt>.

As root, create the following file in <tt>/etc/profile.d</tt>  The example
filename is "mythtv.sh".  Use what you feel is appropriate.

Open a shell, and switch to superuser mode.
<bf>NOTE: ^D</bf> means press <bf>CTRL</bf> and <bf>d</bf> at the same time.

<tscreen><verb>
$ su
# cd /etc/profile.d
cat > mythtv.sh
export QTDIR=/usr/lib/qt3
export PATH=$PATH:/usr/lib/qt3/bin
^D

# chmod a+x mythtv.sh
# exit
$ exit
</verb></tscreen>
The last two commands are to exit out of the shell.  This way, when you next
open a shell your new commands will take effect.

<sect2>Red Hat Linux 8.0 <label id="RH80-LANG">
<!-- Content submitted by Michael D. Cencula" <mike@cencula.com> -->
<p>Red Hat Linux 8.0 uses an unusual character encoding scheme which causes
problems when running certain programs. As a result, whenever you run setup
or mythfilldatabase you will have to set a variable to correct this problem.
Failure to set this variable will result in a lot of UTF-8 errors.

There are two modifications that you can make to your system to avoid 
this problem. The first is a system wide solution, the second will only 
apply to your current user.

The global change is to modify the <tt>/etc/sysconfig/i18n</tt> file and set
<tt>LANG="en_US"</tt>.  If you want the change to only affect a single user,
you could create a file called <tt>~/.i18n</tt>:

<tscreen><verb>
$ cat > ~/.i18n
LANG="en_US"
^D
$ exit
</verb></tscreen>

<sect1>Checking QTDIR and the PATH. <label id="Checking_that_it_worked">
<p>Open a new shell and switch to superuser mode.
<tscreen><verb>
$ su
# set

[lots of text]
QTDIR=/usr/lib/qt3
PATH=/usr/local/bin:/bin:/usr/bin:/usr/X11R6/bin:/usr/games:/usr/lib/qt3/bin:/home/mythtv/bin:/usr/lib/qt3/bin
</verb></tscreen>
You should see QTDIR and <tt>/usr/lib/qt3/bin</tt> in your path.

If you don't, do not proceed past this step until you have resolved this
error.  You may need to manually specify the QTDIR and PATH at the shell
prompt before compiling.

Next, we need to make sure that the libraries that we're building will be
found when we need them.

<sect1>Modifying <tt>/etc/ld.so.conf</tt>
<p>Switch to /etc and execute the following:
<tscreen><verb>
# cd /etc
# cat >> ld.so.conf
/usr/local/lib
^D

# /sbin/ldconfig
# exit
$ 
</verb></tscreen>

<bf>NOTE</bf>:  It appears that Red Hat Linux 8.0 requires that the
<bf>ldconfig</bf> command needs to be run twice. Red Hat will also
frequently "forget" about the path. It's recommended to run
<bf>/sbin/ldconfig</bf> after installing every package. Failing that, always
run it if you get an unexpected error about not finding libraries.

<sect>Downloading and compiling.

<p>Get MythTV from the <url url="http://www.mythtv.org" name="mythtv.org">
web site.  Save the tarball to a directory you can find.

Get XMLTV from <url url="http://xmltv.sourceforge.net"
name="http://xmltv.sourceforge.net">.  Download version 0.5.6

Get lame from <url url="http://www.mp3dev.org/mp3"
name="http://www.mp3dev.org/mp3">.  Download the source code to v3.93.1 by
following the links to sourceforge.net

<sect1>Notes on compiling on a system with non-Intel processors. <label
id="nonintelcpu_">
<p>If
you've got a system with an AMD K6-2 or a VIA C3 processor, make the
following change in the <tt>settings.pro</tt> file.

Look for 
<verb>-march=pentiumpro</verb> 
and replace it with
<verb>-march=i586</verb> 
before you compile.

Recent AMD processors, like the Duron, Thunderbird and Athlon don't need this
change.

<sect1>Building LAME.

<p>Open a shell and switch to the directory where you saved lame.
<tscreen><verb>
$ tar -xzf lame-3.93.1.tar.gz
$ cd lame-3.93.1
$ ./configure
$ make
$ make test
$ su
# make install
</verb></tscreen>
Check that it worked:
<tscreen><verb>
# ls -l /usr/local/lib
-rw-r--r--    1 root     root       381706 Nov  4 14:22 libmp3lame.a
-rwxr-xr-x    1 root     root          674 Nov  4 14:22 libmp3lame.la*
lrwxrwxrwx    1 root     root           19 Nov  4 14:22 libmp3lame.so ->
libmp3lame.so.0.0.0*
lrwxrwxrwx    1 root     root           19 Nov  4 14:22 libmp3lame.so.0 ->
libmp3lame.so.0.0.0*
-rwxr-xr-x    1 root     root       360197 Nov  4 14:22
libmp3lame.so.0.0.0*

# exit
$ 
</verb></tscreen>

<sect1>Building XMLTV. 
<p><bf>NOTE</bf>: Red Hat Linux 8.0 and Suse 8.1 users, you <em>must</em>
download and install an updated version of libexpat.  The version that ships
with Red Hat Linux 8.0 and Suse 8.1 (version 1.95.4) is buggy, and will
cause problems with XML::Twig. All other distributions may skip this step
and proceed with <ref id="untarring_xmltv" name="untar'ing"> the xmltv file.

If you get errors installing XML::Twig or other XMLTV prerequisites,  
try deleting the old versions of libexpat
<tscreen><verb>
$ su
# rm -f /usr/lib/libexpat*
# /sbin/ldconfig
# exit
</verb></tscreen>

Download version 1.95.5 from sourceforge.net:  <url
url="http://sourceforge.net/projects/expat/"
name="http://sourceforge.net/projects/expat/">

Open a shell prompt:
<tscreen><verb>
$ tar -xzf expat-1.95.5.tar.gz
$ cd expat-1.95.5
$ ./configure
$ make
$ su
# make install
# /sbin/ldconfig
# exit
$ 
</verb></tscreen>

<bf>NOTE</bf>:  Red Hat Linux 8.0 users, make sure that you set your LANG as
described in <ref id="RH80-LANG" name="Section 4">.

Continuing on:

<label id="untarring_xmltv">Untar the xmltv file:
<tscreen><verb>
$ tar -xjf xmltv-0.5.6.tar.bz2
$ cd xmltv-0.5.6
</verb></tscreen>
Install the xmltv prerequisites:
<tscreen><verb>
$ su
# perl -MCPAN -e shell
cpan> install XML::Twig
cpan> install Date::Manip
Date::Manip is up to date.
cpan> install LWP
cpan> install XML::Writer
cpan> exit
</verb></tscreen>

Change to the XMLTV directory and compile it:
<tscreen><verb>
$ cd xmltv-0.5.6
$ perl Makefile.PL
</verb></tscreen>
You can answer "N" to the tv_check, tv_pick_cgi questions.  Say "yes" to
the grabber required for your location.

You may get errors about modules not being installed.  They shouldn't matter
if you're installing North America and have followed the instructions to
this point.
<tscreen><verb>
$ make
$ make test
$ su
# make install
# exit
</verb></tscreen>

<sect1>Manually building MythTV.
<p>Unpack MythTV
<tscreen><verb>
$ tar -xjf mythtv-0.7.tar.bz2
$ cd mythtv-0.7
$ ./configure
$ make
</verb></tscreen>

<label id="RH80_OSD_Strip">
<bf>NOTE for Red Hat 8 users only</bf>: You must manually modify a Makefile
within the themes directory, otherwise your on screen display (OSD) will be
"generic" rather than themed.  The solution is to edit the Makefile within
the themes directory and comment out (using a # symbol before each line)
every line that starts with the word "strip". Make sure you switch back to
the MythTV build directory before executing the next step.

Switch to superuser:
<tscreen><verb>
$ su
# make install
# exit
</verb></tscreen>

<sect1>Gentoo. <label id="Gentoo_build">
<p>Installation of MythTV on Gentoo consists of making a local portage
directory with the necessary ebuild and digest files.  Tony Clark <url
url="mailto:tclark@telia.net"> has
created a portage file which can be downloaded from
<url url="http://smalltime.com/mythtv/mythtv-gentoo-portage.tar.bz2"
name="http://smalltime.com/mythtv/mythtv-gentoo-portage.tar.bz2">

Once you have downloaded the portage file, installation is simple.
<tscreen><verb>
$ su -
# emerge rsync # make sure portage is up to date.
# cd /usr/local
# tar xvfjp Path_To/mythtv-gentoo-portage.tar.bz2
# vi /etc/make.conf
</verb></tscreen>

Add mysql to your USE variable.  ie <tt>USE="mysql ...."</tt>

Locate the line that contains: <tt>#/usr/local/portage</tt> and remove the #

<tscreen><verb>
# ACCEPT_KEYWORDS="~x86" emerge mythtv
</verb></tscreen>

<bf>NOTE</bf>: If you have perl dependency problems update to >=ExtUtils-MakeMaker-6.05-r4

<sect1>Debian.
<p>Debian packages for MythTV and some of its add-on modules have been
packaged by Matt Zimmerman <url url="mailto:mdz@debian.org"> and are
available at <url
url="http://dijkstra.csh.rit.edu:8088/~mdz/debian/dists/woody/mythtv/"
name="http://dijkstra.csh.rit.edu:8088/~mdz/debian/dists/woody/mythtv/"
>, including installation instructions.  All of the prerequisites for
MythTV are available as Debian packages.

The mailing list message for this announcement can be accessed at <url
url="http://www.snowman.net/pipermail/mythtv-dev/2002-November/001116.html"
name="http://www.snowman.net/pipermail/mythtv-dev/2002-November/001116.html">.

<sect>MySQL.
<sect1>Mandrake 9.0
<p>If this is the master system, make sure that mysql is running and started
at boot.  Click on Mandrake Control Center->System->Services, find mysql and
click the "On Boot" button and the "Start" button if the mysql status shows
that it isn't running yet.

<bf>NOTE</bf>:  There have been reports that mysql isn't starting at boot.

<tscreen><verb>
$ su
# chkconfig --level 35 mysql on
# /etc/rc.d/init.d/mysql start
# exit
</verb></tscreen>

<sect1>Red Hat Linux 8.0
<p>If this is the master system, make sure that mysql is running and started at boot. Click on
Redhat menu>Server Settings>Services and enter the root password when asked.
Check "mysqld" and then click Start. Click Save, then close the window.
<sect1>Gentoo.
<p>After installing mysql you need to initialise the database by running
mysql_install_db as root. 

<sect1>Setting up the initial database.
<p>This step is only required for systems that will be maintaining a
database of listings.  If you are running multiple MythTV systems you can
either have one master database read by all the other systems, or you can
have each system maintaining its own.  To setup the initial mysql databases:
<tscreen><verb>
$ cd database
</verb></tscreen>
<sect2>Mandrake 9.0
<p>
<tscreen><verb>
$ mysql -u root < mc.sql
</verb></tscreen>
<sect2>Debian 3.0
<p>
<tscreen><verb>
$ mysql < mc.sql
</verb></tscreen>
<sect2>Red Hat Linux 8.0
<p>
<tscreen><verb>
$ su
# mysql < mc.sql
</verb></tscreen>
<sect2>Gentoo
<p>
<tscreen><verb>
$ su
# mysql < /usr/share/mythtv/database/mc.sql
</verb></tscreen>

<sect>Setting up ALSA and the mixer.

<p>If your video doesn't appear to be in-sync with your audio, it could be
because you are listening to the real-time audio from your video card rather
than after it's been processed and synchronized to the video by MythTV.

What you need to do is to mute the "line-in" of your sound card and also
set it as the recording source.

There are two ways to do this.  Graphically, and from the command line.

<sect1>Graphically setting up the mixer.
<sect2>Mandrake 9.0
<p>Open Kmix by K->Multimedia->Sound->Kmix

Click on Settings->Configure  Make sure that "Tick Marks" and "Show
labels" have "X"'s in them.  This will make it easier to find the correct
audio source.  Click OK.

On the mixer page, look for Line-In on your sound card.  You should see
two LED's - a green one at the top, and a red one at the bottom.  The green
one at the top is for muting; you want to make sure that the green LED is a
dark green, meaning that it's "off".  You also want to click on the red LED
so that it turns bright red, indicating that it's "ON"; this insures that
the Line-in is used as the source.  Click OK, and make sure that you save
the settings so that this is your default.

<sect2>Red Hat Linux 8.0
<sect3>Using OSS drivers.

<p>Red Hat Linux 8.0 ships with OSS sound drivers rather than the ALSA
drivers recommended by the MythTV team. The OSS drivers do work for some
people, and for some cards, but others report problems (sync and jitter)
with OSS. In addition, OSS does not support full duplex on some cards, which
is required if you want to record and play sound using just one sound card.
ALSA has good full duplex support, and also has drivers for some built-in
(motherboard) sound cards that OSS does not. Installing ALSA is less painful
than you might think, so we encourgage you to go that route. For those of
you who do not wish to install ALSA you must do this:

To configure sound to work with MythTV, select 
<verb>RedHat Menu>Sound & Video>Volume Control</verb>
to open up a mixer. Make sure your global volume (on the far left)
is up. Also make sure that the "line in" section has "mute" and "record"
checked and that the gain is turned up. You may have to experiment with
volume/gain levels to get the best sound.  If you experience difficulty with
sound try moving your patch cord from "Line in" to "Mic in". You will need
to go back to the mixer and select "mute" and "record" on the "Mic in" and
turn up the gain for the Mic rather than Line.

<sect3>Using ALSA drivers.
<p>For those of you who do want to install ALSA please follow the 
directions below, compiled with much assistance from Gregorio Gervasio.

First you must find out the name of your driver, which isn't necessarily the
same as the name of your sound card. Go to <url
url="http://www.alsa-project.org/alsa-doc/"
name="http://www.alsa-project.org/alsa-doc/">, find your sound card on the
list and click "details". Near the top it will say something like "The
module options for snd-XXX", where XXX is the name of your driver. In the
instructions below, replace "XXX" with the name of your driver.

Download the development release (0.9.x) from the ALSA web site <url
url="http://www.alsa-project.org" name="http://www.alsa-project.org">.  You
need at least three files:
<itemize>
<item>alsa-driver-0.9.x.tar.bz2
<item>alsa-lib-0.9.x.tar.bz2
<item>alsa-utils-0.9.x.tar.bz2
</itemize>

Start with the alsa-driver package:
<tscreen><verb>
$ tar -xjf alsa-driver-0.9.x.tar.bz2
$ cd alsa-driver-0.9.x
$ ./configure --with-cards=XXX --with-sequencer=yes
$ make
$ su
# make install
# ./snddevices
# exit
$
</verb></tscreen>

This will compile and install the kernel modules and initialization
scripts, as well as create device nodes in /dev.

Install the rest of the packages:
<tscreen><verb>
$ cd ~
$ tar -xjf alsa-lib-0.9.x.tar.bz2
$ cd alsa-lib-0.9.x
$ ./configure
$ make
$ su
# make install
# exit
$ cd ..
$ tar -xjf alsa-utils-0.9.x.tar.bz2
$ cd alsa-utils-0.9.x
$ ./configure
$ make
$ su
# make install
</verb></tscreen>

Next, you must edit <tt>/etc/modules.conf</tt> so that the ALSA modules are
loaded automatically. The first step is to remove your old OSS
configuration to ensure that you don't end up with mysterious conflicts in
the future.  You should end up with a <tt>/etc/modules.conf</tt> file that has
this configuration:

<tscreen><verb>
alias char-major-116 snd
alias snd-card-0 snd-XXX
# module options should go here
# OSS/Free portion
alias char-major-14 soundcore
alias sound-slot-0 snd-card-0
# card #1
alias sound-service-0-0 snd-mixer-oss
alias sound-service-0-1 snd-seq-oss
alias sound-service-0-3 snd-pcm-oss
alias sound-service-0-8 snd-seq-oss
alias sound-service-0-12 snd-pcm-oss
</verb></tscreen>

"XXX" should be the ALSA driver name for your sound card/chip. In some rare
cases you need to supply extra options to the driver. These options are
descried in the "INSTALL" file in the alsa-driver directory or at <url
url="http://www.alsa-project.org/alsa-doc/"
name="http://www.alsa-project.org/alsa-doc/">.

For now we will assume that no extra options are required.  The next step is
to ensure that the ALSA drivers are started during boot-up.

<tscreen><verb>
$ su
# cd /etc/rc.d/init.d
# /sbin/chkconfig --add alsasound
</verb></tscreen>

The next set of instructions will cause the ALSA volume/mixer/etc. state to
be saved when the machine is shut down properly. Note that the mixer
settings won't get restored the next time you boot unless you ran the
shutdown script or you've explicitly saved the state which you can do
as root with:
<tscreen><verb>
# alsactl -f /etc/asound.state store
</verb></tscreen>

Reboot your machine.  Login and adjust the sound levels using "alsamixer". 
You should increase the main volume (the first slider) and the PCM volume,
and unmute them by hitting "m".  For MythTV, if your tuner card audio output
is patched to the Line-In input of your sound card, set the Line input for
capture by pressing SPACE at the slider and mute it by pressing "M". If
you've patched your tuner card to the Mic-In port of your soundcard, follow
the same instructions but make sure that you're on the Mic slider.

Test the driver by playing a simple file:
<tscreen><verb>
$ aplay /usr/share/sounds/info.wav
</verb></tscreen>

If it works, you're done installing ALSA!

<sect1>Setting the mixer from the command line.
<p>If you're running Mandrake 9.0 and have installed the alsa-utils package,
then the <bf>amixer</bf> program can be used to setup the mixer.

<tscreen><verb>
$ amixer set Master,0 100%,100% unmute
$ amixer set Line,0 100%,100% mute capture
$ su
# alsactl store
# exit
$ 
</verb></tscreen>
That takes care of setting the volume correctly, and the ALSA startup script
will restore the volume after a reboot.

You may also use the <bf>alsamixer</bf> program to set the volume.  First,
start <bf>alsamixer</bf> from the command line.  You should start out on the
"Master" volume control slider.  Use the up and down cursor to set the
master volume to around 75%.  Next, use the left and right cursor keys to
move around on the screen until you find the "Line" slider.  Press SPACE to
set it as the capture source, set the level to around 50-75% and press "M"
to mute it.  You can now press ESC to exit out of the <bf>alsamixer</bf>
program.
 
<sect>Setting up a remote control.
<p>MythTV does not have native remote control receiver and decoder software
built-in.  Instead, remote control functions are implemented by cooperating
with <bf>lirc</bf>, the Linux Infra Red Control program.  <bf>lirc</bf>
handles the IR hardware and passes keystrokes to MythTV, which then acts as
if the user had pressed the keys on the keyboard.

Some IR devices require a kernel recompile, and some don't. However, all at
least require having the kernel source available as a resource for the lirc
build process. 

<sect1>Gentoo
<p>To install lirc on Gentoo, all you need to do is:
<tscreen><verb>
$ emerge lirc
</verb></tscreen>

<sect1>Mandrake
<p>lircd has two prerequisites:  <bf>dialog</bf>, available in Mandrake through the
"cdialog" RPM, and the kernel source.  Mandrake 9.0 is using the 2.4.19
kernel, so the easiest thing is to go to <url url="http://www.kernel.org"
name="http://www.kernel.org"> and download
the full 2.4.19 tar file from <url
url="http://www.kernel.org/pub/linux/kernel/v2.4/"
name="http://www.kernel.org/pub/linux/kernel/v2.4/">.

<sect2>Obtaining the kernel.
<p>An easy way is to use the wget command:
<tscreen><verb>
$ wget http://www.kernel.org/pub/linux/kernel/v2.4/linux-2.4.19.tar.bz2
</verb></tscreen>
Next, open a shell and login as superuser.
<tscreen><verb>
$ su 
# mkdir /usr/src
# mv linux-2.4.19.tar.bz2 /usr/src
# cd /usr/src
# tar -xjf linux-2.4.19.tar.bz2
# chown -R root.root linux-2.4.19
# ln -sf linux-2.4.19 linux
# exit
$ 
</verb></tscreen>

<sect1>Red Hat Linux 8.0
<p>You should already have the source from the "Kernel Development" package
you installed in section 3.2. Ensure that a symlink has been created:

<tscreen><verb>
$ cd /usr/src
$ su
# ln -s linux-2.4.18-x.x.x linux
# exit
</verb></tscreen>

<sect1>Obtaining and compiling lirc.

<p>You're going to need to download and compile lircd.  Go to <url
url="http://www.lirc.org" name="http://www.lirc.org"> and download lirc; as
of 2002-11-07, the version available is 0.6.6.  Grab the remotes.tgz file as
well. 
<tscreen><verb>
$ tar -xjf lirc-0.6.6.tar.bz2
$ cd lirc-0.6.6
$ ./setup.sh
</verb></tscreen>
You're going to need to know what sort of receiver you have and where it's
connected.  In the case of the Pinnacle Studio TV card, with the IR receiver
connected to COM1 (/dev/ttys0), once the configuration menu comes up,
perform the configuration by going to Driver Configuration->Other Serial
Port Devices->Pinnacle Systems Receiver->OK and on the next page select
COM1->OK.

Each remote is different; some remote receivers connect directly to your
capture card and not to a serial port, so make sure that you've got the
correct one.

You then click "Save Configuration and run configure" to continue.

Make sure you read the last text generated by the configure step. It will
tell you if you require a kernel recompile, and what the name of your kernel
module will be (if necessary). For instance a home-built receiver may
require a kernel recompile, so you would be notified that you will have to
load the lirc_serial module. If you did not get any such messages skip the
kernel recompile steps below and go directly to making and installing the
lirc driver.

Once the configuration step is complete:
<tscreen><verb>
$ make
$ su
# make install
# chmod 666 /dev/lircd
</verb></tscreen>

At this point, if you're using a serial receiver, check that the link has
been correctly made in /dev

<tscreen><verb>
$ ls -l /dev/li*
lr-xr-xr-x    1 root     root            5 Jan 27 09:00 /dev/lirc -> ttyS0
srw-rw-rw-    1 root     root            0 Jan 27 15:01 /dev/lircd=
prw-r--r--    1 root     root            0 Jan 27 09:00 /dev/lircm|
</verb></tscreen>

As you can see, there's a link from /dev/lirc to ttyS0, aka "COM1".

If the link was not created, ensure that you ran the <tt>make install</tt>
step as root.  If it still doesn't work, then you must create the link
manually.  In this example, the IR device is connected to ttyS0.  If it were
connected to "COM2", then use ttyS1, etc.

<tscreen><verb>
$ su
# cd /dev
# ln -sf ttyS0 lirc
# exit
$
</verb></tscreen>

<sect2>Recompiling your kernel on Red Hat Linux
<p>Don't Panic! Red Hat makes a kernel recompile very easy. They provide  
configuration files that make it so you can recompile your kernel with  
Red Hat defaults. And as a side benefit, your kernel will be compiled  
specifically for your architecture. For a more detailed description (or  
if you run into trouble) of how to do this go to  
<url url="http://www.redhat.com/docs/manuals/linux/RHL-8.0-Manual/custom-guide/ch-custom-kernel.html" 
name="http://www.redhat.com/docs/manuals/linux/RHL-8.0-Manual/custom-guide/ch-custom-kernel.html">

For the impatient:
Make sure you have an emergency floppy boot disk available!
<tscreen><verb>
$ cd /usr/src/linux
$ su
# make mrproper
# cd configs
# ls
</verb></tscreen>

at this point you must look at the file names and determine which  
config file is right for you. For instance if you have an Athlon XP you  
should choose "kernel-2.4.18-athlon.config" but if you have a dual  
processor P4 you might choose "kernel-2.4.18-i686-smp.config"

<tscreen><verb>
# cp yourconfig.config ../.config
# cd ../
# make xconfig
</verb></tscreen>

At this point you will get a graphical configuration utility. All that  
you must do to make lirc work is go to the "character devices" section  
and change "Standard/generic (8250/16550 and compatible UARTs) serial  
support" from "y" to "m". Now if you want you can have a look around.  
For instance, you might wish to turn off ham radio support, or perhaps  
turn off pcmcia support if you are not on a laptop. But be careful!  
Only change things you know you can change. If you are not sure, just  
stick to the one required change. Click "save and exit".
Next:
<tscreen><verb>
# make dep
# make clean
# make bzImage modules
# make modules_install
# make install
</verb></tscreen>

if you are using <bf>grub</bf>, that should be it, reboot and select your custom  
kernel upon boot. If you are using <bf>lilo</bf>, change your lilo configuration  
according to  
<url url="http://www.redhat.com/docs/manuals/linux/RHL-8.0-Manual/custom-guide/ 
s1-custom-kernel-bootloader.html" name="http://www.redhat.com/docs/manuals/linux/RHL-8.0-Manual/custom-guide/ 
s1-custom-kernel-bootloader.html"> Remember, if you have any custom  
kernel modules (alsa, etc) you will have to recompile/reinstall those.

<sect1>Completing the lirc install.
<p>If configure did not mention anything about a kernel module, then you  
are finished. If it did mention a kernel module, you must edit  
the <tt>/etc/modules.conf</tt> file. Add this line as the first thing in the file.  
It must come first, or it may not work.
<tscreen><verb>
alias char-major-61 XXX
</verb></tscreen>

replace XXX with the name which you determined earlier, which in this
example was "lirc_serial"

<tscreen><verb>
$ su
# modprobe lirc_serial
# /sbin/ldconfig
</verb></tscreen>

Next, we're going to manually start lircd the first time:
<tscreen><verb>
# /usr/local/sbin/lircd
</verb></tscreen>

If this fails, complaining of a missing <tt>lircd.conf</tt> file, then you
must find or make one. First look for a premade configuration file at <url
url="http://lirc.sourceforge.net/remotes/"
name="http://lirc.sourceforge.net/remotes/">.  If you find one your remote
there, download the file, name it <tt>lircd.conf</tt> and put it in your
<tt>/etc</tt> directory. If you couldn't find your remote, you must make
your own <tt>lircd.conf</tt> file.

To make your own <tt>lircd.conf</tt> file
<tscreen><verb>
$ irrecord myremote
</verb></tscreen>

Follow the on-screen directions to train your remote and define keys. If  
your remote ends up working well, you should consider submitting your  
<tt>lircd.conf</tt> file back to the lirc developers. Once finished:

<tscreen><verb>
$ su
# cp myremote /etc/lircd.conf
</verb></tscreen>

now try to start lircd again:

<tscreen><verb>
# /usr/local/sbin/lircd
</verb></tscreen>

Now, we're going to add the commands necessary for lircd to run each time
we boot:
<tscreen><verb>
# cd /etc/rc.d
# cat >> rc.local
echo "Starting lircd"
/usr/local/sbin/lircd
^D
# exit
$ 
</verb></tscreen> This takes care of the lircd portion, which "listens" for
the IR signals. If everything went well, the install script for lircd put an
appropriate configuration file for your remote into <tt>/etc/lircd.conf</tt> This
file maps the buttons on the remote control to the IR pulses coming from the
receiver.

The next step is to convert those signals into something that can be used
to control MythTV.
<tscreen><verb>
$ cd ~/mythtv-0.7/configfiles
$ cp lircrc.example ~/.lircrc
</verb></tscreen> 
or
<tscreen><verb>
$ cp lircrc.example.pinnaclestudiopctv ~/.lircrc
</verb></tscreen>
if you've got a Pinnacle Studio PCTV remote.
<tscreen><verb>
$ irw
</verb></tscreen>
Start pressing the keys on your remote; <bf>irw</bf> will
print the name of the button as it is defined in your
<tt>/etc/lircd.conf</tt>. If you don't see anything at this point, you need
to troubleshoot further by going back to the lirc home page and investigating
from there.

If it is working, then press <bf>CTRL-C</bf> to abort the program.  Once you
know that your remote is working, you need to run the <bf>irxevent</bf>
program, which takes the key presses and sends them to MythTV. 
<bf>irxevent</bf>
isn't a daemon, so if you know that your remote is working you need to
invoke it like this: 
<tscreen><verb>
$ irxevent &
</verb></tscreen>
If <bf>irxevent</bf> isn't running, then MythTV will not respond to your remote
control.

Currently, MythTV doesn't have native support for controlling the mixer
volume and mute settings.  A workaround at this time is to invoke the
<bf>amixer</bf> program.  If you wish to define keys to control the mixer,
the <bf>irexec</bf> program can accomplish this fairly easily.  The
configfiles/lircrc.example.pinnaclestudiopctv file has an example of calling
an external program from a remote control button.

<sect1>Additional information for lirc.

<p>Take a look at the lircrc.example files in the <tt>configfiles/</tt>
directory.  In my case, (Pinnacle Studio card) the channel up and down functions
weren't working, due to the fact that the button names were different than
the default <tt>lircrc.example</tt> file that came with MythTV.

The <tt>lircrc.example</tt> file has this:
<tscreen><verb>
begin
    prog = irxevent
    button = ChannelUp
    config = Key Up CurrentWindow
end

begin
    prog = irxevent
    button = ChannelDown
    config = Key Down CurrentWindow
end
</verb></tscreen>
but the <tt>/etc/lircd.conf</tt> that comes in the lircd package 
defines the buttons for the Pinnacle Studio PCTV as:
<tscreen><verb>
          channel+                 0x0000000000000017
          channel-                 0x000000000000001C
</verb></tscreen>
rather than "ChannelUp" and "ChannelDown".  I added the 
following to my /home/[yourusername]/.lircrc file:
<tscreen><verb>
begin
    prog = irxevent
    button = channel+
    config = Key Up CurrentWindow
end

begin
    prog = irxevent
    button = channel-
    config = Key Down CurrentWindow
end
</verb></tscreen>
which took care of basic functionality.  Because the PCTV Studio remote
has additional buttons, look at the
<tt>configfiles/lircrc.example.pinnaclestudiopctv</tt> for an example of how
to define additional buttons, and how to debug potential button name
conflicts between the <tt>lircrc.example</tt> file and how <bf>your</bf>
remote defines the button names.

By examining the button names defined in <tt>/etc/lircd.conf</tt> and using
the <bf>irw</bf> program to make sure that your remote is working, you can
create the appropriate mappings in <tt>.lircrc</tt> to get excellent remote
functionality with MythTV.

<sect1>Configuring lirc for use with an IR blaster.
<p>By Carlos Talbot, <url url="mailto:carlos@talbot.net">

Lirc has support for various IR transmitters. A popular model is the Actisys
IR-200L <url url="http://store.yahoo.com/snapstreammedia/irblasbun.html"
name="http://store.yahoo.com/snapstreammedia/irblasbun.html">. It was
originally designed for IRDA communication, but can be used to transmit A/V remote
control codes. By using the lirc SIR driver, this device can easily be
integrated with MythTV. I have tested this device with an AT&amp;T DCT2000
digital cable box but the instructions can be used to configure other IRDA
devices and A/V remotes.

Follow the steps in the previous section.  When you run setup.sh, select
option 1, driver configuration. From here select option 6, IrDA hardware.
Select your appropriate device and the corresponding serial port, then Save
configuration & run configure from the main menu. Once configure is done
type:

<tscreen><verb>
$ make
</verb></tscreen>

Please note: unlike the Pinnacle receiver above you will be compiling lircd
in addition to a kernel module for the SIR transmitter. Depending on whether
you have your serial port driver configured as a kernel module you might see
the following message during make:

<tscreen><verb>
lirc_sir.c:56:2: warning: #warning
"******************************************"

lirc_sir.c:57:2: warning: #warning "Your serial port driver is compiled into "

lirc_sir.c:58:2: warning: #warning "the kernel. You will have to release the "

lirc_sir.c:59:2: warning: #warning "port you want to use for LIRC with:"

lirc_sir.c:60:2: warning: #warning "setserial /dev/ttySx uart none"

lirc_sir.c:61:2: warning: #warning
"******************************************"
</verb</tscreen>

If you do receive this statement make sure to run the <bf>setserial</bf> command
before you load the lirc_sir module. Follow this with the install:

<tscreen><verb>
$ su
# make install
</verb></tscreen>
 
You will notice that lirc installs the kernel module in
<tt>/lib/modules/uname -a/misc</tt>. 

The configuration for starting <bf>lircd</bf> differs if you're going to be
sending and receiving IR versus just receiving.

<tscreen><verb> 
# cd /etc/rc.d
# cat >> rc.local
echo "Starting lircd"
setserial /dev/ttySx uart none        # (if required)
modprobe lirc_sir
/usr/local/sbin/lircd
^D
# exit
$ 
</verb></tscreen>
 
At this point you have to populate the <tt>/etc/lircd.conf</tt> file with the proper
codes for your A/V remote. You should be able to find your remote within the
lirc remote tar file located at <url
url="http://www.lirc.org/remotes.tar.bz2"
name="http://www.lirc.org/remotes.tar.bz2">. In my case I
extracted the file from remotes/motorola/DCT2000 (gi-motorola-dct2000)

To test the lirc_sir module you can run <bf>irw</bf> to verify the codes are being
received. If everything is configured correctly
you should see something similar to the following:

<tscreen><verb>
$ irw
0000000000007ff0 00 1 gi-motorola-dct2000
000000000000bff8 00 2 gi-motorola-dct2000
000000000000f7f0 00 ENTER gi-motorola-dct2000
</verb></tscreen>
 
Once you've verified lirc is working you can press <bf>CTRL-C</bf> to exit
<bf>irw</bf> and configure the channel changing script.
 
Within <tt>/usr/local/share/mythtv/settings.txt</tt>  (or
<tt>~/.mythtv/settings.txt</tt>) you
need to add the following line:
<tscreen><verb>
str ExternalChannelCommand=/usr/local/bin/change_channel
</verb></tscreen>
 
This csh script will be called each time MythTV needs to change the channel.
Below is a copy of the script followed by the corresponding perl script.
Make sure both are in your path. Also make sure you leave the #!/bin/csh
setting and not change it to bourne or bash. This will create a frustrating
symptom to diagnose where MythTV cannot open /dev/device. Unlike bourne or
bash, csh scripts automatically close parent file descriptors before they
start.
 
<tscreen><verb>
$ cd /usr/local/bin
# su
# cat > change_channel.csh
#!/bin/csh
echo "changing to $1"
/usr/local/bin/channel.pl $1 &
^D
# chmod a+x change_channel.csh
# exit
$ exit
</verb></tscreen>
 
The following file should be saved as /usr/local/bin/channel.pl
<tscreen><verb>
#!/usr/bin/perl
 
# make sure to set this string to
# the corresponding remote in /etc/lircd.conf
$remote_name = "gi-motorola-dct2000";   
 
sub change_channel {
        my($channel_digit) = @_;
        system ("rc SEND_ONCE $remote_name $channel_digit");
        sleep 1;
}
 
$channel=$ARGV[0];
sleep 1;
if (length($channel) > 2) {
        change_channel(substr($channel,0,1));
        change_channel(substr($channel,1,1));
        change_channel(substr($channel,2,1));
} elsif (length($channel) > 1) {
        change_channel(substr($channel,0,1));
        change_channel(substr($channel,1,1));
} else {
        change_channel(substr($channel,0,1));
}
system ("rc SEND_ONCE $remote_name ENTER");
</verb></tscreen>
 
The last statement within the perl script is the lirc rc command. This is
the command that transmits the code to your cable/dss box. Make sure to have
the IRDA device within a few feet of the box.

<sect>Configuring MythTV. <label id="Configuring_mythtv">
<p>By this point, all of the prerequisites have been installed,
<bf>mysql</bf> is running and has had its initial database setup.  It's now
time to configure MythTV.

<sect1>Editing the settings.txt file.
<p>Open a shell and switch to the <tt>/usr/local/share/mythtv</tt> directory. 
You <bf>MUST</bf> edit the <tt>settings.txt</tt> file so that it's
appropriate for your system.  At a minimum, ensure that the BufferName, RecordFilePrefix
and PIPBuffername variables are set to directories that exist on your system. 
By default, these point to <tt>/mnt/store</tt>.  For example, you may wish to create
a <tt>/var/video</tt> subdirectory, so you would change <tt>/mnt/store</tt>
to <tt>/var/video</tt>
<tscreen><verb>
$ su
# mkdir /var/video
# chmod a+rwx /var/video
# exit
</verb></tscreen>

The <tt>settings.txt</tt> file is fairly self-explanatory. 
Currently, MythTV supports two different video encoders, MPEG4 and RTJPEG. 
Take note that RTJPEG has lower CPU demands, but makes large files, and MPEG4
has high CPU demands, but makes smaller files.

<bf>NOTE</bf>: although the width and height can be changed to almost
anything, if you start MythTV and don't see video or you get "segmentation
fault" errors, it is likely that the video4linux (v4l) subsystem did not
like the height and width parameters specified.  It's best to leave the
default as-is until you're sure that MythTV is operational.

<label id="deinterlace_"><bf>NOTE</bf>: the <tt>int Deinterlace=1</tt>
variable controls the deinterlacer.  Support for deinterlacing requires that
your processor has SSE (Streaming SIMD Extensions, aka "MMX2").  Early Intel
Celeron (those that don't use the Coppermine 0.18um core and are usually
<600Mhz), Pentium Pro and Pentium II CPUs do not have SSE, so make sure that
you've got this set to "0" if you have one of these.  If you don't, you will
get "Illegal Instruction" errors.

To determine if you've got SSE, you can:
<tscreen><verb>
$ cat /proc/cpuinfo
[snip]
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca
cmov pat pse36 mmx fxsr sse
</verb></tscreen>

Notice the <bf>sse</bf> at the end of the line.

Users in North America can now exit and save the file.  Users in other parts
of the world need to modify the first line and modify the XMLTVGrabber
variable to the correct grabber for their region.  <bf>tv_grab_uk</bf> for the
UK, etc.  Use the name from the xmltv directory.

<sect1>Running setup.
<p>Now that you've edited your <tt>settings.txt</tt> file, it's time to run the
setup program and perform the initial configuration.

<bf>NOTE</bf>: Red Hat 8.0 users, if you haven't followed <ref id="RH80-LANG" name="these">
steps, you <em>must</em> do so before continuing.

Open a shell, and switch to the setup directory:

<tscreen><verb>
$ cd setup
$ ./setup
</verb></tscreen>

The setup program will ask you a few questions and then proceed to run the
XMLTV grabber program.

<sect1>Running mythfilldatabase.
<p>Now that the setup program has completed, run <bf>mythfilldatabase</bf> to
get one week of data inserted into the database.

<tscreen><verb>
$ mythfilldatabase
</verb></tscreen>

<bf>NOTE</bf>:  <bf>mythfilldatabase</bf> might take a while to complete,
depending on any number of factors, most of which you can't control.  It's
best to just let the program run to completion.

<bf>mythfilldatabase --manual</bf> is another option; the manual option will
allow you to fine tune channel frequencies and specify which channels will
be added to the database.  If you are not using the tv_grab_na grabber, you
must use the <bf>--manual</bf> option.

<bf>mythfilldatabse --file</bf> is an option if there isn't an XMLTV grabber
for your country, but you <bf>do</bf> have an XML formatted listings file
created by some other program.

<bf>mythfilldatabase --xawchannels</bf> is an option if you have used
<bf>xawtv</bf> to fine-tune your channels and would like to import the fine
tuning offsets into MythTV.

<!-- get more information on the manual setting -->

<sect2>Setting <bf>mythfilldatabase</bf> to run from <bf>cron</bf>
<p>In order to keep your database filled, <bf>mythfilldatabase</bf> should be
run once a day.

There are two ways to accomplish this:  either as a user-based cron job, or
as a system based cron.  If you use a user-based cron, you can select the
time that the cron job will be run.  A system-based cron job will run at the
same time as any other system cron jobs.

If you are a Mandrake 9.0 user and wish to use a system cron job, you can
perform the following steps:
<tscreen><verb>
$ cd configfiles
$ su
# cp mythfilldatabasecron /etc/cron.daily
</verb></tscreen>

If you want to know what time your job will run, you can do the following:
<tscreen><verb>
# cat /etc/crontab
SHELL=/bin/bash
PATH=/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=root
HOME=/

# run-parts
01 * * * * root nice -n 19 run-parts /etc/cron.hourly
02 4 * * * root nice -n 19 run-parts /etc/cron.daily
22 4 * * 0 root nice -n 19 run-parts /etc/cron.weekly
42 4 1 * * root nice -n 19 run-parts /etc/cron.monthly
# exit
$ 
</verb></tscreen>

We can see from the display that the cron.daily job will run at 0402 every
morning.

If you wish to specify a custom time, then the user-based cron job is the
better method.

The default <bf>configfiles/mythcrontab</bf> file will run the <bf>
mythfilldatabase</bf> program every day at 0430.  If you want to change this,
then open the <tt>configfiles/mythcrontab</tt> file in your favorite editor and
modify it as you like.  Once you're satisfied with the time that <bf>
mythfilldatabase</bf> will run, save and exit, and return to the shell prompt.

<tscreen><verb>
$ cd configfiles
$ crontab mythcrontab
$ crontab -l  NOTE: this is a lowercase L.
# The following will run the mythfilldatabase shell script at 0430
# every day.  Format is
# minutes hour day_of_month month day_of_week
# man 5 crontab for more information
# Need to use a shell script because the QTDIR environment variable isn't
# being honored by crontab?
# The next text should be all on the same line.
30 04 * * * /bin/bash $HOME/mythtv-0.7/MC/configfiles/mythfilldatabasecron
$ 
</verb></tscreen>

As you can see, <bf>mythfilldatabase</bf> will now be run at 0430
every day.

If you decide to alter the time that the <bf>mythfilldatabase</bf> runs,
you can use the crontab command to open your existing job and edit it in
place.

<tscreen><verb>
$ crontab -e
</verb></tscreen>

The <bf>crontab -e</bf> command will allow you to edit the existing crontab.
<bf>NOTE</bf>:  By default, the crontab will use <bf>vi</bf> as your
editor.  If you don't like to use <bf>vi</bf>, make sure that you've set
<tt>VISUAL</tt> to something other than <bf>vi</bf>.

<tscreen><verb>
$ export VISUAL=/usr/bin/joe
$ crontab -e
</verb></tscreen>

This will cause <bf>crontab</bf> to use <bf>joe</bf>, a visual editor that
uses the Wordstar command sequence.  You may use <bf>emacs</bf>, or any
other editor that you're comfortable with.  You may also add the
<tt>EXPORT</tt> command to your <tt>.bashrc</tt> or to the
<tt>/etc/profile.d/mythtv.sh</tt> file.

Once you've completed this step, run the <bf>mythepg</bf> program to check
that the database has been filled.  The cursor keys will move you around the
grid, the "I" key will give you more information on a program and ESC will
exit out back to the shell.

<sect>Using MythTV.
<p><bf>NOTE to Red Hat 8.0 users</bf>:Red Hat Linux 8.0 ships with Gnome as
the default desktop environment.  However, Gnome seems to have issues with
window focus and window switching which sometimes cause mythfrontend to
obscure the video. KDE does not seem to have any such issues. Therefore you
will need to switch to KDE by selecting RedHatMenu>Extras>System
Settings>Desktop Switching Tool and choose "KDE".

<bf>mythfrontend</bf> is the main interface to the MythTV program.  This
program allows you to choose which of the other modules you'd like to run
and ensures that programs that you've scheduled for recording actually get
recorded, so it's important that this program is always running.

<!-- insert stuff on getting around, key sequences, etc -->

<sect1>Using themes with MythTV.
<p>MythTV is "themeable", meaning that the visual appearance of the program
can be modified by the user without re-compiling or altering the program
functionality.
<tt>/usr/local/share/mythtv/theme.txt</tt> allows you to alter the theme
for MythTV.  The default theme is called "blue".  Other themes that ship
with MythTV can be found in the <tt>/usr/local/share/mythtv/themes</tt>
directory.  Change the first variable in the <tt>theme.txt</tt> file and
exit and restart <bf>mythfrontend</bf> for it to take effect.

<bf>NOTE</bf>: Exiting <bf>mythfrontend</bf> will stop any recordings you
have in progress, so make sure that the system isn't busy if you modify the
theme while <bf>mythfrontend</bf> is still running.

<sect1>Adding DirecTV information to the database.
<p>A script for adding DirecTV information into the database has been
written by tarek Lubani <url url="mailto:tarek@tarek.2y.net"> and is
available at <url url="http://tarek.2y.net/myth/ppv.pl"
name="http://tarek.2y.net/myth/ppv.pl">.  This is currently an external
user-supplied program, so if you have issues with the script, please contact
the author.

<sect1>Adding support for an external tuner.
<!-- Make this better -->
<p>MythTV supports changing the channel on an external tuner.  If you have
an external tuner, such as a DirecTV or digital cable set top box, the
following command should be added to your settings.txt file:
<tscreen><verb>
str ExternalChannelCommand=/usr/local/bin/changechannel
</verb></tscreen>

The <bf>changechannel</bf> program is not supplied with MythTV, so this is
going to be dependent on what sort of external tuner you have.  Example
scripts for Sony and RCA receivers can be obtained from <url url="http://tarek.2y.net/myth/"
name="http://tarek.2y.net/myth/">.  This is currently an external
user-supplied program, so if you have issues with the script, please contact
the author.

Feel free to browse some of what sort of hardware is available at <url
url="http://shop.store.yahoo.com/snapstreammedia/cablepacks.html"
name="http://shop.store.yahoo.com/snapstreammedia/cablepacks.html">, or if
you wish to assemble your own, rather than purchase, the following may be
helpful: <url url="http://www.snapstream.com/products/irblaster/sonydss.htm"
name="http://www.snapstream.com/products/irblaster/sonydss.htm"> for cable
pinouts for RCA DSS receivers.

<sect>MythWeb.
<p>MythWeb allows you to use a web page to control various aspects of your
MythTV system.  MythWeb is a separate application, but it's dependent on
MythTV being installed and operational.

<sect1>Installation and pre-requisites.
<p>Download mythweb from <url url="http://www.mythtv.org/"
name="http://www.mythtv.org/"> and save it to a location where you can find
it.  The next step depends on whether your distribution has a web server and
if you have php support.

<sect2>Mandrake 9.0
<p>Mandrake 9.0 has <bf>apache</bf> and <bf>php</bf> pre-packaged, so
installation is quite simple.  Once you have installed the two programs,
either with the graphical installer (see instructions in <ref
id="graphicinstalltools_" name="Graphic Install Tools">) or through the
command line (section <ref id="CLIinstalltools_" name="Command Line">), and
you've ensured that the <bf>apache</bf> server will start at boot using the
Mandrake Control Center.

<sect1>Completing the installation.
<p>
<tscreen><verb>
$ tar -xjf mythweb-0.7.tar.bz2
$ cd mythweb-0.7
$ su
# mkdir /var/www/html/mythweb
# cp -r . /var/www/html/mythweb
# exit
$ 
</verb></tscreen>
To access the web page, open a web browser and use <bf>http://[name or ip
address]/mythweb/</bf>

<bf>NOTE</bf>: Make sure that you have a trailing slash on the URL,
otherwise you will get a <tt>404 Page not Found</tt> error.

<sect>MythGallery.
<p>MythGallery is a photo and slideshow application.  MythGallery is a
separate application, but it's dependent on MythTV being installed and
operational.
<sect1>Installation and pre-requisites.
<p>Download MythGallery from <url url="http://www.mythtv.org/"
name="http://www.mythtv.org/"> and save it to a location where you can find
it.
<tscreen><verb>
$ tar -xjf mythgallery-0.7.tar.bz2
$ cd mythgallery-0.7
$ make
# su
# make install
# exit
$ 
</verb></tscreen>
The configuration file for MythGallery is located in
<tt>/usr/local/share/mythtv</tt>.  This file needs to be edited:  ensure
that your GalleryDir variable is set to the directory where your pictures are
stored.

<itemize>
<item>Use the arrow keys to move around the thumbnails.
<item>Use SPACE or ENTER to maximize a photo.
<itemize><item>Use p or P to start the slideshow of all the files in the
directory.  "Play" or "Pause" on your remote may also work.
<item>Use SPACE or ENTER to advance to the next photo.
</itemize>
<item>Use ESC to go up one level, or to exit out of the module if
you're at the first level.
</itemize>

<sect>MythGame.

<sect>MythMusic.  
<p>[Documentation still being developed.]
<p>MythMusic has a number of pre-requisites that must be satisfied before it
is operational.  Depending on your distribution, some of these prerequisites can
be satisfied through the various package managers.  If your distribution doesn't
offer pre-compiled versions of the software below, then follow the generic
instructions for manually compiling and installing the software.

The pre-requisites for MythMusic are:
<itemize>
<item>MAD
<item>libvorbis-devel
<item>FLAC
<item>libcdaudio
<item>CDParanoia
</itemize>

<sect1>Manual installation of pre-requisites
<p>These instructions are for distributions which don't have pre-compiled
versions of the software necessary to run MythTV.

Download MAD from <url url="http://www.mars.org/home/rob/proj/mpeg/"
name="http://www.mars.org/home/rob/proj/mpeg/">  Save it to a directory you
can find later.

<tscreen><verb>
$ tar -xzf mad-0.14.2b.tar.gz
$ cd mad-0.14.2b
$ ./configure
$ make
$ su
# make install
# exit
$ 
</verb></tscreen>

Download FLAC from <url url="http://flac.sourceforge.net"
name="http://flac.sourceforge.net"> and install:

<tscreen><verb>
$ tar -xzf flac-1.0.4.tar.gz
$ cd flac-1.0.4
$ ./configure
$ make
$ su
# make install
# exit
$ 
</verb></tscreen>

Download libcdaudio from <url name="libcdaudio.sourceforge.net"
url="http://sourceforge.net/project/showfiles.php?group_id=27134"> and
install:
<tscreen><verb>
$ tar -xzf libcdaudio-0.99-6.tar.gz
$ cd libcdaudio-0.99.6
$ ./configure
$ make
$ su
# make install
# exit
$ 
</verb></tscreen>

Download cdparanoia from <url name="http://www.xiph.org/paranoia/down.html"
url="http://www.xiph.org/paranoia/download/cdparanoia-III-alpha9.8.src.tgz">.
<tscreen><verb>
$ tar -xzf cdparanoia-III-alpha9.8.src.tgz
$ cd cdparanoia-III-alpha9.8
$ ./configure
$ make
$ su
# make install
<!-- see if the next step is a Mandrake only issue -->
# cp interface/cdda_interface.h /usr/local/include
# cd /usr/lib
# ln -sf libcdda_interface.so.0.9.8 libcdda_interface.so
# ln -sf libcdda_paranoia.so.0.9.8 libcdda_paranoia.so
# exit
$ 
</verb></tscreen>
<sect1>Mandrake 9.0
<p>Mandrake 9.0 has a number of the pre-requisites available on the
installation CD.  Some of the software you're going to need will have to be
obtained from the "contrib" or "cooker" development repositories. 
Applications downloaded from "cooker" come from the development branch, so
there may be issues with some software.

<p><bf>urpmi</bf> is the simplest tool for installation of packages from the
command line.  The difficult part is the configuration aspect.  The
following website <url url="http://plf.zarb.org/~nanardon/urpmiweb.php"
name="http://plf.zarb.org/~nanardon/urpmiweb.php"> will allow you to choose
a mirror site and then present the command-line configuration text for that
mirror.  You will most likely need to add a "Contrib" mirror to your setup. 
Once you have done that, you can proceed.

<tscreen><verb>
# urpmi mad flac libcdaudio cdparanoia libvorbis-devel libcdda0-devel
</verb></tscreen>

<sect1>Compiling MythMusic.
<p>Once all the pre-requisites have been installed, you can proceed with
getting MythMusic going.
<tscreen><verb>
$ make
$ su
# make install
# exit
$ cd musicdb
$ mysql -u root < metadata.sql
</verb></tscreen>

Edit the <tt>/usr/local/share/mythtv/mythmusic-settings.txt</tt> file for
your particular system.

<sect>MythWeather
<p>The MythWeather module will obtain the weather information for the
location that you specify.

Change into the MythWeather directory, then make and make install:
<tscreen><verb>
$ cd mythweather
$ make
$ su
# make install
# exit
</verb></tscreen>

MythWeather uses MSNBC.com as its source for weather data.  You may specify a
number of identifiers in order to obtain your local weather.
<itemize>
<item>Your zip code.
<item>An airport code.
<item>The "accid".
</itemize>

In order to determine your accid, access the msnbc.com weather
site at the following URL: <url
url="http://www.msnbc.com/news/wea_front.asp?0wl=w3&amp;tab=oth&amp;ta=y"
name="http://www.msnbc.com/news/wea_front.asp?0wl=w3&amp;tab=oth&amp;ta=y">  Once
there, fill in your location.  After the MSNBC server completes your request,
check the URL in the address bar for "accid=XXXXX".  The "XXXXX" portion
is the area id you will need for the next configuration step.

For now, you must manually configure MythWeather:

<tscreen><verb>
$ mysql -u root
mysql> use mythconverg;
mysql> insert into settings (value, data) VALUES ('locale','YOUR_ZIPCODE_OR_AREA_ID_OR_AIRPORTCODE');
mysql> exit
$
</verb></tscreen>

So, as an example for zipcode 60561:
<tscreen><verb>
$ mysql -u root
mysql> use mythconverg;
mysql> insert into settings (value, data) VALUES ('locale','60561');
mysql> exit
$
</verb></tscreen>

An example for Paris, France:
<tscreen><verb>
$ mysql -u root
mysql> use mythconverg;
mysql> insert into settings (value, data) VALUES ('locale','FRXX0076');
mysql> exit
$
</verb></tscreen>

If you wish to use Celsius as the default:
<tscreen><verb>
mysql> insert into settings (value, data) VALUES ('SIUnits', 'Yes');
mysql>
</verb></tscreen>

These are the keyboard commands for MythWeather:
<tscreen><verb>
Left Key             Goes back one page, and extends the time spent
                     on the page you are on.
Right Key            Goes forward one page, see above.
Space                Pause, wait on the current page until space is hit
                     again.
Numeric Keys         You can check other weather by keying in other ZIP codes.
Enter Key            Switch between celsius and fahrenheit. Can also
                     be used a way to force a data update.
"m" Key              Resets the location to the database default, then updates the data.
</verb></tscreen>

<sect>MythVideo
<p>The MythVideo application will allow you to use an external program to
watch media files that are not directly supported by MythTV.

Change into the MythVideo directory, then make and make install:
<tscreen><verb>
$ cd mythvideo
$ make
$ su
# make install
# exit
</verb></tscreen>

The next step is to edit the
<tt>/usr/local/share/mythvideo/mythexplorer-settings.txt</tt> file.  Change
the StartDir to a valid mount point on your system.

<sect>Troubleshooting.
<sect1>Illegal Instruction.
<p>This error can happen for the following reasons:
<itemize>
<item>You have an AMD K6-2 or VIA C3 processor.  If you have either of
these, make sure that you you followed the instructions in this <ref id="nonintelcpu_"
name="section">.
<item>You have an early production Intel Celeron, Pentium Pro or Pentium II.  If you have any
of these processors, make sure that your <ref id="deinterlace_" name="deinterlace">
variable is set correctly.  Your CPU needs to support SSE instructions for
deinterlace support.  You may check this by doing a <tt>$ cat
/proc/cpuinfo</tt> and looking for "sse" in the processor flags section.
</itemize>
<sect1>mythfilldatabase failing.
<p>If mythfilldatabase suddenly appears to be failing, check to see what version of
XMLTV you're running.  Versions prior to 0.5.4 need to have the following
change made: edit the
<tt>/usr/lib/perl5/site_perl/5.8.0/XMLTV/ZapListings.pm</tt> file and
perform a global search and replace, searching for "tvlistings2" and
replacing it with "tvlistings".
<bf>NOTE</bf>:  It is highly recommended to run the latest version of XMLTV
available.  In North America, zap2it, the listings provider, has been
making numerous changes to their website which negatively impact XMLTV.
<sect1>MythTV seems to disappear; can't see video
<p>If you're using Gnome as your window manager, try switching to KDE.  For
Red Hat Linux 8.0 users, edit <tt>/etc/sysconfig/desktop</tt> and
change "GNOME" to "KDE".
<sect1>Fast CPU, choppy or jittery video. <label id="Setting_DMA">
<p>This is most likely because your hard drive isn't setup to use DMA.  Use
the <bf>hdparm</bf> program to check and enable DMA.<tscreen><verb>
# hdparm -d /dev/hd?
</verb></tscreen> will tell you the DMA status for your hard drives.  If you run
<bf>hdparm</bf> with the <tt>-d1</tt> parameter, it will turn DMA on.
<!-- Next section adopted from a post by Dwaine Garden
dwainegarden@rogers.com to the mailing list. -->

You may also setup your PC to do this at boot time, either by adding the
command to your <tt>/etc/rc.local</tt> file, or by adding files to
/etc/sysconfig.

On Mandrake and other distributions, if you install hdparm from an RPM you
will most likely get a <tt>/etc/sysconfig/harddisks</tt> file installed. 
This file will be parsed by the <tt>/etc/rc.sysinit</tt> script.  If you use
the default <tt>harddisks</tt> file, your changes will affect all IDE devices
(including CD ROMs).  If you wish to use different parameters for various
devices, rename and/or copy the file to <tt>harddiskhda</tt>,
<tt>harddiskhdb</tt>, etc.  Edit the file to your liking and on the next
reboot your setting will be preserved.

<sect1>I keep losing all of my settings every time I compile!
<p>MythTV will overwrite any settings in <tt>/usr/local/share/mythtv</tt>.
If you want to make sure that you don't lose your modifications, make a
directory <tt>~/.mythtv</tt> and copy your settings.txt file to this
location.
<sect1>Compile errors.
<p>Some compile errors are worse than others.  If you get an error that
doesn't abort the compilation, and says something like:
<tscreen><verb>
cc1plus: warning: changing search order for system directory
"/usr/local/include"
cc1plus: warning:   as it has already been specified as a non-system
directory
</verb></tscreen>
then it shouldn't be a problem.

If you get an error like <tt>/usr/bin/ld: cannot find -lXext</tt>, the
compiler is telling you that you don't have XFree86-devel installed, and
this needs to be fixed before MythTV will work correctly.
<sect1>My screen goes blank, but comes back when I wiggle the mouse or use the keyboard.
<p>This is due to DPMS, the Display Power Management System, which is used
to save power by turning off your monitor when the system decides that it's
not being used.  Since it's likely that watching TV will not generate
keyboard or mouse events for a time, you need to turn off DPMS.  There are a
few ways to do this.  You may also need to check your BIOS for power saving
modes and disable screen blanking there as well.

Edit your <tt>/etc/X11/XF86Config-4</tt> file, and look for:
<tscreen><verb>
Section "ServerFlags"
    #DontZap # disable <Crtl><Alt><BS> (server abort)
    #DontZoom # disable <Crtl><Alt><KP_+>/<KP_-> (resolution switching)
    AllowMouseOpenFail # allows the server to start up even if the mouse doesn't work
EndSection
</verb></tscreen>

Add <tt>Option "NoPM" "true"</tt> and <tt>Option "BlankTime" "0"</tt>to the ServerFlags section.

Also, look for:
<tscreen><verb>
Section "Device"
    Identifier "device1"
    VendorName "nVidia Corporation"
    BoardName "NVIDIA GeForce 256 (generic)"
    Driver "nv"
    Option "DPMS"
EndSection
</verb></tscreen>

In this case, you would need to either delete the <tt>Option "DPMS"</tt>
line, or change it to <tt># Option "DPMS"</tt> to comment it out.  The next
time you start XFree this change will take effect.

Finally, check:
<tscreen><verb>
Section "Monitor"
    Identifier "monitor1"
    VendorName "Plug'n Play"
    HorizSync 30-85
    VertRefresh 50-160

    # Sony Vaio C1(X,XS,VE,VN)?
    # 1024x480 @ 85.6 Hz, 48 kHz hsync
    ModeLine "1024x480"    65.00 1024 1032 1176 1344   480  488  494  563 -hsync -vsync

    # TV fullscreen mode or DVD fullscreen output.
    # 768x576 @ 79 Hz, 50 kHz hsync
    ModeLine "768x576"     50.00  768  832  846 1000   576  590  595  630

    # 768x576 @ 100 Hz, 61.6 kHz hsync
    ModeLine "768x576"     63.07  768  800  960 1024   576  578  590  616
EndSection
</verb></tscreen>

Ensure that there isn't an <tt>Option "DPMS"</tt> in the Monitor
configuration.

You can also turn off DPMS from the Command Line, but this will not survive
a reboot.

<tscreen><verb>
$ xset -dpms
</verb></tscreen>

Using <tt>xset +dpms</tt> will turn it back on.

Finally, depending on your distribution, you may be able to turn it off from
within the control panel.

<sect1>I can't checkout using CVS anymore!
<p>Isaac has changed some things around.  The CVS repository is now known as
<tt>cvs.mythtv.org</tt>, rather than <tt>www.mythtv.org</tt> or
<tt>mythtv.org</tt>.  Make sure you change your <tt>CVSROOT</tt> to point to
the new server, delete your old tree, and re-do the checkout.

<sect1>I get segfaults / MythTV isn't doing anything.
<p>Without details, the developers will not be able to determine if you have
discovered a genuine code-bug,  or it the problem is with your system.  In
order to determine what's going on, you must recompile MythTV with debugging
support and run MythTV within <bf>gdb</bf>, the GNU debugger.

Edit the settings.pro file.  Make sure that the top of the file looks like this:
<tscreen><verb>
$ cat settings.pro
CONFIG += debug
#CONFIG += release
</verb></tscreen>

Now, you need to clear out the old versions of the software to ensure that
you're running with the debugging code, then compile and install.

<tscreen><verb>
$ make clean distclean
$ ./configure
$ make
$ su
# make install
# exit
</verb></tscreen>

At this point, you now have debug-enabled software ready.  Let's assume that
the problem you're having is in the <tt>setup</tt> program.

<tscreen><verb>
$ cd setup
$ gdb ./setup

GNU gdb 5.2.1-2mdk (Mandrake Linux)
Copyright 2002 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain
conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "i586-mandrake-linux-gnu"...
(gdb)
</verb></tscreen>

<bf>gdb</bf> has a number of options, read the <tt>man</tt> page for more
information.

Once at the <tt>(gdb)</tt> prompt, type <tt>run</tt> to start program
execution.  When the program segfaults, type <tt>bt</tt> to get the
backtrace.  The backtrace should be posted to the mythtv-dev mailing list,
along with the steps you followed to get the program to crash.

<!--
If you <bf>gdb</bf> keeps pausing during the debug, printing things like
"SIG32", you need to type in:
<tscreen><verb>
(gdb) handle SIG32 nostop noprint
(gdb) handle SIG33 nostop noprint
</verb</tscreen> so that the program will continue to execute rather than
stopping.

You may also put these commands into the <tt>.gdbinit</tt> file so that they
always take effect.

<tscreen><verb>
$ cat > .gdbinit
handle SIG32 nostop noprint
handle SIG33 nostop noprint
^D
$
</verb></tscreen>
-->

<sect1>MythTV makes my system crash. 
<p>MythTV <em>can not</em> crash your system - it is a user-level program. 
If your system is crashing when you run MythTV, then you have some
issue with the drivers for your capture card or other hardware, or the CPU
fan has fallen off/broken and your system is overheating when asked to
perform a CPU intensive task like encoding video.

<sect1>Troubleshooting audio
<p>By Bruce Markey, <url url="mailto:bjm@lvcm.com"
name="mailto:bjm@lvcm.com">

Audio appears to be one of the bigger issues that users run into on the
mailing list.  If the audio isn't configured correctly, then MythTV will
often appear to hang, when in fact it is trying to manipulate the audio
subsystem and failing.  You may or may not receive error messages indicating
that the source of the error is the audio subsystem.

You can not use <bf>xawtv</bf> to determine if your audio is working
correctly, since <bf>xawtv</bf> is simply using the the analog sound patched
through line-in to line-out. It doesn't need to digitize the sound unless
you are using the recording function.

A better test to verify that sound will work for MythTV (and recording with
<bf>xawtv</bf> for that matter) is to startup <bf>xawtv</bf>, mute the
line-in then run <tt>aplay /dev/dsp</tt>. Once this test succeeds, MythTV
should also work correctly because it writes to and read from /dev/dsp in
the same way that <bf>aplay</bf> does.

To record audio along with video the audio signal must be digitized by a DSP
so that the audio data can be stored in a file. On playback, the audio data
is written to /dev/dsp and converted back to an analog signal. This analog
signal should then be sent to your speakers. Here is what is needed in
alsamixer:

CAPTUR source - the analog source to be sent to the DSP. This should be set
to the input source from the tuner card to the sound card. In most cases
this is Line but this could also be Aux, CD, Mic, etc., depending on how you
connect the input cable. This source should be muted to prevent patching
through the analog sound. The volume of this source will not affect the
record level.

Capture mixer - this sets the level for the analog to digital recording.
While a volume of 100% is recommended for testing, distortion may occur.
Lowering this level to 75% to 85% may result in better audio quality.
"Capture" should be marked as the CAPTUR destination.

PCM mixer - this sets the level for the digital to analog playback. While a
volume of 100% is recommended for testing, distortion may occur. Lowering
this level to 75% to 85% may result in better audio quality.

Master mixer - sets the level for the analog signal sent to line-out or the
speakers.

You may also want to ensure that <tt>/dev/dsp</tt> hasn't already been
grabbed by another process, like <bf>esd</bf> or <bf>artsd</bf>.  If
<tt>/dev/dsp</tt> isn't available, then MythTV won't work.  Check your
windowmanager documentation for instructions on disabling the sound manager.
If you wish to see what application is grabbing a resource, you can use the
<tt>fuser</tt> command:
<tscreen><verb>
# fuser -v /dev/dsp
</verb></tscreen>


If you're using multiple sound cards and multiple tuners, use <tt>alsamixer
-c 1</tt> to work with the second sound card.  The first card is #0, the
second card is #1, etc.

<sect1>MythWeather is showing me the weather in the Bahamas!
<p>You didn't read the documentation.  Ensure that you set your locale
correctly.

<sect1>I can't see parts of the On Screen Display.
<p>If you're a Red Hat 8.0 user, make sure that you've followed the
instructions which tell you how to modify the Themes makefile. <ref id="RH80_OSD_Strip"
name="Link">.

<sect>Miscellaneous.
<sect1>I'd like to watch the files without using MythTV / I'd like to convert the files to some other format.
<p>Matthew Zimmerman has created a patch for MPlayer / Mencoder
<url url="http://www.mplayerhq.hu" name="http://www.mplayerhq.hu"> that allows
you view the files created by MythTV.  MythTV doesn't use standard
Nupplevideo files, which is why you MPlayer complains if you try to view
them.

Download the patch to MPlayer from Matt's website. 
<url url="http://dijkstra.csh.rit.edu:8088/~mdz/mythtv/"
name="http://dijkstra.csh.rit.edu:8088/~mdz/mythtv/">.

<tscreen><verb>
$ wget http://dijkstra.csh.rit.edu:8088/~mdz/mythtv/mplayer-0.90pre10+mythtv.patch
</verb></tscreen>

Download the source to MPlayer and patch:
<tscreen><verb>
$ wget http://ftp.lug.udel.edu/MPlayer/releases/MPlayer-0.90rc1.tar.bz2
$ tar -xjf MPlayer-0.90rc1.tar.bz2
$ cp mplayer-0.90pre10+mythtv.patch MPlayer-0.90rc1
$ cd MPlayer-0.90rc1
$ patch -p1 < mplayer-0.90pre10+mythtv.patch
</verb></tscreen>

At this point, you can read the MPlayer documentation and start the compile
process.

<sect1>I'd like to use some other window manager.
<p>MythTV is not dependent on any particular window manager.  If you wish to
run a lightweight window manager, the <tt>configfiles/</tt> directory has an
example of a <tt>.twmrc</tt> file you may use.

<sect1>I'd like MythTV to automatically startup.
<p>Here's an example submitted to the mythtv-dev list by Pat Pflaum
<url url="mailto:pat@netburp.com" name="mailto:pat@netburp.com"> using fvwm:

<tscreen><verb>
$ cat > .xinitrc
fvwm &
mythfrontend
^D
$ cat > .fvwmrc
Style "myth*"      NoTitle, NoHandles, Sticky, WindowListSkip, BorderWidth 0
^D
$
</verb></tscreen>

<sect1>What resolution should I use?
<!-- Lots of the following is from a Bruce Markey mailto:bjm@lvcm.com post
to the mailing list, 2003-01-21. -->
<p>While MythTV allows you to set various GUI and capture resolutions, not
all combinations make sense.

First, analog video signals have a defined vertical resolution.  In NTSC,
the video standard specifies that there are 525 vertical scan lines.  Once
the "extra" lines are removed (they're used to synchronize the video signal,
and encode closed captioning data), you have 480 vertical lines.

In PAL, there are 625 "raw" lines of resolution, with a net of 576 vertical
lines.

Horizontally, the maximum you can expect from a Bt8X8 chip is 720.

With this in mind, there are certain commonly accepted values for
resolution.  While other values may be accepted, they will cause scan lines
to be repeated or dropped.

From "best" to "worst", in NTSC:
<itemize>
<item>720x480 (but more commonly, 704x480.  "DVD" resolution)
<item>640x480 4:3
<item>544x480 (TiVo high resolution)
<item>480x480 (Video CD resolution)
<item>352x480 (ReplayTV "Standard" quality)
<item>320x480 
<item>544x240
<item>480x240 
<item>352x240 
<item>320x240
</itemize>

As you can see, the lower quality values are half of the better ones. 
720x240 is possible, but isn't a good tradeoff relative to the number of
vertical lines lost.  In a PAL country, the you would use values like
720x576 or x288.

The higher resolutions will be more CPU intensive. If the CPU is overtaxed,
frames will be dropped causing uneven motion. You will likely see the best
results at resolutions which average at least 10% CPU idle time (meaning
that the first value shown in the load average using <tt>w</tt> or
<tt>top</tt> is no more than .90) while recording.  If the load average is
consistently exceeding .90, your CPU will not have enough cycles to service
other system events, thereby causing frame drops when it context switches
away from MythTV to service other processes.

As an example, if you are capturing at 640x480, you may wish to run X
Windows and the MythTV GUI at 640x480.

If you'd like to read more on this, go to the vcdhelp website at <url
url="http://www.vcdhelp.com/forum/userguides/94382.php"
name="http://www.vcdhelp.com/forum/userguides/94382.php">.

<sect1>I'd like to delete the mysql database.
<p><bf>NOTE</bf>:  Performing this step will remove the entire database. 
You will lose all of your settings and will need to re-run the mc.sql script
to setup the database structure before running the setup program.

<tscreen><verb>
$ mysql -u root
mysql> drop database mythconverg;
mysql> quit
</verb></tscreen>

<sect1>I'd like to start using the development version of MythTV.
<p>[Content under development]
<p><bf>NOTE</bf>:It should be clear that using the development version of
MythTV may cause loss of data on your system.  There is no guarantee that the development
version of MythTV will work for you.

<bf>THERE IS NO GUARANTEE THAT THESE INSTRUCTIONS WILL WORK.  USE AT YOUR
OWN RISK.</bf>

Here are some of the features in version 0.8:
<itemize>
<item>A front-end and back-end system.  The back-end is responsible for
maintaining the database and capturing and encoding the video.  The
front-end is responsible for displaying the video.  This allows you to put a
lightweight, quiet, diskless and fanless machine in "the living room", with a large server-type
machine in "the basement".  The front-end and back-end communicate over TCP
on a specified port.
<item>GUI-based configuration.  Much of the configuration of MythTV can now
be done using a GUI-based setup, avoiding the necessity to edit the
<tt>settings.txt</tt> file.
<item>Themes.  MythTV now has more themes for the user to choose from.
<item>Recording profiles.  You may now setup various encoder profiles from
the GUI, giving you the flexibility to record programs using various quality
levels.
<item>Increased hardware encoder support.  MythTV can now use the MJPEG
encoder/decoder found on Matrox G200 series cards.  This greatly reduces the
CPU utilization.
</itemize>

<bf>NOTE</bf>:  Problem reports for version 0.8 posted to the mailing list
should have accompanying solutions.

Before you begin, shutdown all running instances of 0.7.  You should perform
a <tt>make clean distclean</tt> before starting the compile process.

Compile and install the system as you would MythTV 0.7 by following the
instructions found in this HOWTO.  If you are installing MythTV on a new
machine, install the database by running the <tt>database/mc.sql</tt>
script as detailed in earlier sections of this document.

However, if you are upgrading an existing 0.7 system, you <em>must</em> run the
<tt>database/0-7-to-0-8.sql</tt> script before running the setup program to
ensure that the database structure is up to date.

Next, you must edit the
<tt>/usr/local/share/mythtv/backend_settings.txt</tt> file.  Specify the IP
address or hostname of the back-end server and port.  You may specify
<tt>localhost</tt> if the front-end and back-end programs will be running on
the same machine.  This file is read by the backend server during start-up.

<bf>NOTE</bf>:  Do not change the port settings.  Leave them as-is.

Once you're done editing the file, start the setup program:
<tscreen><verb>
$ cd setup
$ ./setup
</verb></tscreen>

This will open the setup wizard which will allow you to graphically
configure your system.

Once the setup wizard is done: to run the new version of MythTV, you must
first start the back-end server:

<tscreen><verb>
$ mythbackend &
</verb></tscreen>

and then run the front-end client:
<tscreen><verb>
$ mythfrontend
</verb></tscreen>

You should see the connection established between the front-end and back-end
systems by examining the mythbackend window; it will display the client
connection attempts.

The cvs version of MythTV now supports pressing the ESC key to exit the
application.  If you wish to configure MythTV to exit on ESC, go to the
mythfrontend setup screen (not the setup program used to initially configure
MythTV) and enter the General configuration screen.  Move through the setup
until you get to the System Shutdown parameter.  By default, this is set to
"No exit key", which means there is no defined exit key for MythTV.  If you
set it to "ESC", this will mean that the ESC key is used to exit
MythTV.  Control, Meta and ALT modifiers mean that the Modifier + ESC key
must be pressed to activate the exit from MythTV function.

</article>
<!-- Revision History
v1.00, 2002-11-05.  Initial.
v1.01, 2002-11-06.  Added section on lirc, spelling errors.
v1.02, 2002-11-11.  Converted to docbook, added more to the remote control
section, compiling on AMD and Via C3 processors, Debian packaging, ispell.
v1.03, 2002-11-12.  Added text from Cedar McKay on Red Hat Linux 8.0
v1.031, 2002-11-19.  Added text on the ALSA 0.9.0rc5/rc6 hanging bug, started
development on MythMusic instructions, added text on obtaining document and
using CVS.  Merged some more RH 8.0 documentation from Cedar McKay.  Applied
Debian information patch from Matt Zimmerman.
v1.032, 2002-11-22.  Added stuff on modifying xmltv, changed CVS
documentation so that it's not dependent on CVSROOT being set, pointer to
Tarek's DirecTV and external channel changing script, moved text around so
that external tuner / DirecTV are located under "using MythTV".  Added
troubleshooting information about KDE vs. Gnome on RH 8.0
v1.033, 2002-11-23.  Fixed the XMLTV/mythfilldatabase instruction to point
to the correct file.  Slight wording changes to the DirecTV stuff.  Moved
some CVS parameters around.  Added "DMA" to troubleshooting section.
v1.034, 2002-11-24.  Added information on setting up MythMusic database.
v1.035, 2002-11-25.  Added information on Gentoo.
v1.036, 2002-11-27.  Added information on using an IR Blaster.
v1.037, 2002-11-28.  Added information on RH 8.0 environment setting by Mike
Cencula, additional modifications on Genoo by Tony Clark.
v1.038, 2002-11-28.  Modified the XMLTV version to get, still working on the
Gentoo instructions.
v1.039, 2002-11-29.  More work on the Gentoo instructions.
v1.040, 2002-11-29.  Slight change to the RH 8.0 LANG instructions; put a
reference to the "special" instructions for RH 8.0 users.
v1.041, 2002-11-29.  Added some explanatory text about hdparm.
v1.042, 2002-11-29.  Cleaned up the text that talks about Tivo and hardware
based encoders.
v1.043, 2002-11-29.  More RH 8.0 LANG stuff.
v1.044, 2002-11-29.  Working on the MythMusic install instructions.  Added
information about creating your own ~/.mythtv to maintain settings.
v1.045, 2002-12-02.  Started working on the urpmi instructions for
MythMusic.  Made changes to Mandrake docs to accomodate MDK 8.2.
v1.046, 2002-12-02.  Added information on mythfilldatabase and xawtv
channels.  Added attribution information for Harondel J. Sibble for Mandrake
8.2.  Modified Gentoo again.  Added text on one system running the master database.  Added
"Advanced Functionality" section.  Altered text throughout, referencing
master system needing mysql, remote systems not needing it.
v1.047, 2002-12-02.  Removed reference to advanced functions; IJR says that
it's going to be changing soon.
v1.048, 2002-12-04.  Modified the RH instructions, normalized the user shell
prompt.
v1.049, 2002-12-16.  Added Pentium 2 to list of boxes that don't support
MMX2 (but really known as SSE).  (Needed for deinterlacer.)  Changed RH8.2 instructions per Harondel
Sipple.
v1.050, 2002-12-17.  Moved revision history to end of document.  Added
version information that the HOWTO was created for.  Currently, MythTV v0.7.
Added text mode instructions for setting alsamixer.
v1.051, 2002-12-17.  Added instruction to run ldconfig twice for RH8.0.  Why
does it have to be done?  No idea...  Modified section on changechannel
script to make it generic for Tarek's website since he now has Sony and RCA
scripts.  Added XFree86-devel requirement.  Added compile warning text in
Troubleshooting section.  Added screen blanking (DPMS) stuff.
v1.052, 2002-12-18.  Modified section dealing with deinterlace and
Celeron's.  (Newer Celeron's support SSE)
v1.053, 2002-12-20.  Added a Miscellaneous section so that I could add text about MDZ's mplayer patch.
v1.054, 2002-12-20.  Changed name of CVS box; added troubleshooting hint on
CVS checkouts.
v1.055, 2002-12-23.  James Wiggins (wigginjs@mailbox.sc.edu) Remove the
"./configure" step from MythMusic - doesn't belong there.  Add
libcdda0-devel.
v1.056, 2002-12-24.  Updated Gentoo mysql instruction.
v1.057, 2002-12-25.  Added pointer to other window managers.  Added section
on mythtv-0.8.
v1.058, 2002-12-27.  Added text on configuring urpmi for Mandrake.
v1.059, 2002-12-28.  Updated myth-0.8 install docs.  Added big fat warning
for people that think that development code is supposed to work correctly
out of the box, or that the initial instructions for using the development
code have any basis in reality. Not that they'll read it.
v1.060, 2003-01-01.  Added debugging instructions.
v1.061, 2003-01-01.  Added Bruce Markey's troubleshooting audio stuff. 
Added instruction for deleting the database.
v1.062, 2003-01-05.  A little more on sound troubleshooting.  Added "handle"
instructions for GDB.  Modified RH8 docs per Cedar.  Added more lircd
information from Cedar.
v1.063, 2003-01-06.  More modifications from Cedar on RH8.0.  Slight tweak on
debugging instructions.  Slight change to CPU requirements.  Added Suse 8.1
to distros with buggy libexpat.  Added DMA requirement in Hardware
Prerequisites.  Changed to single HTML file vs 17 seperate HTML subfiles.
v1.064, 2003-01-06.  Modified the gdb "handle" instructions a little.  Added
instructions for .gdbinit
v1.065, 2003-01-06.  Break up the html file back into seperate sections, per
Isaac.  Comment out the gdb handle instructions until I figure out what's
going on.
v1.066, 2003-01-09.  Modified gentoo instructions, now that there's a
download site for the portage file.  Added section identifiers for
mythweather and mythvideo.  Added content for mythweather.
v1.067, 2003-01-09.  Updated mythweather keys.  Fix mythweather example.
v1.068, 2003-01-10.  Added link to Mark Cooper's hardware database website. 
Added info to audio troubleshooting on disabling sound managers, like esd
and artsd.  Added mythweather international example.
v1.069, 2003-01-11.  Fixed keyboard commands for mythweather.
v1.070, 2003-01-11.  Remove Mark Cooper's email address, per request.
v1.071, 2003-01-11.  Added Gentoo lirc instructions.  Fixed xset command.
v1.072, 2003-01-12.  Added alsamixer commands for multiple sound cards.
v1.073, 2003-01-13.  Added text on configuring ESC to exit in CVS version of
myth.
v1.074, 2003-01-13.  Set standard names for "Myth".  "MythTV", "MythMusic",
etc.  Adjusted exit instructions.
v1.075, 2003-01-14.  Make it clear the Kulagowski is document author, _not_
developer of MythTV.  Modified version of XMLTV to get; added instruction
that latest version of XMLTV is usually best because of back-end changes at
zap2it.
v1.076, 2003-01-16.  Slight adjustment to Gentoo docs.  Typo in path.
v1.077, 2003-01-16.  Added "Can't see OSD" to troubleshooting with pointer
back to RH80 strip instructions.
v1.078, 2003-01-16.  Added initial mythvideo instructions.  Added
instruction not to mess with port setting in backend for mythtv-0.8.
v1.079, 2003-01-17.  More stuff on disabling DPMS in the XF86Config file. (Who
knew it was so difficult?)
v1.080, 2003-01-17.  Adjustment to RH80 docs by Cedar.  Added recommendation
to use KDE vs. Gnome for RH8.
v1.081, 2003-01-20.  Fixed XMLTV version error (Darren Mak)
v1.082, 2003-01-24.  Added help for MDK 9.0 mysql startup.
v1.083, 2003-01-26.  Fixed link to webcvs in section 1.  (Cedar McKay)
v1.084, 2003-01-29.  Modified section 4 to make it a little clearer. 
Modified libexpat instructions.  Added fuser for /dev/dsp.  Added resolution
hints.
v1.085, 2003-01-29.  Instructions for setting /etc/sysconfig/harddiskhda,
etc.  Adjusted section 4 again; didn't know that RH8 sets the paths in the
RPM install.
v1.086, 2003-01-29.  More on resolution hints.
v1.087, 2003-01-30.  Pointer to VCDHelp's webpage on resolution.
v1.088, 2003-02-01.  Added a section to check on the symlink in lirc.
-->
<!--
To create documentation, execute "$ linuxdoc -B html mythtv-HOWTO.sgml" or
"$ linuxdoc -B txt -b 1 mythtv-HOWTO.sgml"  
-->
