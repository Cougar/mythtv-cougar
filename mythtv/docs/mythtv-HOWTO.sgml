<!doctype linuxdoc system>
<article>
<title>Installing and using MythTV
<author>Robert Kulagowski, <url url="mailto:rkulagow@rocketmail.com">
<date>2003-09-17, v2.75
<abstract>
Initially, installation of MythTV seems like a huge task.  There are lots
of dependencies, and various distributions seem to do the same thing
different ways.  This document will attempt to give general installation
instructions, as well as including distribution-specific instructions where
necessary.
</abstract>
<toc>
<sect>How to obtain this document. <label id="how_to_obtain">
<p>This HOWTO document is maintained at the primary MythTV website: <url
url="http://www.mythtv.org" name="http://www.mythtv.org"> by Robert
Kulagowski <url url="mailto:rkulagow@rocketmail.com">.  (Please note that I
am <em>NOT</em> the author/programmer of the MythTV application!  See the
<ref id="contributors" name="contributors"> section below for a list of the
programmers.) 

This document is available as a single-page HTML document at <url
url="http://www.mythtv.org/docs/mythtv-HOWTO-singlehtml.html"
name="http://www.mythtv.org/docs/mythtv-HOWTO-singlehtml.html"> or as a PDF
at <url url="http://www.mythtv.org/docs/mythtv-HOWTO.pdf"
name="http://www.mythtv.org/docs/mythtv-HOWTO.pdf">.

It's recommended that you join the user list at <url
url="http://www.snowman.net/mailman/listinfo/mythtv-users"
name="http://www.snowman.net/mailman/listinfo/mythtv-users">.

Searchable archives for the lists are available at <url
url="http://www.gossamer-threads.com/archive/MythTV_C2/"
name="http://www.gossamer-threads.com/archive/MythTV_C2/">.

This HOWTO is for MythTV v0.11.

<sect>Introduction.
<p>This HOWTO document will focus on manually building MythTV in a North
American environment. If you have installation instructions for a different
region or Linux distribution, please send them to the author so that it can
be included in other versions of this document.

Hans Kruse has setup a website that focuses on running MythTV in a non-North
American environment.  See the website at <url
url="http://mythtv.nicenemo.net" name="http://mythtv.nicenemo.net">.

Pre-compiled binaries are available for a number of distributions.  See
section <ref id="precompiled" name="Software::Pre-compiled packages"> for
more information.

Custom mini-distributions are also available to make it easier to install
MythTV.  A mini-distribution removes many of the "general purpose"
workstation / server software packages that may be installed by default if
you use one of the big-name OS packages.

See <url url="http://linpvr.org/" name="http://linpvr.org/"> if you'd like
to install MythTV onto a VIA Epia M machine.

See <url url="http://knoppmyth.geekweb.net/"
name="http://knoppmyth.geekweb.net/"> if you'd like to install a custom
version of Knoppix optimized for MythTV.

The contributors to MythTV are:<label id="contributors">
<itemize>
<item>Lead developer:  Isaac Richards, <url url="mailto:ijr@po.cwru.edu">
<item>Developer:  Matt Zimmerman, <url url="mailto:mdz@debian.org">
<item>Developer:  John Danner, <url url="mailto:jdanner@untzuntz.com">
<item>Developer:  Chris Pinkham, <url url="mailto:cpinkham@bc2va.org">
<item>Overall structure of HOWTO and Mandrake 9.x documentation: Robert Kulagowski, <url url="mailto:rkulagow@rocketmail.com">
<item>Red Hat Linux 8.0 documentation: Cedar McKay, <url url="mailto:mythhowto.3.ohthetrees@spamgourmet.com">
<item>Gentoo documentation and package: Tony Clark, <url url="mailto:tclark@telia.com">
<item>Gentoo documentation and package: Max Kalika, <url url="mailto:max@gentoo.org">
<item>Debian package: Matt Zimmerman, <url url="mailto:mdz@debian.org">
<item>Mandrake 8.2 documentation: Harondel J. Sibble, <url url="mailto:help@pdscc.com">
<item>Mandrake 9.0 and 9.1 packages: Thac, <url url="mailto:thac@nyvalls.se">
<item>Red Hat Linux 9 packages: Axel Thimm, <url url="mailto:Axel.Thimm@physik.fu-berlin.de">
<item>Alternate setup program for MythTV and listings grabber for Germany: Ben Bucksch, 
<url url="http://www.bucksch.com/1/projects/various/mythtv/"
name="http://www.bucksch.com/1/projects/various/mythtv/">
</itemize>

<sect>Checking prerequisites. 
<sect1>Hardware. 
<p>Hardware selection is a complex topic, one this HOWTO will only discuss
briefly and in general terms. The following subsections offer some general 
guidance but stop short of offering specific recommendations.

For more detail about actual configurations that others have used, Mark
Cooper has setup a hardware database at <url
url="http://pvrhw.goldfish.org/" name="http://pvrhw.goldfish.org/">. The
website will let you browse what other users have reported as their hardware
configuration, and how happy they are with the results.

If you have specific questions about the suitability of specific hardware
choices, you can consult the archives of the mythtv-users mailing list or
post a question to the list.
<sect2>CPU Type and Speed
<p>Selection of CPU type and speed is one of the trickiest elements of
hardware selection, mainly because there are so many tradeoffs which can be
made.  For example, if you have plenty of CPU, you can use higher bitrates
or capture sizes, etc.

MythTV has two modes of operation.  First, it can function as a software video
encoder, which means that it uses a fairly generic "dumb" video capture card
to get frames of video, encodes them using the CPU on your motherboard and
writes them to disk.  High-end video capture cards and devices like the Tivo
and ReplayTV have dedicated encoder chips which use specialized hardware to
convert the video stream to the MPEG-2 format without using the motherboard
CPU.  The main CPU has the responsibility of running the Operating System
and reading and writing the encoded frames to the disk.  These tasks have
fairly low CPU requirements compared to encoding video, which is why a
device like a Series 1 Tivo can run with only 16MB of RAM and a 54MHz CPU.

There are many variables that go into the question: "How fast a CPU do I
need to run MythTV"?  Obviously, the faster your CPU, the better your
experience will be with MythTV.  If you are using the software MPEG-4
encoder and performing the "Watch TV" function, where the CPU is both
encoding and decoding video simultaneously to allow Pause, Fast Forward and
Rewind functions for live TV requires more CPU then just encoding or
decoding.  MythTV also supports multiple encoder cards in a single PC,
thereby increasing the CPU requirements if you plan on simultaneously
encoding multiple programs.  As a general guideline, plan on 1GHz per
encoder.

Here are a few data points:
<itemize>
<item>A PIII/733MHz system can encode one video stream using the MPEG-4
codec using 480x480 capture resolution.  This does not allow for live TV
watching, but does allow for encoding video and then watching it later.
<item>The developer states that his AMD1800+ system can <bf>almost</bf>
encode two MPEG-4 video streams and watch one program simultaneously.
<item>A PIII/800MHz system with 512MB RAM can encode one video
stream using the RTJPEG codec with 480x480 capture resolution and play it back
simultaneously, thereby allowing live TV watching.
<item>A dual Celeron/450MHz is able to view a 480x480 MPEG-4/3300kbps file
created on a different system with 30% CPU usage.
<item>A P4 2.4GHz machine can encode two 3300Kbps 480x480 MPEG-4 files and
simultaneously serve content to a remote frontend.
</itemize>

The second mode of operation is where MythTV is paired with a hardware-based
video encoder, such as a Matrox G200 or a Hauppauge WinTV-PVR-250/350.  In
this mode, because the video encoding is being done externally, the CPU
requirements are quite low.  See the <ref id="video_capture_device"
name="Video Capture Device"> section for details.

<sect2>Memory
<p>A MythTV host that is both a backend and a frontend and using software
encoding with a single capture card should run adequately in 256MB of RAM.
Additional RAM above 256MB will not necessarily increase performance, but
may be useful if you are running multiple encoders.

<sect2>Hard Disk(s)
<p>Encoded video takes up a lot of hard disk space. The exact amount depends
on the encoding scheme, the size of the raw images, and the frames per
second, but typical values for MythTV range from 700 megabytes/hour to 2
gigabyte/hour for MPEG-4 and larger for MPEG-2 and RTJPEG.

<bf>NOTE</bf>:  You <em>must</em> use DMA for hard drive access to prevent
choppy or jittery video.  Red Hat Linux 8.0 apparently does not enable DMA
at boot time.  See the Troubleshooting Section for <ref id="Setting_DMA"
name="instructions"> on how to do this.

Writing video to disk is sensitive to timing issues; RTJPEG requires less
CPU with the tradeoff being larger files and needing to write to the disk
faster.  MPEG-4 requires more CPU, but the files are smaller.  At the
default resolution, MPEG-2 creates the largest files of all with almost no
CPU impact.

See the Troubleshooting <ref id="Setting_DMA" name="section"> for more
information.

<sect2>Filesystems
<p>MythTV creates large files, many in excess of 2GB.  You <em>must</em> use a
filesystem that will allow you to create large files.  Filesystems known to
have problems with large files are FAT and FAT32.

<label id="video_capture_device">
<sect2>Video Capture Device 
<p>In order to watch live TV, MythTV will need one or more video capture
devices with Linux drivers.  For a list of video capture cards known to work
with Linux, please see
<tt>/usr/src/linux/Documentation/video4linux/bttv</tt> for a partial
listing; even if your specific card is not listed, it may be that the vendor
is actually using a standard reference design and placing their own name on
it.  See the video4linux mailing list (<url
url="https://listman.redhat.com/mailman/listinfo/video4linux-list"
name="https://listman.redhat.com/mailman/listinfo/video4linux-list">) for
more information and for specific hardware questions.  

The most common inexpensive cards available use the Bt848 or Bt878 video
capture chip; examples are the "Hauppauge WinTV Go" card and the "AverTV
Desktop PVR" card, both of which use the bttv kernel module.

Newer cards may use the CX23881 series of chips; a driver is available at
<url url="http://bytesex.org/cx88/" name="http://bytesex.org/cx88/">.

After you have installed a suitable capture device, you can check that 
the kernel sees it with <tt>lspci</tt>. Look for an entry labeled "Multimedia 
video controller". To get more detailed information about the card, use 
<tt>lspci -v</tt> or <tt>lspci -vv</tt>.  Ensure that your system is loading
the bttv modules by typing:
<tscreen><verb>
# lsmod |grep bttv
</verb</tscreen>

You want to see the <tt>bttv</tt> module listed.

While inexpensive video-capture cards just capture raw frames, leaving
encoding to software, some higher-end cards incorporate hardware-level
encoding. Using either a G200 MJPEG encoder card, or a WinTV-PVR-250 or 350
from Hauppauge and the driver from the IvyTV project <url
url="http://ivtv.sourceforge.net/" name="http://ivtv.sourceforge.net/"> will
allow you to use dedicated hardware encoders rather than your CPU. Release
0.11 of MythTV is able to use the PVR-250/350 cards as an input device for
live TV and for scheduled recordings.  Using the onboard MPEG-2 encoder
drastically reduces the CPU requirements for encoding.

Here are some data points for encoding:
<itemize>
<item>A Celeron 450 uses 2% CPU for encoding a 480x480 16Mbps MPEG-2 stream.
</itemize>

Here are some data points for decoding:

<itemize>
<item>An Athlon 1800XP can decode a 720x480 8Mbps MPEG-2 file using 10% CPU
<item>An Athlon 1GHz can decode a 720x480 16Mbps MPEG-2 file using 30-50%
CPU, can decode a 480x480 16Mbps MPEG-2 using 30% CPU and approximately 30%
for Live TV at 416x480.
<item>A P3-550 can decode a 480x480 16Mbps MPEG-2 file with 55% CPU.
<item>A Celeron 450 (no SSE) can decode a 480x480 16Mbps MPEG-2 file with
80% CPU.
</itemize>

See the <ref id="pvr250" name="I'd like to use a hardware MPEG-2 encoder">
section for information on installing a PVR-250 on Mandrake 9.1.

<bf>NOTE</bf>: The ATI All-in-Wonder cards <em>will not</em> work as a
MythTV capture device, as the <url url="http://gatos.sourceforge.net"
name="GATOS"> drivers that are available provide only a limited subset
of the V4L API.

<sect2>Sound card
<p>The system needs a sound card or an onboard equivalent on the motherboard
to play back and in most cases, to record sound. Any sound card that can be
operated by the ALSA (Advanced Linux Sound Architecture) kernel modules will
work with MythTV.  However, some cards and drivers will provide better
quality or compatibility than others.  In particular, many audio
devices included on motherboards can be problematic.

The usual practice for capturing the audio associated with the video
is to run a cable from an audio output on the video capture card to
the Line input on a sound card. However, some video capture cards
provide onboard audio capabilities that work with the kernel
<tt>btaudio</tt> module instead, thereby eliminating the need for a
cable.  This is useful if you will be using multiple capture cards in
a single chassis, since each capture card will not need its own sound
card.  Note that a separate sound card is still required for playback
when using <tt>btaudio</tt>, and that often the audio recorded in this
way will be mono only.  See the <ref id="btaudio" name="btaudio">
section for more information.

<bf>NOTE</bf>:  The PVR-250/350 does not require a sound card for audio
capture.

<bf>NOTE</bf>:  Plugging a Line-level device into the Mic input is not
recommended.  Line-level devices have higher volatages and can damage the
soundcard.  In addition, even if it doesn't break your card, you will be
getting Mono sound.  See the Linux MP3 HOWTO at <url
url="http://www.ibiblio.org/pub/Linux/docs/HOWTO/other-formats/html_single/MP3-HOWTO.html#toc8"
name="http://www.ibiblio.org/pub/Linux/docs/HOWTO/other-formats/html_single/MP3-HOWTO.html#toc8">
for additional information.

<sect2>Video Display Card
<p>MythTV will work with just about any video card.  However, it is highly
recommended that you use a card which supports XVideo (XV) extensions. If
your card does not support XV, color conversion and scaling will be
performed by your CPU rather than the video card.  This is very CPU
and memory intensive and will often result in dropped frames and a
corresponding degradation of quality.  Check the XFree86 documentation
for details if you are uncertain about your preferred card.  You may
also run <tt>xvinfo</tt>; look for your video card to be listed as one
of the adapters.

<!-- Updated information  from "Ray Olszewski" <ray@comarre.com> -->

If you want to use MythTV with a standard television, you will need a
physical connection from your video card to your TV set, which can
either be a TV-out port on the card itself, or an external adapter that
converts the VGA signal to an appropriate video signal. "Appropriate"
depends on a number of factors, such as video standard (NTSC vs PAL) type of
input connection (Composite vs SVideo), etc.

Note that with some video cards and X drivers, Xvideo extensions are
only supported on the VGA output, and not on the TV output.

<sect2>Cards with TV out
<p>The next section deals with a number of cards that are known to have
TV-out ports.  The list is unlikely to be complete, so if you know of
others, please post a message to the mythtv-users mailing list so the
information can be included in future versions of the HOWTO. The list is
organized by manufacturer.

Reports here are based on what users of the cards have posted on the
mythtv-users mailing list, so if you need configuration details, please
search the archives at <url
url="http://www.gossamer-threads.com/archive/MythTV_C2/Users_F11/"
name="http://www.gossamer-threads.com/archive/MythTV_C2/Users_F11/"> using
the card name in your search string.

<sect3>ATI
<p>ATI makes many cards with TV-out capability, but ATI offers no official
support for their use with Linux. The standard XFree86 ati driver does not
support TV-out.

The enhanced ati.2 X driver created by the GATOS <url
url="http://gatos.sourceforge.net" name="http://gatos.sourceforge.net">
project offers some support for TV-out, but only in its "experimental"
version, available through CVS. There have been reports from people who say
they have made this driver work with one or another ATI card. For example,
Bruce Markey <url url="mailto:bjm@lvcm.com"> writes (on the mythtv-users
mailing list): "I got this to work. You can quote me on that. I've used
TV-out on several models of ATI cards both All-In-Wonder and regular cards
with TV-out." See the "Adventurous Setup" section of <url
url="http://gatos.sourceforge.net/watching_tv.php"
name="http://gatos.sourceforge.net/watching_tv.php"> for details. Also see
<url url="http://www.retinalburn.net/linux/tvout.html"
name="http://www.retinalburn.net/linux/tvout.html"> for more information.

Specific cards:
<itemize>
<item>ATI Rage II+DVD (Mach 64). Ports not described. Reported to work, but no details reported.
<item>Rage 128 VIVO. Ports not described. Reported to work, but no details reported.
<item>Radeon 7500. Ports not described. Reported to work, but no details reported.
</itemize>

<sect3>Matrox
<p>The standard Matrox driver included with XFree86 does not support TV-out.

Older Matrox cards can be used with a proprietary X driver provided by 
Matrox, and it does simultaneously support TV out and XVideo on some cards. 
See <url url="http://www.matrox.com/mga/support/drivers/files/lnx_21.cfm"
name="http://www.matrox.com/mga/support/drivers/files/lnx_21.cfm"> for details.

Newer Matrox cards can be run with a set of kernel patches (for kernel 
2.4.19) and a customized X driver, but this arrangement does not support 
XVideo on TV-out. See 
<url url="http://www.bglug.ca/matrox_tvout/g450_tvout_howto.html"
name="http://www.bglug.ca/matrox_tvout/g450_tvout_howto.html"> for details.

Specific cards:
<itemize>
<item>Matrox G400 AGP. Uses external adapter to provide Composite and
SVideo ports. Reported to work with the proprietary Matrox X driver.
<item>Matrox Millennium 450GX AGP. Uses external adapter to provide
Composite and SVideo ports. TV-out implementation does <em>NOT</em> support XVideo.
<item>Matrox Millennium 550GX AGP. Uses external adapter to provide
Composite and S-Video ports. TV-out implementation does <em>NOT</em> support XVideo.
</itemize>

<sect3>nVidia
<p>Some nVidia cards with TV-out can be run using the standard nv driver in 
XFree86, combined with the userspace application <bf>nvtv</bf> to control the TV-out 
port. See <url url="http://sourceforge.net/projects/nv-tv-out/"
name="http://sourceforge.net/projects/nv-tv-out/"> for details.  Recent
versions of the nVidia driver have better support for overscan and other
features useful with TV-Out, so the <bf>nvtv</bf> application may not be
required.

Some nVidia cards can be run with a proprietary nVidia X driver made
available by nVidia. See <url url="http://www.nvidia.com/view.asp?IO=linux"
name="http://www.nvidia.com/view.asp?IO=linux"> for more information.

Specific cards:
<itemize>
<item>GeForce4 MX440-SE AGP. Has Composite and SVideo ports. Works using the
nVidia X driver.
<item>GeForce2 GTS 64 MB DDR 4x AGP. Has SVideo port. Works using the nVidia X 
driver. Reportedly works using the nv driver plus nvtv.
<item>GeForce4 MX420 PCI (BFG Asylum). Has SVideo port.
</itemize>

<sect3>Savage
<p>The standard savage X driver supports TV out on some Savage cards. 
Unfortunately, XVideo support for the Savage 2000 card (a very common and 
inexpensive Savage card with TV out) is broken. See 
<url url="http://www.probo.com/timr/savage40.html"
name="http://www.probo.com/timr/savage40.html"> for details.

Specific cards:
<itemize>
<item>Savage 2000 AGP. Has Composite and SVideo ports. Does not support XVideo.
<item>S3 Savage IX 8MB AGP. Has SVideo output. Reported to work.
</itemize>

<sect3>Other Options
<p>Some devices with onboard TV-out capability, such as XBoxes converted to 
Linux and some laptops, can be used as MythTV frontends to display on a 
television screen. Please consult the mythtv-users mailing list for messages 
that report the details of these special arrangements.

<sect2>External Adapters
<p>External adapters convert standard VGA output to a form suitable for 
display on a television. The output format varies by region, since 
different countries have different TV standards. People on the mythtv-users 
list have mentioned these adapters:

<itemize>
<item>AITech Web Cable Plus, powered by external transformer or takes power
from PS/2 keyboard connector, support resolutions up to 1024x768, outputs
composite and SVideo, provides position adjustment.
<item>Averkey lite, powered by a USB port, has Composite, SVideo, YPbPr
outputs; pan, brightness, overscan/underscan controls; supports up to
1024x768 outputs; and supports PAL and NTSC.
<item>ADS TV Elite XGA
<item>AverKey iMicro (comments are generally favorable)
<item>AITech Web Cable (comments are generally unfavorable, different than
the "Plus" version above)
<item>TVIEW Gold (mentioned once, favorably)
</itemize>

<sect1>Software.
<p>There are a few ways of installing programs on Linux systems; you can
either use a pre-compiled package, or install from a tarball after
satisfying any prerequisites.

<bf>NOTE</bf>: you must have the MySQL database software installed on a
system to store the master database.  This does not necessarily mean that
MySQL must run on one of the MythTV boxes.

<sect2>Pre-compiled packages. <label id="precompiled">
<p>A number of people have created pre-compiled packages for MythTV that may
make your installation easier.

<bf>BIG FAT WARNING</bf>:  This HOWTO assumes that you have <em>not</em>
installed MythTV from a package.  All example command lines and file
locations are based on the MythTV tarball defaults.  Some packagers have
modified the filenames, binaries and file locations to match what is
commonly found in that distribution.  Any issues with MythTV installed via a
pre-compiled package <bf>MUST</bf> be raised with the packager.

If you use any of the pre-compiled packages you may not need to perform any
additional configuration steps in this HOWTO.  The next logical step is 
<ref id="mysql" name="configuring MySQL">, which you may or may not have to
perform.  See your package documentation.

<sect3>Red Hat Linux 9
<label id="atrpms">
<p>Red Hat Linux 9 packages for MythTV and most of its add-on modules and
some themes have been packaged by <url
url="mailto:Axel.Thimm@physik.fu-berlin.de"
name="mailto:Axel.Thimm@physik.fu-berlin.de"> and are available at <url
url="http://atrpms.physik.fu-berlin.de/topic/multimedia/"
name="http://atrpms.physik.fu-berlin.de/topic/multimedia/">. All of the
prerequisites for MythTV (such as XMLTV) are available as RPM packages. If
you have problems with the RPMs, please send him email directly.
 
Given the large number of dependent RPMs you are advised to use tools like
apt or yum for automatic retrieval and installation of the required RPMs.
(<url url="http://atrpms.physik.fu-berlin.de/install.html"
name="http://atrpms.physik.fu-berlin.de/install.html">) In this case a
special meta-package called mythtv-suite will allow you to install all of
MythTV and its add-ons, plus all dependencies.

If you don't have <bf>apt</bf> or <bf>yum</bf> on your machine, download and
install the <url
url="http://atrpms.physik.fu-berlin.de/dist/rh9/atrpms-kickstart/"
name="atrpms-kickstart package">.
Install the package with:
<tscreen><verb>
# rpm -Uvh atrpms-kickstart*
</verb></tscreen>
Then update your <bf>apt</bf> package listings:
<tscreen><verb>
# apt-get update
</verb></tscreen>
And finally:
<tscreen><verb>
# apt-get install mythtv-suite
</verb></tscreen>	
These steps however, do NOT perform the installation of any drivers required
for <bf>ALSA</bf>, capture cards, <bf>lirc</bf>, etc., nor do they set up
your MythTV database. Check <url
url="http://atrpms.physik.fu-berlin.de/topic/multimedia/" name="ATrpms"> for
the drivers you need.

Further documentation on using ATrpms packages can be found in <url
url="mailto:jcw@wilsonet.com" name="Jarod Wilson">'s "HOWTO Build a MythTV
System on Red Hat Linux 9 w/ATrpms" document, <url
url="http://pvrhw.goldfish.org/tiki-page.php?pageName=rh9pvr250"
name="http://pvrhw.goldfish.org/tiki-page.php?pageName=rh9pvr250">. Just
like 3rd-party packages, any 3rd-party documentation problems should be
brought up with the maintainer.

<sect3>Mandrake
<p>Thac has created RPMs for MythTV for Mandrake 9.0 and 9.1 which may be
obtained from <url url="http://rpm.nyvalls.se/"
name="http://rpm.nyvalls.se/"> If you have problems with the RPMs, please
send him email directly at <url url="thac@nyvalls.se"
name="thac@nyvalls.se">.

<sect3>Debian
<p>Debian packages for MythTV and most of its add-on
modules are maintained by Matt Zimmerman <url
url="mailto:mdz@debian.org"> and are available at <url
url="http://dijkstra.csh.rit.edu/~mdz/debian/dists/woody/mythtv/"
name="http://dijkstra.csh.rit.edu/~mdz/debian/dists/woody/mythtv/">
(for Debian 3.0/woody) and <url
url="http://dijkstra.csh.rit.edu/~mdz/debian/dists/unstable/mythtv/"
name="http://dijkstra.csh.rit.edu/~mdz/debian/dists/unstable/mythtv/">
(for unstable).  Be sure to use the appropriate packages for your
system; the woody packages cannot be installed on unstable, nor vice
versa.  Installation instructions can be found on those pages as well.
All of the prerequisites for MythTV are available as Debian packages,
most of them from the official Debian archive.

<p>
If you are running woody, be sure to follow the instructions on the
above page to ensure that the MySQL server starts up immediately after
it is installed.  If you are running unstable, this is the default
behavior.

<p>
The Debian packages are configured such that MythTV programs should be
run as the <tt>mythtv</tt> user, which is automatically created during
installation.  This user has access to write new recordings to disk in
the default directory, read and write the database, access the audio
and video devices, and everything else that MythTV needs to do.

<p>
See <tt>/usr/share/doc/<it>packagename</it>/README.Debian</tt> for
more information, including copies of the MythTV documentation.  The
<tt>mythtv-doc</tt> package contains a copy of this HOWTO in
<tt>/usr/share/doc/mythtv-doc</tt>.

<sect2>Manual installation
<p>You may use the graphical tools that come with your distribution, or you
can use command-line utilities.  Either system will get the job done, and it
all depends on your comfort level with Linux.

In order to compile MythTV, we need to make sure that the software it needs
is installed.  As of 2003-03-15, this list includes <bf>mysql</bf>,
<bf>gcc</bf>, <bf>freetype2-devel</bf>, <bf>XFree86-devel</bf>,
<bf>qt-devel</bf> and <bf>lame</bf>.  If you're going to use a remote
control with MythTV, you're going to need the <bf>cdialog</bf> package in
order to compile <bf>lircd</bf> if your distribution doesn't have a
pre-packaged <bf>lirc</bf>.  If you are using <bf>XMLTV</bf> as a grabber,
you will need <bf>perl</bf>.

<code>
NOTE:  Qt v3.1 is recommended, but not required.

NOTE:  If you are going to be using RPMs to install various
components, you should be aware that not all packages include the necessary
headers for compiling packages.  If you're having trouble compiling, ensure
that you've installed the -devel version of a prerequisite.

NOTE:  Other than where noted, Mandrake 9.1 users may follow the
Mandrake 9.0 instructions.
</code>

There appears to be issues with ALSA and simultaneously recording and
playing sound, which is a core requirement for MythTV.  If you are not
running ALSA 0.9.0rc6 or higher and experience lock-ups of your system when
trying to use MythTV, then please check the main ALSA website and upgrade to
the latest version, or see if your distribution has already packaged the
latest ALSA drivers.

<sect2>Graphical installation tools. <label id="graphicinstalltools_">
<sect3>Mandrake 9.0
<p>On systems running KDE, a tool which will allow you to see what packages
are available and if they're installed on your system can be accessed by
clicking K->Configuration->Packaging->KPackage

While the graphical tools are nice, the command line tool is actually easier
to use.  It's strongly recommended that you use the command line tool.

There are many inter-related modules, so make sure that you've got the
main package for each one, and not a sub package for an unrelated item.  For
example, there are many modules that have "perl" in them; some are a part of
the apache web server, others are a part of the perl distribution.  In each
case, we're looking to make sure that the primary module is getting
installed.

Click the magnifying glass or press <bf>CTRL-F</bf> and enter "perl" as your
search term.  You should find it under the "Perl" folder.  You need at least
the perl 5.80 base package installed.  If not, click on the "Mark" button.

If you are going to be installing mysql on this system, search for mysql -
it should be under "Databases".  Make sure that mysql and mysql-clients are
installed.  If not, click on "Mark".

Search for gcc.  You're going to need gcc and gcc-c++ installed.

Search for freetype2.  Make sure that you've got freetype2 and
freetype2-devel installed.

Search for XFree86-devel.

Finally, check for qt.  You'll need libqt3-devel (under folder "KDE and
Qt") and libqt3 ("Libraries").

<code>
NOTE for Mandrake 9.1 users:  Mandrake 9.1 has removed the MySQL modules
from the default installation.  Ensure that you install libqt3-mysql.
</code>

Make sure that cdialog is installed if you want to use MythTV with a remote
control if you need to compile <bf>lirc</bf> from source.

alsa-utils is needed for setting the volume.  MythTV now has native volume
support, but you may have a special configuration that necessitates an
external program to adjust your volume settings.  If this is the case, then
you can disable native volume support.

If you marked anything to install, click on Install Marked.  Click "Yes" or
OK if you get a message about satisfying dependencies.

<sect3>Red Hat Linux 8.0 
<p>Red Hat Linux 8.0 does not have the same graphical package manager used
by other distributions, so you will need to use Red Hat's package
manager.  This is the same utility you saw upon installation from the Red
Hat Linux 8.0 installation CD, and it allows you to select packages at
installation time, or once the system is up and running.  You can access
this program by selecting <verb>RedHatMenu>System Settings>Packages</verb>

If you did a typical Desktop install of Red Hat Linux 8.0 make sure you have
selected:

<itemize>
<item>KDE Desktop Environment
<item>SQL Database Server -  you will have to click on "details" and make 
sure "mysql-server" is checked.  (only required on the master system)
<item>Development Tools
<item>X Software Development
<item>KDE Software Development
<item>Kernel Development
</itemize>

Click Install to continue.

You can not install qt-MySQL, a necessary prerequisite, graphically. To  
install this package using the command line do

<tscreen><verb>
$ up2date --solvedeps qt-MySQL
</verb></tscreen>

<label id="RH_XFree86-devel">
<bf>NOTE</bf>:  ensure that the correct symlinks have been created for the
XFree-86 development libraries:

<tscreen<verb>
# ln -s /usr/X11R6/lib/libXext.so.6 /usr/X11R6/lib/libXext.so
# ln -s /usr/X11R6/lib/libX11.so.6 /usr/X11R6/lib/libX11.so
</verb></tscreen>

<sect2>Command-line installation. <label id="CLIinstalltools_">
<p> This section details the various methods for installing prerequisites
from the command line.

<sect3>Mandrake
<p><bf>urpmi</bf> is the simplest tool for installation of packages from the
command line, but properly configuring it can be difficult.  The
following website <url url="http://plf.zarb.org/~nanardon/urpmiweb.php"
name="http://plf.zarb.org/~nanardon/urpmiweb.php"> will allow you to choose
a mirror site and then present the command-line configuration text for that
mirror.  You will most likely need to add a "Contrib" mirror to your setup. 
If you add a site from the "Penguin Liberation Front", you will be able to
load the <tt>lame</tt> library without compiling from source.

<sect4>Special instructions for Mandrake 8.2  
<p>Mandrake 8.2 does not have a pre-packaged libqt3-devel, so you must compile
and install this manually.  The following command will install the
prerequisites for qt3, so don't skip this step.  The simplest tool for
installing packages from the command line is urpmi.

Open a shell, and execute the following.  You may get asked a number of
questions regarding dependencies.  It's best to answer "YES".

<tscreen><verb>
$ urpmi mesa-common-devel libmng1-devel mysql-devel libunixodbc2-devel
$ urpmi postgresql-devel xfree86-static-libs
</verb></tscreen>
Once all of the prerequisites have been installed, the next step is to
obtain and compile the source RPM.

Go to <url url="http://www.rpmfind.net"
name="http://www.rpmfind.net"> and search for
<tt>qt3</tt>.  There will be a number of different versions available.  As
of 2002-12-02, the latest version for Mandrake is called
<tt>qt3-3.0.5-7mdk.src.rpm</tt>. Unless you are running <bf>Mandrake
Cooker</bf> (the beta version of the next release of Mandrake), make sure to
download the standard "Mandrake" release.  Download the <tt>.src.rpm</tt>
file to a directory that you can find.  
<tscreen><verb>
$ su
# cp qt3-3.0.5-7mdk.src.rpm /usr/src/RPMS/SRPMS
# cd /usr/src/RPMS/SRPMS
# rpm --rebuild qt3-3.0.5-7mdk.src.rpm
# cd ../RPMS
# ls -l
</verb></tscreen>
The "ls -l" command will show you a directory listing.  There should be two
files, one will be named "qt3" and the other will be "qt3-devel".  The full
filenames will vary, so one you know the filename, you can install them with
<tscreen><verb>
# rpm -Uvh [filename1]
# rpm -Uvh [filename2]
</verb></tscreen>
Once this has completed (it can take a while, so please be patient),
continue by following the Mandrake 9.0 instructions.

<sect4>Mandrake 8.2 and 9.0
<p>The simplest tool for installing packages from the command line is
<bf>urpmi</bf>.

Open a shell, and execute the following, all on the same line. You may get
asked a number of questions regarding dependencies.  It's best to answer
"YES".
<tscreen><verb>
$ su
# urpmi mysql gcc gcc-c++ freetype2-devel cdialog alsa-utils
# urpmi XFree86-devel perl
</verb></tscreen>
<code>
NOTE for Mandrake 8.2 users: do not execute the following
command.  You've already manually installed the files in the previous
section.
</code>
<tscreen><verb>
# urpmi libqt3-devel
</verb></tscreen>

<code>
NOTE for Mandrake 9.1 users: execute the following command.

# urpmi libqt3-mysql
</code>
However, you might get this when you execute the command above:
<tscreen><verb>
[root@pvr root]# urpmi mysql gcc gcc-c++ freetype2-devel libqt3-devel alsa-utils XFree86-devel perl
everything already installed
</verb></tscreen>

In that case, you're ready to move to the next <ref
id="Setting_up_paths" name="section">.
<sect3>Red Hat Linux 8.0

<p>[Please submit instructions]

<sect3>Gentoo. 
<p>If Qt has not been installed on your system: Edit
<tt>/etc/make.conf</tt> and locate the "USE" variable. If the line is
commented out, remove the comment. The line should have at least:
<tscreen><verb>
USE="mysql alsa"
</verb></tscreen>
Next you need to build Qt. If you don't plan on using the ebuilds as 
described in the Gentoo section then you also need to install lame.
<tscreen><verb>
# emerge lame mysql qt
</verb></tscreen>
<p>If you have already installed Qt: you will need to rebuild because the
default installation doesn't include mysql support, a requirement for MythTV.  
To enable SQL support, add "mysql" to your USE variable in 
<tt>/etc/make.conf</tt> and rebuild Qt by running
<tscreen><verb>
# emerge qt
</verb></tscreen>

All the necessary files will be downloaded and built. Even on a fast machine
this may take a lot of time if you need to do a full Qt build.

<sect>System Configuration Requirements for Compiling MythTV <label
id="Setting_up_paths">
<p>Before you compile MythTV from the current source tarball or from CVS, you 
may need to modify your system configuration in a few ways.

In general, if you install MythTV from pre-packaged binaries for your Linux
distribution/version, you don't need to be too concerned about the issues in
this section of the HOWTO - the install script for the packages should take
care of them. However, this section is still recommended reading which may
help if the packager skipped a step in their packaging.

<sect1>Software requirements for compiling MythTV
<sect2>General requirements
<p>MythTV is written in C++ and requires a fairly complete, but standard, 
compilation environment, including a recent g++ compiler, <tt>make</tt>, and 
appropriate headers files for shared libraries. Any standard Linux 
distribution should be able to install a suitable compilation environment 
from its packaging system. Section 3.2 of this HOWTO provides some details 
of how to install the required environment for many distributions.

Subsequent sections of this chapter address the few oddities that you may 
have to adjust by hand before you compile MythTV.

The reference compilation system for MythTV is Debian.

<sect2>Distribution-Specific Notes 
<p>None 
<sect1>Shared-Library Requirements for MythTV 
<sect2>Modifying /etc/ld.so.conf <label id="modifying_ld.so.conf">
<p>The runtime manager for shared libraries, <bf>/lib/ld.so</bf>, gets
information about the locations and contents of shared libraries from
<tt>/etc/ld.so.cache</tt>, a file created by <bf>ldconfig</bf> from
information in <tt>/etc/ld.so.conf</tt>.  Because MythTV installs some
shared libraries in <tt>/usr/local/lib</tt>, that directory needs to be
added to the list of directories for <bf>ld.so</bf> to search when doing
runtime linking of programs. You do this, as root, by editing
<tt>/etc/ld.so.conf</tt>, then running <bf>ldconfig</bf>. There are many
ways to do this; one that works is to enter this series of commands:

<tscreen><verb>
$ su -
# echo /usr/local/lib >> /etc/ld.so.conf
# /sbin/ldconfig
# exit
$
</verb></tscreen>
<sect2>Distribution-Specific Notes
<sect3>Red Hat
<p>It appears that Red Hat Linux 8.0 requires that the <bf>ldconfig</bf>
command be run twice. Red Hat will also frequently "forget" about the path.
It's recommended to run <bf>/sbin/ldconfig</bf> after installing every
package. Failing that, always run it if you get an unexpected error about
not finding libraries.
<sect1>Environment variable Requirements for MythTV
<sect2>General requirements
<sect3>QT libraries and binaries
<p>The compiler needs to be able to locate QT binaries and libraries in order 
to compile MythTV. QTDIR needs to be set and <tt>/usr/lib/qt3/bin</tt> must be 
added to your path. Your distribution may already be making these changes 
as a part of the installation of the software prerequisites detailed
earlier.

One way to do this is as follows: <label id="Checking_that_it_worked">

Open a shell and execute the following:
<tscreen><verb>
$ echo $PATH
/usr/local/bin:/bin:/usr/bin:/usr/X11R6/bin:/usr/games:/usr/lib/qt3/bin:/home/mythtv/bin:/usr/lib/qt3/bin
$ echo $QTDIR
/usr/lib/qt3
</verb></tscreen>

You should see a value like <tt>/usr/lib/qt3</tt> for <tt>QTDIR</tt>
and <tt>/usr/lib/qt3/bin</tt> should be in $PATH.

If you don't, do not proceed past this step until you have resolved this
error. You may need to manually specify the QTDIR and PATH at the shell
prompt before compiling.

Also, check that there has been a link created in
<tt>/usr/lib/qt3/mkspecs</tt> called <tt>default</tt>. If not, you'll get
errors during the compile. See the Troubleshooting Section for more
information.
<sect2>Distribution-Specific Notes
<sect3>Mandrake
<p>The following instructions work for Mandrake 9.0 and 9.1 using
<bf>bash</bf> as the shell, and may be applicable for a distribution which
uses <tt>/etc/profile.d</tt>.

As root, create the following file in <tt>/etc/profile.d</tt> The example
filename is "mythtv.sh". Use what you feel is appropriate.

Open a shell, and switch to superuser mode. 
<bf>NOTE</bf>: ^D means press CTRL and d at the same time.
<tscreen><verb>
$ su
# cd /etc/profile.d
cat > mythtv.sh
export QTDIR=/usr/lib/qt3
export PATH=$PATH:/usr/lib/qt3/bin
^D

# chmod a+x mythtv.sh
# exit
$ exit
</verb></tscreen>
The last two commands are to exit out of the shell. This way, when you next 
open a shell your new commands
will take effect.
<sect3>Red Hat Linux 9/8.0
<p>Red Hat Linux 9/8.0 use a default locale with UTF-8 encoding.
Date::Manip, a perl module used by XMLTV, is not UTF-8 safe. As a result,
whenever you run setup or mythfilldatabase you will get a lot of UTF-8
warnings. There is an <url url="http://membled.com/work/patches/DateManip/"
name="http://membled.com/work/patches/DateManip/"> updated version of
Date::Manip at the XMLTV site fixing this and other XMLTV related
# bugs.

<sect3>Debian
<p>Debian source packages are available from the same place as the
binary packages.  These can be used to build customized packages, and
to automatically satisfy MythTV's build-time dependencies.

<tscreen><verb>
sh-2.05b# apt-get build-dep mythtv
Reading Package Lists...
Building Dependency Tree...
The following NEW packages will be installed:
  debconf-utils debhelper file fontconfig gettext html2text intltool-debian
  libaudio2 libexpat1 libfontconfig1 libfontconfig1-dev libfreetype6
  libfreetype6-dev libglib2.0-0 libjpeg62 libjpeg62-dev liblame-dev liblame0
  liblcms1 liblcms1-dev libmagic1 libmng-dev libmng1 libmysqlclient-dev
  libmysqlclient12 libogg-dev libogg0 libpng12-0 libpng12-dev libqt3-headers
  libqt3-mt-dev libqt3c102-mt libvorbis-dev libvorbis0a libvorbisenc2
  libvorbisfile3 libxcursor-dev libxcursor1 libxft2 libxft2-dev libxrender-dev
  libxrender1 mysql-common pkg-config po-debconf qt3-dev-tools xfree86-common
  xlibmesa-gl-dev xlibmesa-glu-dev xlibmesa3-gl xlibmesa3-glu xlibs xlibs-dev
  zlib1g-dev
0 upgraded, 54 newly installed, 0 to remove and 0 not upgraded.
Need to get 0B/24.0MB of archives.
After unpacking 78.7MB of additional disk space will be used.
Do you want to continue? [Y/n] 
[...]
sh-2.05b# cd /tmp
sh-2.05b# apt-get source mythtv
Reading Package Lists...
Building Dependency Tree...
Need to get 3085kB of source archives.
Get:1 http://dijkstra.csh.rit.edu unstable/mythtv mythtv 0.11-4 (dsc) [507B]
Get:2 http://dijkstra.csh.rit.edu unstable/mythtv mythtv 0.11-4 (tar) [3071kB]
Get:3 http://dijkstra.csh.rit.edu unstable/mythtv mythtv 0.11-4 (diff) [13.9kB]
Fetched 3085kB in 0s (8120kB/s)
dpkg-source: extracting mythtv in mythtv-0.11
sh-2.05b# cd mythtv-0.11
[customize settings.pro, etc.]
[edit debian/changelog and increment the version number]
sh-2.05b# dpkg-buildpackage -rfakeroot -us -uc -b
[...]
dpkg-deb: building package `mythtv-backend' in `../mythtv-backend_0.11-4_i386.deb'.
dpkg-deb: building package `mythtv-frontend' in `../mythtv-frontend_0.11-4_i386.deb'.
dpkg-deb: building package `libmyth-0.11' in `../libmyth-0.11_0.11-4_i386.deb'.
dpkg-deb: building package `libmyth-0.11-dev' in `../libmyth-0.11-dev_0.11-4_i386.deb'.
 dpkg-genchanges -b
dpkg-genchanges: binary-only upload - not including any source code
dpkg-buildpackage: binary only upload (no source included)
sh-2.05b# ls -l ../*.deb
-rw-r--r--    1 root     root        31734 Sep  6 19:07 ../libmyth-0.11-dev_0.11-4_i386.deb
-rw-r--r--    1 root     root       408444 Sep  6 19:07 ../libmyth-0.11_0.11-4_i386.deb
-rw-r--r--    1 root     root      3324966 Sep  6 19:07 ../mythtv-backend_0.11-4_i386.deb
-rw-r--r--    1 root     root        15350 Sep  6 19:07 ../mythtv-common_0.11-4_all.deb
-rw-r--r--    1 root     root        17978 Sep  6 19:07 ../mythtv-database_0.11-4_all.deb
-rw-r--r--    1 root     root       422232 Sep  6 19:07 ../mythtv-doc_0.11-4_all.deb
-rw-r--r--    1 root     root      4900474 Sep  6 19:07 ../mythtv-frontend_0.11-4_i386.deb
-rw-r--r--    1 root     root        12372 Sep  6 19:07 ../mythtv_0.11-4_all.deb
</verb></tscreen>

<p>If building from CVS instead of the source package, then the QTDIR
environment variable must be set when building.  On Debian woody,
QTDIR should be set to <tt>/usr/share/qt</tt>.  On Debian unstable,
QTDIR should be set to <tt>/usr/share/qt3</tt>.

<sect>Downloading and compiling.
<p>Get MythTV from the <url url="http://www.mythtv.org" name="mythtv.org">
web site.  There are two installation methods you may choose from.  The
first is to download the latest release in tarball format and compile.  The
tarball release of MythTV should work on a wide variety of systems and
should be the preferred method for new users.  If you wish to use the CVS
version of MythTV you may obtain it from CVS this way:
<label id="cvs">
<tscreen><verb>
$ mkdir mythtv
$ cd mythtv
$ cvs -d :pserver:mythtv@cvs.mythtv.org:/var/lib/mythcvs login
Logging in to :pserver:mythtv@cvs.mythtv.org:/var/lib/mythcvs
CVS password: mythtv
$ cvs -z3 -d :pserver:mythtv@cvs.mythtv.org:/var/lib/mythcvs checkout mythtv
</verb></tscreen>

The other MythTV modules may be downloaded from CVS the same way; replace
"mythtv" with "mythweather", "mythgallery", "mythmusic", etc.

If you wish to stay up-to-date with CVS, you may replace "checkout mythtv"
with <tt>update mythtv</tt> after you've done your initial download.

<bf>NOTE</bf>: If you are going to use CVS to compile MythTV rather than
using the distribution tarball, it is <bf>strongly</bf> recommended that you
join the <url url="http://www.snowman.net/mailman/listinfo/mythtv-commits/"
name="http://www.snowman.net/mailman/listinfo/mythtv-commits/"> and <url
url="http://www.snowman.net/mailman/listinfo/mythtv-dev/"
name="http://www.snowman.net/mailman/listinfo/mythtv-dev/"> mailing lists.

Get XMLTV from <url url="http://xmltv.sourceforge.net"
name="http://xmltv.sourceforge.net">.  Download version 0.5.17 if you're in
North America.

<code>
NOTE for Mandrake users:  If you have added a "PLF" mirror, you may skip the
next step and type:

# urpmi libmp3lame0 libmp3lame0-devel

NOTE for Red Hat users: If you are installing with apt or yum, you may skip this step, it will be taken care
of. Otherwise get lame and lame-devel from FreshRPMS: http://freshrpms.net/rpm/lame/

After downloading, be sure to install both:
# rpm -Uvh lame*

</code>

Get lame from <url url="http://www.mp3dev.org/mp3"
name="http://www.mp3dev.org/mp3">.  Download the source code to v3.93.1 by
following the links to sourceforge.net

<sect1>Notes on compiling on a system with non-Intel processors. <label
id="nonintelcpu_">
<p>If you've got a system with an AMD K6-2 or a VIA C3 processor, make the
following change in the <tt>settings.pro</tt> file.

Look for 
<verb>-march=pentiumpro</verb> 
and replace it with
<verb>-march=i586</verb> 
before you compile.

Recent AMD processors, like the Duron, Thunderbird and Athlon don't need this
change.

<sect1>Building LAME.
<p>Open a shell and switch to the directory where you saved lame.
<tscreen><verb>
$ tar -xzf lame-3.93.1.tar.gz
$ cd lame-3.93.1
$ ./configure
$ make
$ make test
$ su
# make install
</verb></tscreen>
Check that it worked:
<tscreen><verb>
# ls -l /usr/local/lib
-rw-r--r--    1 root     root       381706 Nov  4 14:22 libmp3lame.a
-rwxr-xr-x    1 root     root          674 Nov  4 14:22 libmp3lame.la*
lrwxrwxrwx    1 root     root           19 Nov  4 14:22 libmp3lame.so ->
libmp3lame.so.0.0.0*
lrwxrwxrwx    1 root     root           19 Nov  4 14:22 libmp3lame.so.0 ->
libmp3lame.so.0.0.0*
-rwxr-xr-x    1 root     root       360197 Nov  4 14:22
libmp3lame.so.0.0.0*

# exit
$ 
</verb></tscreen>

<sect1>XMLTV. 
<sect2>Red Hat Linux 9:
<p>RPMs for <bf>XMLTV</bf> and all of its dependencies can be obtained from
<url url="http://atrpms.physik.fu-berlin.de/name/xmltv/"
name="http://atrpms.physik.fu-berlin.de/name/xmltv/">. The web page has a
list of all the dependent packages you must download and install.
<tscreen><verb>
# rpm -Uvh xmltv* perl*
</verb></tscreen>

If you install from this location you may skip to <ref id="manually_building_mythtv"
name="Manually building MythTV">.
<sect2>Mandrake
<p>You may install the XMLTV prerequisites if you have added a contrib
mirror by typing:
<tscreen><verb>
# urpmi perl-xml-twig perl-xml-writer perl-datemanip perl-libwww-perl
</verb></tscreen>

and skipping straight to the XMLTV compilation step.

<sect2>Other distributions and manual installation.
<p><bf>NOTE</bf>: Red Hat Linux 8.0 and SuSE 8.1 users, you <em>must</em>
download and install an updated version of libexpat.  The version that ships
with Red Hat Linux 8.0 and SuSE 8.1 (version 1.95.4) is buggy, and will
cause problems with XML::Twig. All other distributions may skip this step
and proceed with <ref id="untarring_xmltv" name="untar'ing"> the xmltv file.

If you get errors installing XML::Twig or other XMLTV prerequisites,  
try deleting the old versions of libexpat
<tscreen><verb>
$ su
# rm -f /usr/lib/libexpat*
# /sbin/ldconfig
# exit
</verb></tscreen>

Download version 1.95.5 from sourceforge.net:  <url
url="http://sourceforge.net/projects/expat/"
name="http://sourceforge.net/projects/expat/">

Open a shell prompt:
<tscreen><verb>
$ tar -xzf expat-1.95.5.tar.gz
$ cd expat-1.95.5
$ ./configure
$ make
$ su
# make install
# /sbin/ldconfig
# exit
$ 
</verb></tscreen>

Continuing on:

<label id="untarring_xmltv">Untar the xmltv file:
<tscreen><verb>
$ tar -xjf xmltv-0.5.17.tar.bz2
$ cd xmltv-0.5.17
</verb></tscreen>
Install the xmltv prerequisites:

<tscreen><verb>
$ su
# perl -MCPAN -e shell
cpan> install XML::Twig
cpan> install Date::Manip
Date::Manip is up to date.
cpan> install LWP
cpan> install XML::Writer
cpan> exit
</verb></tscreen>

Change to the XMLTV directory and compile it:
<tscreen><verb>
$ cd xmltv-0.5.17
$ perl Makefile.PL
</verb></tscreen>
You can answer "N" to the tv_check, tv_pick_cgi questions.  Say "yes" to
the grabber required for your location.

You may get errors about modules not being installed.  They shouldn't matter
if you're installing North America and have followed the instructions to
this point.
<tscreen><verb>
$ make
$ make test
$ su
# make install
# exit
</verb></tscreen>

<label id="manually_building_mythtv">
<sect1>Manually building MythTV.
<p>Unpack MythTV
<tscreen><verb>
$ tar -xjf mythtv-0.11.tar.bz2
$ cd mythtv-0.11
$ ./configure
$ qmake mythtv.pro
$ make
</verb></tscreen>

<label id="RH80_OSD_Strip">
<code>
NOTE for Red Hat 8 users: You must manually modify a Makefile
within the themes directory, otherwise your on screen display (OSD) will be
"generic" rather than themed.  The solution is to edit the Makefile within
the themes directory and comment out (using a # symbol before each line)
every line that starts with the word "strip". Make sure you switch back to
the MythTV build directory before executing the next step.
</code>

Switch to superuser:
<tscreen><verb>
$ su
# make install
# exit
</verb></tscreen>

<bf>NOTE</bf>:  subsequent configuration steps assume that you are within
the MythTV directory that you <tt>cd</tt>'d to above.

<sect1>Gentoo. <label id="Gentoo_build">
<p>Installation of MythTV on Gentoo consists of simply emerging the desired
ebuild because all of the packages are now part of the official Portage tree.

<tscreen><verb>
$ su -
# emerge --sync # make sure portage is up to date.
# vi /etc/make.conf
</verb></tscreen>

Add mysql to your USE variable.  i.e. <tt>USE="mysql ...."</tt>

<tscreen><verb>
# ACCEPT_KEYWORDS="~x86" emerge mythtv
</verb></tscreen>

<sect>MySQL.<label id="mysql">
<sect1>Mandrake 9.0
<p>If this is the system maintaining the database, make sure that mysql is
running and started at boot.  Click on Mandrake Control
Center->System->Services, find mysql and click the "On Boot" button and the
"Start" button if the mysql status shows that it isn't running yet.

<bf>NOTE</bf>:  There have been reports that mysql isn't starting at boot.
<tscreen><verb>
$ su
# chkconfig --level 35 mysql on
# /etc/rc.d/init.d/mysql start
# exit
</verb></tscreen>

<sect1>Red Hat Linux
<p>If this is the system maintaining the database, make sure that mysql is
running and started at boot. Click on Redhat menu>Server Settings>Services
and enter the root password when asked. Check "mysqld" and then click Start.
Click Save, then close the window.

This can be done from the command line by typing:
<tscreen><verb>
# /sbin/chkconfig mysqld on
# /sbin/service mysqld start
</verb></tscreen>

<sect1>Gentoo
<p>After installing mysql you need to initialize the database by running
mysql_install_db as root. 

<sect1>Setting up the initial database.
<p>This step is only required on the system maintaining the database, which
may or may not be one of your MythTV boxes.  If the database is on a
non-MythTV machine you'll need to copy the <tt>database/mc.sql</tt> file to it.

To setup the initial mysql databases:
<tscreen><verb>
$ cd database
</verb></tscreen>
<sect2>Mandrake 9.0 and Red Hat Linux
<p><tscreen><verb>
$ mysql -u root < mc.sql
</verb></tscreen>
<sect2>Debian 3.0
<p><tscreen><verb>
$ mysql < mc.sql
</verb></tscreen>
<sect2>Gentoo
<p><tscreen><verb>
$ su
# mysql < /usr/share/mythtv/database/mc.sql
</verb></tscreen>
If you've already got a copy of the database installed and need to update the
schema, use the <tt>-f</tt> flag to force <bf>mysql</bf> to continue setting
up the tables even if they already exist.  By default, <bf>mysql</bf> will
stop at the first error.

<bf>NOTE</bf>: It is good practice to set a root password for mysql. 
Instructions for doing so can be found on MySQL's web site at <url
url="http://www.mysql.com/doc/en/Security.html"
name="http://www.mysql.com/doc/en/Security.html">.

<sect1>Upgrading the database
<p>If you need to upgrade the database, either because you're using the CVS
version of MythTV, or because you're moving from one release to another,
you'll need to run the appropriate <bf>mysql</bf> script found in
the <tt>database/</tt> directory.  Use the same format as above, replacing
"mc.sql" with the appropriate .sql file:

So, if you're upgrading from MythTV 0.10 to 0.11 on a Mandrake system:
<tscreen><verb>
$ cd database
$ mysql -u root < 0.10-to-0.11.sql
</verb></tscreen>

<sect2>Modifying access to the MySQL database for multiple systems <label
id="modify_perm_mysql">
<p>If you're going to have multiple systems accessing a master database,
you must grant access to the database from remote systems.  By default, the
<tt>mc.sql</tt> script is only granting access to the local host.

To allow other hosts access to your master database, you can either set it
up for no security at all, or with more granularity.  Note that the "%" is
the wildcard character in MySQL.

<bf>NOTE</bf>:  The "no security" option is <em>very</em> dangerous unless
you're in a controlled environment.

This example has no security at all, and allows access from any host.
<tscreen><verb>
$ mysql -u root mythconverg
mysql> grant all on mythconverg.* to mythtv@"%" identified by "mythtv";
</verb></tscreen>

For a more secure setup, you can restrict which machines or subnets have
access. If you have a complete DNS system operational, you could do the
following:
<tscreen><verb>
$ mysql -u root mythconverg
mysql> grant all on mythconverg.* to mythtv@"%.mydomain.com" identified by "mythtv";
</verb></tscreen>

Finally, if you just want to restrict by IP subnet:
<tscreen><verb>
$ mysql -u root mythconverg
mysql> grant all on mythconverg.* to mythtv@"192.168.1.%" identified by "mythtv";
</verb></tscreen>

<sect>Setting up ALSA and the mixer.
<p>If your video doesn't appear to be in-sync with your audio, it could be
because you are listening to the real-time audio from your video card rather
than after it's been processed and synchronized to the video by MythTV. 
Because MythTV is a personal video recorder, "Live TV" isn't really live -
to let you pause live TV, MythTV is actually encoding the video, saving to
disk, and then playing it back.  This procedure puts your MythTV "live" TV
about 2 seconds behind real-time, so it's important that you're not
listening to the live audio.  However, if you're having an issue where the
audio and video aren't synchronized by small but varying amount, it's most
likely because the sound driver that you're using doesn't have the
DSP_CAP_REALTIME capability.  This was the case with ALSA (0.5), but not
with newer versions (0.9).  See the <ref id="Troubleshooting_Audio"
name="Troubleshooting Audio"> section for more information if you're having
issues with sound.  Also, ensure that no other programs are grabbing the
audio output, like <bf>arts</bf> or <bf>esd</bf>.

What you need to do is to mute the "line-in" of your sound card and also
set it as the recording source.

There are two ways to do this.  Graphically, and from the command line.

<sect1>Graphically setting up the mixer.
<sect2>Mandrake 9.0 and Red Hat Linux
<p>Open Kmix by clicking K->Multimedia->Sound->Kmix for Mandrake, or
<verb>RedHat Menu>Sound & Video>Volume Control</verb> on Red Hat.

Click on Settings->Configure  Make sure that "Tick Marks" and "Show
labels" have "X"'s in them.  This will make it easier to find the correct
audio source.  Click OK.

On the mixer page, look for Line-In on your sound card.  You should see
two LED's - a green one at the top, and a red one at the bottom.  The green
one at the top is for muting; you want to make sure that the green LED is a
dark green, meaning that it's "off".  You also want to click on the red LED
so that it turns bright red, indicating that it's "ON"; this insures that
the Line-in is used as the source.  Click OK, and make sure that you save
the settings so that this is your default.

<sect3>Using OSS drivers.
<p>Red Hat Linux 8.0 ships with OSS sound drivers rather than the ALSA
drivers recommended by the MythTV team. The OSS drivers do work for many
people, and for many cards. We recommend that you give OSS a try since it is
already included in Red Hat 8. However, some people report problems (sync
and jitter) with OSS, and in addition it does not support full duplex on
some cards.  Full duplex is required if you want to record and play sound
using just one sound card. ALSA has good full duplex support, and also has
drivers for some built-in (motherboard) sound cards that OSS does not.
Installing ALSA is less painful than you might think, so if OSS does not
work for you, installing ALSA is not too difficult. For those of you who do
not wish to install ALSA you must do this:

To configure sound to work with MythTV, select <verb>RedHat Menu>Sound &
Video>Volume Control</verb> to open up a mixer. Make sure your global volume
(on the far left) is up. Also make sure that the "line in" section has
"mute" and "record" checked and that the gain is turned up. You may have to
experiment with volume/gain levels to get the best sound.  

<sect3>Using ALSA drivers.
<p>For those of you who do want to install ALSA please follow the 
directions below, compiled with much assistance from Gregorio Gervasio.

First you must find out the name of your driver, which isn't necessarily the
same as the name of your sound card. Go to <url
url="http://www.alsa-project.org/alsa-doc/"
name="http://www.alsa-project.org/alsa-doc/">, find your sound card on the
list and click "details". Near the top it will say something like "The
module options for snd-XXX", where XXX is the name of your driver. In the
instructions below, replace "XXX" with the name of your driver.

Download the development release (0.9.x) from the ALSA web site <url
url="http://www.alsa-project.org" name="http://www.alsa-project.org">.  You
need at least three files:
<itemize>
<item>alsa-driver-0.9.x.tar.bz2
<item>alsa-lib-0.9.x.tar.bz2
<item>alsa-utils-0.9.x.tar.bz2
</itemize>

Start with the alsa-driver package:
<tscreen><verb>
$ tar -xjf alsa-driver-0.9.x.tar.bz2
$ cd alsa-driver-0.9.x
$ ./configure --with-cards=XXX --with-sequencer=yes
$ make
$ su
# make install
# ./snddevices
# exit
$
</verb></tscreen>

This will compile and install the kernel modules and initialization
scripts, as well as create device nodes in /dev.

Install the rest of the packages:
<tscreen><verb>
$ cd ~
$ tar -xjf alsa-lib-0.9.x.tar.bz2
$ cd alsa-lib-0.9.x
$ ./configure
$ make
$ su
# make install
# exit
$ cd ..
$ tar -xjf alsa-utils-0.9.x.tar.bz2
$ cd alsa-utils-0.9.x
$ ./configure
$ make
$ su
# make install
</verb></tscreen>

Next, you must edit <tt>/etc/modules.conf</tt> so that the ALSA modules are
loaded automatically. The first step is to remove your old OSS
configuration to ensure that you don't end up with mysterious conflicts in
the future.  You should end up with a <tt>/etc/modules.conf</tt> file that has
this configuration:
<tscreen><verb>
alias char-major-116 snd
alias snd-card-0 snd-XXX
# module options should go here
# OSS/Free portion
alias char-major-14 soundcore
alias sound-slot-0 snd-card-0
# card #1
alias sound-service-0-0 snd-mixer-oss
alias sound-service-0-1 snd-seq-oss
alias sound-service-0-3 snd-pcm-oss
alias sound-service-0-8 snd-seq-oss
alias sound-service-0-12 snd-pcm-oss
</verb></tscreen>

"XXX" should be the ALSA driver name for your sound card/chip. In some rare
cases you need to supply extra options to the driver. These options are
descried in the "INSTALL" file in the alsa-driver directory or at <url
url="http://www.alsa-project.org/alsa-doc/"
name="http://www.alsa-project.org/alsa-doc/">.

For now we will assume that no extra options are required.  The next step is
to ensure that the ALSA drivers are started during boot-up.
<tscreen><verb>
$ su
# cd /etc/rc.d/init.d
# /sbin/chkconfig --add alsasound
</verb></tscreen>

The next set of instructions will cause the ALSA volume/mixer/etc. state to
be saved when the machine is shut down properly. Note that the mixer
settings won't get restored the next time you boot unless you ran the
shutdown script or you've explicitly saved the state which you can do
as root with:
<tscreen><verb>
# alsactl -f /etc/asound.state store
</verb></tscreen>

Reboot your machine.  Login and adjust the sound levels using "alsamixer". 
You should increase the main volume (the first slider) and the PCM volume,
and unmute them by hitting "m".  For MythTV, if your tuner card audio output
is patched to the Line-In input of your sound card, set the Line input for
capture by pressing SPACE at the slider and mute it by pressing "M". If
you've patched your tuner card to the Mic-In port of your sound card, follow
the same instructions but make sure that you're on the Mic slider.

Test the driver by playing a simple file:
<tscreen><verb>
$ aplay /usr/share/sounds/info.wav
</verb></tscreen>

If it works, you're done installing ALSA!

<sect1>Setting the mixer from the command line.
<p>If you have installed the alsa-utils package, then the <bf>amixer</bf>
program can be used to setup the mixer.  The "Master" volume setting is only
required on a frontend machine to ensure that the sound channels are unmuted
and configured for outputting sound.  The "Line" and "Capture" controls are
required for your sound card to actually capture audio from the external
Line-in.  Not all sound cards have a "Capture" control, but if yours does
and you don't set it then MythTV will not capture audio.

<code>
Note the spelling in the following commands.
</code>
<tscreen><verb>
$ amixer set Master,0 100%,100% unmute
$ amixer set Line,0 75%,75% mute captur
$ amixer set Capture,0 100%,100% mute captur
$ su
# alsactl store
# exit
$ 
</verb></tscreen>

If you have multiple sound cards, then use the <tt>-c</tt> parameter to
specify which card to adjust.  Note that the first card will be "0", the
second will be "1", etc.

That takes care of setting the volume correctly, and the ALSA startup script
will restore the volume after a reboot.  If you find that your sound is
distorted, it's possible that the levels in the above examples are too high
for your particular hardware combination.  Try reducing the percentages by
5-10% and checking again.  Once you're satisfied, re-run the <tt>alsactl
store</tt> command.

You may also use the <bf>alsamixer</bf> program to set the volume.  First,
start <bf>alsamixer</bf> from the command line.  You should start out on the
"Master" volume control slider.  Use the up and down cursor to set the
master volume to around 75%.  Next, use the left and right cursor keys to
move around on the screen until you find the "Line" slider.  Press SPACE to
set it as the capture source, set the level to around 50-75% and press "M"
to mute it.  You can now press ESC to exit out of the <bf>alsamixer</bf>
program.  You can also have MythTV manage all volume and mute settings, but
this will only affect the "Master" or PCM volume, not the capture volume.  See
the mythfrontend setup page for options.
 
<sect>Setting up a remote control.
<p>MythTV does not have native remote control receiver and decoder software
built-in.  Instead, remote control functions are implemented by cooperating
with <bf>lirc</bf>, the Linux Infrared Remote Control program.  <bf>lirc</bf>
handles the IR hardware and passes keystrokes to MythTV, which then acts as
if the user had pressed the keys on the keyboard.  The file
<tt>keys.txt</tt> describes the keys used to control MythTV.

<bf>NOTE</bf>:If you are running Mandrake 9.1, you may install
<bf>lirc</bf> by executing: <tt># urpmi lirc lirc-remotes</tt> and bypass
the manual compilation steps described below by jumping to the <ref
id="completing_lirc_install" name="Completing the lirc install"> section. 
See the contrib/mandrake91.etc.sysconfig.lircd file for an example of how to
configure lircd.

Some IR devices require a kernel recompile, and some don't. However, all at
least require having the kernel source available as a resource for the lirc
build process. 

<sect1>Gentoo
<p>To install lirc on Gentoo, all you need to do is:
<tscreen><verb>
# emerge lirc
</verb></tscreen>

<sect1>Mandrake 9.0
<p>lircd has two prerequisites:  <bf>dialog</bf>, available in Mandrake
through the "cdialog" RPM, and the kernel source.  Mandrake 9.0 is using the
2.4.19 kernel, so either install the kernel sources from the installation CD
or go to <url url="http://www.kernel.org" name="http://www.kernel.org"> and
download the full 2.4.19 tar file from <url
url="http://www.kernel.org/pub/linux/kernel/v2.4/"
name="http://www.kernel.org/pub/linux/kernel/v2.4/">.

<sect2>Obtaining the kernel.
<p>Install using urpmi.
<tscreen><verb>
$ su
# urpmi kernel-source
</verb></tscreen>

<sect1>Red Hat Linux
<p>You should already have the source from the "Kernel Development" package
you installed in section 3.2. Ensure that a symlink has been created:
<tscreen><verb>
$ cd /usr/src
$ su
# ln -s linux-2.4 /usr/src/linux
# exit
</verb></tscreen>

<sect1>Obtaining and compiling lirc.
<p>You're going to need to download and compile <bf>lircd</bf>.  Go to <url
url="http://www.lirc.org" name="http://www.lirc.org"> and download lirc; as
of 2002-11-07, the version available is 0.6.6.  Grab the remotes.tgz file as
well. 
<tscreen><verb>
$ tar -xjf lirc-0.6.6.tar.bz2
$ cd lirc-0.6.6
$ ./setup.sh
</verb></tscreen>
You're going to need to know what sort of receiver you have and where it's
connected.  In the case of the Pinnacle Studio TV card, with the IR receiver
connected to COM1 (/dev/ttys0), once the configuration menu comes up,
perform the configuration by going to Driver Configuration->Other Serial
Port Devices->Pinnacle Systems Receiver->OK and on the next page select
COM1->OK.

Each remote is different; some remote receivers connect directly to your
capture card and not to a serial port, so make sure that you've got the
correct one.

You then click "Save Configuration and run configure" to continue.

Make sure you read the last text generated by the configure step. It will
tell you if you require a kernel recompile, and what the name of your kernel
module will be (if necessary). For instance a home-built receiver may
require a kernel recompile, so you would be notified that you will have to
load the lirc_serial module. If you did not get any such messages skip the
kernel recompile steps below and go directly to making and installing the
lirc driver.

Once the configuration step is complete:
<tscreen><verb>
$ make
$ su
# make install
# chmod 666 /dev/lircd
</verb></tscreen>

At this point, if you're using a serial receiver, check that there's a
<tt>lirc</tt> device in <tt>/dev</tt>:
<tscreen><verb>
$ ls -l /dev/li*
lr-xr-xr-x    1 root     root            5 Jan 27 09:00 /dev/lirc -> ttyS0
srw-rw-rw-    1 root     root            0 Jan 27 15:01 /dev/lircd=
prw-r--r--    1 root     root            0 Jan 27 09:00 /dev/lircm|
</verb></tscreen>

As you can see, there's a link from /dev/lirc to ttyS0, a.k.a. "COM1", which is
appropriate for the Pinnacle Systems PCTV Pro.  However, you may notice
something like this:
<tscreen><verb>
crw-------    1 root     root      61,   0 Dec 31  1969 lirc
</verb></tscreen>
Some IR receivers (including some homebrew units) use a character device as
their data interface as opposed to a link to a serial port.  If the <tt>make
install</tt> step has created a character device for you, don't replace it
with a link to a COM port.

So, if the link or character device was not created (but should have been),
ensure that you ran the <tt>make install</tt> step as root.  If it still
doesn't work, then there are three options.  The first option is to re-read
the <bf>lirc</bf> documentation to determine whether your IR receiver is a
character device or should be a link to a serial port and to create the
link/character device manually.  In this example, the IR device is connected
to ttyS0.  If it were connected to "COM2", then use ttyS1, etc.
<tscreen><verb>
$ su
# cd /dev
# ln -sf ttyS0 lirc
# exit
$
</verb></tscreen>

<bf>NOTE</bf>:  The above example assumes that your receiver uses the
standard serial driver.  Some receivers do not, including receivers that
plug into a TV capture card.  Check the lirc documentation, but it may be
necessary to replace the link created above with a a character pipe:
<tscreen><verb>
# mknod /dev/lirc c 61 0
</verb></tscreen>

See the lirc documentation for additional information.  The lirc
installation <em>should</em> create this for you, so manually creating it
indicates that your lirc installation may have other issues.

The second option is to post your issue to the <em>lirc</em> list, not the
mythtv-users list.  The lirc programmers will be the ones that can assist
you best.

The third option is to dispense with lirc altogether by purchasing an IR
keyboard (various options exist, although Chicony appears to work for some
people) and a learning remote control.  The IR keyboard receiver plugs into
the PS/2 keyboard port on your PC and you would train your learning remote
to emulate the various keystrokes from <tt>keys.txt</tt> of your IR
keyboard.  Using this method removes lirc entirely from the picture - your
remote will be sending keypresses that your PC "sees" on the keyboard port.

<sect2>Recompiling your kernel on Red Hat Linux
<p>Don't Panic! Red Hat makes a kernel recompile very easy. They provide  
configuration files that make it so you can recompile your kernel with  
Red Hat defaults. And as a side benefit, your kernel will be compiled  
specifically for your architecture. For a more detailed description (or  
if you run into trouble) of how to do this go to  
<url url="http://www.redhat.com/docs/manuals/linux/RHL-8.0-Manual/custom-guide/ch-custom-kernel.html" 
name="http://www.redhat.com/docs/manuals/linux/RHL-8.0-Manual/custom-guide/ch-custom-kernel.html">

<bf>NOTE</bf>: Suitable Red Hat kernels for MythTV (i2c update, v4l2 api,
CONFIG_SERIAL modularized) are available from ATrpms: <url
url="http://atrpms.physik.fu-berlin.de/name/kernel/"
name="http://atrpms.physik.fu-berlin.de/name/kernel/">. You will also find
suitable kernel modules for ALSA, lirc, bttv, ivtv, saa7134 etc. there. See
also the <ref id="atrpms" name="main Red Hat section">.

For the impatient:
Make sure you have an emergency floppy boot disk available!
<tscreen><verb>
$ cd /usr/src/linux
$ su
# make mrproper
# cd configs
# ls
</verb></tscreen>

at this point you must look at the file names and determine which  
config file is right for you. For instance if you have an Athlon XP you  
should choose "kernel-2.4.18-athlon.config" but if you have a dual  
processor P4 you might choose "kernel-2.4.18-i686-smp.config"
<tscreen><verb>
# cp yourconfig.config ../.config
# cd ../
# make xconfig
</verb></tscreen>

At this point you will get a graphical configuration utility. All that  
you must do to make lirc work is go to the "character devices" section  
and change "Standard/generic (8250/16550 and compatible UARTs) serial  
support" from "y" to "m". Now if you want you can have a look around.  
For instance, you might wish to turn off ham radio support, or perhaps  
turn off PCMCIA support if you are not on a laptop. But be careful!  
Only change things you know you can change. If you are not sure, just  
stick to the one required change. Click "save and exit".
Next:
<tscreen><verb>
# make dep
# make clean
# make bzImage modules
# make modules_install
# make install
</verb></tscreen>

if you are using <bf>grub</bf>, that should be it, reboot and select your custom  
kernel upon boot. If you are using <bf>lilo</bf>, change your lilo configuration  
according to  
<url url="http://www.redhat.com/docs/manuals/linux/RHL-8.0-Manual/custom-guide/ 
s1-custom-kernel-bootloader.html" name="http://www.redhat.com/docs/manuals/linux/RHL-8.0-Manual/custom-guide/ 
s1-custom-kernel-bootloader.html"> Remember, if you have any custom  
kernel modules (ALSA, etc) you will have to recompile/reinstall those.

<sect1>Completing the lirc install. <label id="completing_lirc_install">
<p><bf>NOTE to Mandrake 9.1 users</bf>: skip to the manual start paragraph
below.
<p>If the lirc configure program / compile did not mention anything about a
kernel module, then you are finished. If it did mention a kernel module, you
must edit the <tt>/etc/modules.conf</tt> file. Add this line as the first
thing in the file.  It must come first, or it may not work.
<tscreen><verb>
alias char-major-61 XXX
</verb></tscreen>

replace XXX with the name which you determined earlier, which in this
example was "lirc_serial"
<tscreen><verb>
$ su
# modprobe lirc_serial
# /sbin/ldconfig
</verb></tscreen>

Next, we're going to manually start lircd the first time.  Mandrake 9.1
users, type: <tt># /etc/rc.d/init.d/lircd start</tt> instead of:
<tscreen><verb>
# /usr/local/sbin/lircd
</verb></tscreen>

If this fails, complaining of a missing <tt>lircd.conf</tt> file, then you
must find or make one. First look for a premade configuration file at <url
url="http://lirc.sourceforge.net/remotes/"
name="http://lirc.sourceforge.net/remotes/">.  Mandrake 9.1 users, look in
<tt>/usr/share/lirc-remotes</tt>. If you find one your remotes either on the
website or in <tt>/usr/share</tt>, download or copy the file, name it
<tt>lircd.conf</tt> and put it in your <tt>/etc</tt> directory. If you
couldn't find your remote, you must make your own <tt>lircd.conf</tt> file.

To make your own <tt>lircd.conf</tt> file
<tscreen><verb>
$ irrecord myremote
</verb></tscreen>

Follow the on-screen directions to train your remote and define keys. If  
your remote ends up working well, you should consider submitting your  
<tt>lircd.conf</tt> file back to the lirc developers. Once finished:
<tscreen><verb>
$ su
# cp myremote /etc/lircd.conf
</verb></tscreen>

now try to start lircd again:
<tscreen><verb>
# /usr/local/sbin/lircd
</verb></tscreen>

Now, we're going to add the commands necessary for lircd to run each time we
boot. Mandrake 9.1 users, you can execute:
<tscreen><verb>
$ su
# chkconfig --level 35 lircd on
# exit
</verb></tscreen>

All other distributions:
<tscreen><verb>
# cd /etc/rc.d
# cat >> rc.local
echo "Starting lircd"
/usr/local/sbin/lircd
^D
# exit
$ 
</verb></tscreen> 

This takes care of the lircd portion, which "listens" for the IR signals. If
everything went well, the install script for lircd put an appropriate
configuration file for your remote into <tt>/etc/lircd.conf</tt> This file
maps the buttons on the remote control to the IR pulses coming from the
receiver.

The next step is to convert those signals into something that can be used
to control MythTV.
<tscreen><verb>
$ cd ~/mythtv-0.11/configfiles
$ cp lircrc.example ~/.lircrc
</verb></tscreen> 
or
<tscreen><verb>
$ cp lircrc.example.pinnaclestudiopctv ~/.lircrc
</verb></tscreen>
if you've got a Pinnacle Studio PCTV remote.
<tscreen><verb>
$ irw
</verb></tscreen>
Start pressing the keys on your remote; <bf>irw</bf> will
print the name of the button as it is defined in your
<tt>/etc/lircd.conf</tt>. If you don't see anything at this point, you need
to troubleshoot further by going back to the lirc home page and investigating
from there.

If it is working, then press <bf>CTRL-C</bf> to abort the program.  Once you
know that your remote is working, you need to run the <bf>irxevent</bf>
program, which takes the key presses and sends them to MythTV. 
<bf>irxevent</bf>
isn't a daemon, so if you know that your remote is working you need to
invoke it like this: 
<tscreen><verb>
$ irxevent &
</verb></tscreen>
If <bf>irxevent</bf> isn't running, then MythTV will not respond to your remote
control.

<sect1>Additional information for lirc.

<p>Take a look at the lircrc.example files in the <tt>configfiles/</tt>
directory.  In my case, (Pinnacle Studio card) the channel up and down functions
weren't working, due to the fact that the button names were different than
the default <tt>lircrc.example</tt> file that came with MythTV.

The <tt>lircrc.example</tt> file has this:
<tscreen><verb>
begin
    prog = irxevent
    button = ChannelUp
    config = Key Up CurrentWindow
end

begin
    prog = irxevent
    button = ChannelDown
    config = Key Down CurrentWindow
end
</verb></tscreen>
but the <tt>/etc/lircd.conf</tt> that comes in the lircd package 
defines the buttons for the Pinnacle Studio PCTV as:
<tscreen><verb>
          channel+                 0x0000000000000017
          channel-                 0x000000000000001C
</verb></tscreen>
rather than "ChannelUp" and "ChannelDown".  I added the 
following to my /home/[yourusername]/.lircrc file:
<tscreen><verb>
begin
    prog = irxevent
    button = channel+
    repeat = 3
    config = Key Up CurrentWindow
end

begin
    prog = irxevent
    button = channel-
    repeat = 3
    config = Key Down CurrentWindow
end
</verb></tscreen>
which took care of basic functionality.  Because the PCTV Studio remote
has additional buttons, look at the
<tt>configfiles/lircrc.example.pinnaclestudiopctv</tt> for an example of how
to define additional buttons, and how to debug potential button name
conflicts between the <tt>lircrc.example</tt> file and how <bf>your</bf>
remote defines the button names.

By examining the button names defined in <tt>/etc/lircd.conf</tt> and using
the <bf>irw</bf> program to make sure that your remote is working, you can
create the appropriate mappings in <tt>.lircrc</tt> to get excellent remote
functionality with MythTV.

Note the <bf>repeat =</bf> parameter.  This informs the <tt>irxevent</tt>
program to pass through every third keypress.  By default, <tt>lirc</tt>
will only send one keypress to the application, even if you're holding down
the key.  The actual <bf>repeat =</bf> number will vary from system to
system, so experiment and see which value works best for you.

<sect1>Configuring lirc for use with an IR blaster.
<p>By Carlos Talbot, <url url="mailto:carlos@talbot.net">

Lirc has support for various IR transmitters. A popular model is the Actisys
IR-200L <url url="http://store.yahoo.com/snapstreammedia/irblasbun.html"
name="http://store.yahoo.com/snapstreammedia/irblasbun.html">. It was
originally designed for IRDA communication, but can be used to transmit A/V remote
control codes. By using the lirc SIR driver, this device can easily be
integrated with MythTV. I have tested this device with an AT&amp;T DCT2000
digital cable box but the instructions can be used to configure other IRDA
devices and A/V remotes.

Follow the steps in the previous section.  When you run setup.sh, select
option 1, driver configuration. From here select option 6, IrDA hardware.
Select your appropriate device and the corresponding serial port, then Save
configuration & run configure from the main menu. Once configure is done
type:
<tscreen><verb>
$ make
</verb></tscreen>

Please note: unlike the Pinnacle receiver above you will be compiling lircd
in addition to a kernel module for the SIR transmitter. Depending on whether
you have your serial port driver configured as a kernel module you might see
the following message during make:
<tscreen><verb>
lirc_sir.c:56:2: warning: #warning
"******************************************"

lirc_sir.c:57:2: warning: #warning "Your serial port driver is compiled into "

lirc_sir.c:58:2: warning: #warning "the kernel. You will have to release the "

lirc_sir.c:59:2: warning: #warning "port you want to use for LIRC with:"

lirc_sir.c:60:2: warning: #warning "setserial /dev/ttySx uart none"

lirc_sir.c:61:2: warning: #warning
"******************************************"
</verb</tscreen>

If you do receive this statement make sure to run the <bf>setserial</bf> command
before you load the lirc_sir module. Follow this with the install:
<tscreen><verb>
$ su
# make install
</verb></tscreen>
 
You will notice that lirc installs the kernel module in
<tt>/lib/modules/uname -a/misc</tt>. 

The configuration for starting <bf>lircd</bf> differs if you're going to be
sending and receiving IR versus just receiving.
<tscreen><verb> 
# cd /etc/rc.d
# cat >> rc.local
echo "Starting lircd"
setserial /dev/ttySx uart none        # (if required)
modprobe lirc_sir
/usr/local/sbin/lircd
^D
# exit
$ 
</verb></tscreen>
 
At this point you have to populate the <tt>/etc/lircd.conf</tt> file with the proper
codes for your A/V remote. You should be able to find your remote within the
lirc remote tar file located at <url
url="http://www.lirc.org/remotes.tar.bz2"
name="http://www.lirc.org/remotes.tar.bz2">. In my case I
extracted the file from remotes/motorola/DCT2000 (gi-motorola-dct2000)

To test the lirc_sir module you can run <bf>irw</bf> to verify the codes are being
received. If everything is configured correctly
you should see something similar to the following:
<tscreen><verb>
$ irw
0000000000007ff0 00 1 gi-motorola-dct2000
000000000000bff8 00 2 gi-motorola-dct2000
000000000000f7f0 00 ENTER gi-motorola-dct2000
</verb></tscreen>
 
Once you've verified lirc is working you can press <bf>CTRL-C</bf> to exit
<bf>irw</bf> and configure the channel changing script.
 
The path to the channel changing script will need to be entered on the
mythbackend setup screen for Input Connections.

This csh script will be called each time MythTV needs to change the channel.
Below is a copy of the script followed by the corresponding perl script.
Make sure both are in your path. Also make sure you leave the #!/bin/csh
setting and not change it to Bourne or bash. This will create a frustrating
symptom to diagnose where MythTV cannot open /dev/device. Unlike Bourne or
bash, csh scripts automatically close parent file descriptors before they
start.
<tscreen><verb>
$ cd /usr/local/bin
# su
# cat > change_channel.csh
#!/bin/csh
echo "changing to $1"
/usr/local/bin/channel.pl $1 &
^D
# chmod a+x change_channel.csh
# exit
$ exit
</verb></tscreen>
 
See <tt>contrib/channel.pl</tt> for the actual file.  Copy it to
<tt>/usr/local/bin/</tt>
 
The last statement within the perl script is the lirc rc command. This is
the command that transmits the code to your cable/DSS box. Make sure to have
the IRDA device within a few feet of the box.

<sect>Configuring MythTV. <label id="Configuring_mythtv">
<p>By this point, all of the prerequisites have been installed,
<bf>mysql</bf> is running and has had its initial database setup.  It's now
time to configure MythTV.

<sect1>Configuring the master backend system.
<p>Open a shell and decide where you will store your video files.  By
default, MythTV will assume that you will be using <tt>/mnt/store/</tt>, but
if this directory doesn't exist, or it exists and you don't have write
privileges to it then MythTV will fail when you attempt to make a recording. 
The following example is specific for <tt>/var/video</tt>, but the same
instructions would apply if you want to keep the default but don't have the
directory structure setup yet.  See the <ref id="advancedpartitionformatting"
name="Advanced Partition Formatting"> section for hints on creating a
partition for MythTV.

If you create a <tt>/var/video</tt> subdirectory, change
<tt>/mnt/store/</tt> to <tt>/var/video/</tt> in the setup screens.
<tscreen><verb>
$ su
# mkdir /var/video
# chmod a+rwx /var/video
# exit
</verb></tscreen>

The first thing to configure is the master backend system.  If you are
running multiple backend systems, the master backend will make all
decisions about which programs will be recorded on which tuners.  If you
have only one backend, then it will be its own master.

The master will always choose the first available tuner in the same order as
you add cards through "setup". In other words, the second card you add will
only be used when there are two overlapping recordings, the third when there
are three, and so on. Therefore, you will want to have your largest disk
space on the master because the tuner on the master will always be the first
choice. You will then want to add your <ref id="nonmaster_backend" name="other
backends"> in the order of your preference for recording.

See <ref id="advanced_backend_config" name="Advanced Backend
Configurations"> for information on configuring multiple backend systems in
various ways.

Because MythTV now uses a database to store most configuration variables,
part of the bootstrap of MythTV is to indicate the location of the MySQL
database server. If the frontend, backend and MySQL database server are all
going to be running on the same box, you can continue to the next step.  If
not, you'll need to edit the <tt>/usr/local/share/mythtv/mysql.txt</tt> file
and change the first line to the IP address of the database server. 
All other configuration is within the MythTV GUI screens.

<bf>NOTE</bf>:  Users that have been running the frontend and the backend on
different machines using Red Hat Linux 8.0 have stated that they have been
having issues with remote access to the MySQL database.  The following
instructions may or may not work.  Add the following to <tt>/etc/my.cnf</tt>
on the backend machine and restart MySQL.
<tscreen><verb>
skip-innodb
set-variable=thread_stack=256k
</verb></tscreen>

Switch to the setup directory and run the setup program:
<tscreen><verb>
$ cd setup
$ ./setup
</verb></tscreen>

The backend setup program will start and offer you a number of choices.  It
is <em>strongly</em> recommended that you go through them in order.

The first question will ask if you wish to clear out your existing
configurations for your capture cards.  Initially, you should say "YES" so
that there are no surprises later.

The next question will ask you if you wish to clear out your video source
information.  You should answer "YES" to this as well.

Once the graphical setup starts, you'll see that there are four choices.
<enum>
<item>General
<item>Capture Cards
<item>Video Sources
<item>Input Connections
</enum>

Use the arrow keys to move around, and press the space bar to select which
option you wish to configure.

<sect2>General
<p>The first screen of the General configuration deals with IP addresses of the
system that you're running setup on and any master backend you may have.  If
you've only got one machine, then the default values are fine and you can
move to the next page by pressing the space bar.  If you need to move around
the screen, use the arrow keys to move focus between settings and not the mouse.

If you will have multiple backends, then <em>do not</em> use the "127.0.0.1"
IP address.

It is very strongly discouraged that you make any changes to the port
settings from the defaults.

Once you're satisfied with the values, move the focus down to Next and hit
the space bar.

The next screen details the Host-specific Backend setup.  This is where you
will set the specific directory paths for this particular backend.  Make
sure that you've followed the steps at the beginning of this section and
created a directory that exists and that MythTV will have write privileges
to.  When you're done, press Next to continue, taking you to the Global
Backend Setup.

On the Global Backend Setup configure your backend with the appropriate
settings.  Use the left and right arrow keys to iterate through the choices
available on each setting, and the up and down keys to move between
settings.  Move to Finish when you're done and press the space bar, taking
you back to the main configuration screen.

<sect2>Capture Cards
<p>You should have no capture cards defined, so the highlight will be on
(New Capture Card).  Press space to begin.

Choose the appropriate settings for your particular tuner.  Use the arrow
keys to move around and to make your choices, and press RETURN when
complete.  Pressing RETURN will take you back to the Capture Cards screen;
if you have additional capture cards in this machine, press the space bar
when the highlight is on the (New Capture Card) row to define another card. 
Once you have no additional cards to setup, press ESC.

<sect2>Video Sources
<p>When you start, the highlight should be on (New Video Source).  Press the
space bar to begin.  The first field asks for the name of the video source.
You may choose something easy to remember, like "Antenna" or "Cable".  Once
you've chosen a name, press the down arrow to move to the next field.  If
you're in North America, move to the Zip/postal code field and put in the
appropriate value.  

If you're outside of North America, then some manual interaction will be
required with XMLTV.

<bf>NOTE</bf>:  If you are in North America, and you enter your Zip/postal
code and nothing seems to happen for a very very long time, it is possible
that XMLTV is waiting for you to provide some input.  Use ALT-TAB or
whatever key combination your window manager uses to switch programs and
look for a terminal window running XMLTV that may be waiting for input.

Once you have chosen your provider, press RETURN to continue.  XMLTV will
now begin collecting the initial data for your location.  The screen may
blank for a few seconds to several minutes, depending on the load of the
listings provider and the speed of your connection to the Internet.  Be
patient!

You will then be returned to the Video Sources screen.  If you have multiple
video sources available, such as Antenna, Cable, etc, go ahead and define
them all, even if they're not all going to be physically connected to the
master backend server.  Once you're done, press ESC to return to the main
screen.

<sect2>Input Connections
<p>The final configuration item is Input Connections.  On this screen, you will
associate the various video sources you defined earlier with a physical
input to a encoder card.  It's entirely possible that you have multiple
tuners, and each tuner has a different input, so on this screen you let
MythTV know which device will connect to which input source.

When you start this screen, you should see a listing of the various input
connections available on each of the Capture cards you defined earlier.  For
example, you may have a capture card with a tuner, a SVideo and a Composite
connection.  If you wanted to associate the tuner (a.k.a., "Television") with
an "Antenna" source you defined in Video Sources, you would move to the
/dev/videodevice (Television) -> line and press the space bar.  Using the
left and right arrow keys will show you the various choices you have already
created for video source.  In our case, you would use the left/right cursor
keys until "Antenna" was shown in the Video Source field.  Press down to
move to the next setting, all of which should be self-explanatory.

Once you're done, press RETURN to go back to the Input Connections screen. 
You would then finish associating the video sources to any other hardware
devices you have available.

<bf>NOTE</bf>:  Don't add a video source to a hardware input if you don't
actually have anything connected there.  For example, adding "Cable" to the
Tuner and to the Composite inputs without having something connected to
Composite will lead to blank recordings.

Press ESC to return to the main menu, and press ESC again if you have no
further items to configure, thereby returning you to the command line.

<sect1>Post-configuration.
<p>Run the <tt>mythfilldatabase</tt> program as directed.  The master
backend will obtain guide data for all the video sources you defined during
setup.

Once <tt>mythfilldatabase</tt> has finished, start the master server before
continuing.
<tscreen><verb>
$ mythbackend
</verb></tscreen>

mythbackend will print information about connections and what it's doing to
the console.  If you'd like to see the options that are available for
mythbackend, type <tt>mythbackend -h</tt> for help.

As of 2003-03-27, the available options are:
<tscreen><verb>
$ mythbackend -h
Invalid argument: -h
Valid options are:
-l or --logfile filename       Writes STDERR and STDOUT messages to filename
-p or --pidfile filename       Write PID of mythbackend to filename
-d or --daemon                 Runs mythbackend as a daemon
-v or --verbose                Prints more information
--printexpire                  List of auto-expire programs
--printsched                   Upcoming scheduled programs
</verb></tscreen>

Running mythbackend as a daemon and using the logfile option will allow you
to have mythbackend automatically start up during the boot process.  For
example, you may add this to your <tt>rc.local</tt> file, or you can follow
the steps outlined in the section called <ref id="mythbackend_autostart"
name="I'd like to automatically start mythbackend at system boot time">.

<sect1>Configuring a non-master backend. <label id="nonmaster_backend">
<p>Configuration of a non-master backend follows the same general procedure
as that of the master backend, with the exception that you skip over the
"Video Sources" step.  All possible video sources need to be defined on the
master backend system; only the master backend will query a listings
provider to obtain guide data for all the slave backends.

Make sure that the IP addresses on the General setup screen are accurate. 
If the slave backend can't communicate with the master backend due to IP
address misconfiguration then MythTV will not function properly.

Ensure that you've granted access to the master MySQL database for remote
backends as discussed in the section titled <ref id="modify_perm_mysql"
name="Modifying access to the MySQL database for multiple systems"> and that
you've edited the <tt>/usr/local/share/mythtv/mysql.txt</tt> file and put
the correct IP address for the database server.

<bf>NOTE</bf>: Do not run <tt>mythfilldatabase</tt> on a non-master backend.

<sect1>Configuring and running mythfilldatabase.
<p><bf>NOTE</bf>:  <bf>mythfilldatabase</bf> might take a while to complete,
depending on any number of factors, most of which you can't control.  It's
best to just let the program run to completion.

<bf>mythfilldatabase --manual</bf> is another option; the manual option will
allow you to fine tune channel frequencies and specify which channels will
be added to the database.  If you are not using the tv_grab_na grabber, you
must use the <bf>--manual</bf> option.

<bf>mythfilldatabase --file</bf> is an option if there isn't an XMLTV grabber
for your country, but you <bf>do</bf> have an XML formatted listings file
created by some other program.

<bf>mythfilldatabase --xawchannels</bf> is an option if you have used
<bf>xawtv</bf> to fine-tune your channels and would like to import the fine
tuning offsets into MythTV.

<!-- get more information on the manual setting -->

<sect2>Setting <bf>mythfilldatabase</bf> to run from <bf>cron</bf>
<p>In order to keep your database filled, <bf>mythfilldatabase</bf> should be
run once a day.

There are two ways to accomplish this:  either as a user-based cron job, or
as a system based cron.  If you use a user-based cron, you can select the
time that the cron job will be run.  A system-based cron job will run at the
same time as any other system cron jobs.

If you are a Mandrake 9.0 user and wish to use a system cron job, you can
perform the following steps:
<tscreen><verb>
$ cd configfiles
$ su
# cp mythfilldatabasecron /etc/cron.daily
</verb></tscreen>

If you want to know what time your job will run, you can do the following:
<tscreen><verb>
# cat /etc/crontab
SHELL=/bin/bash
PATH=/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=root
HOME=/

# run-parts
01 * * * * root nice -n 19 run-parts /etc/cron.hourly
02 4 * * * root nice -n 19 run-parts /etc/cron.daily
22 4 * * 0 root nice -n 19 run-parts /etc/cron.weekly
42 4 1 * * root nice -n 19 run-parts /etc/cron.monthly
# exit
$ 
</verb></tscreen>

We can see from the display that the cron.daily job will run at 0402 every
morning.

If you wish to specify a custom time, then the user-based cron job is the
better method.

The default <bf>configfiles/mythcrontab</bf> file will run the <bf>
mythfilldatabase</bf> program every day at 0430.  If you want to change this,
then open the <tt>configfiles/mythcrontab</tt> file in your favorite editor and
modify it as you like.  Once you're satisfied with the time that <bf>
mythfilldatabase</bf> will run, save and exit, and return to the shell prompt.
<tscreen><verb>
$ cd configfiles
$ crontab mythcrontab
$ crontab -l  NOTE: this is a lowercase L.
# The following will run the mythfilldatabase shell script at 0430
# every day.  Format is
# minutes hour day_of_month month day_of_week
# man 5 crontab for more information
# Need to use a shell script because the QTDIR environment variable isn't
# being honored by crontab?
# The next text should be all on the same line.
30 04 * * * /bin/bash $HOME/mythtv-0.11/configfiles/mythfilldatabasecron
$ 
</verb></tscreen>

As you can see, <bf>mythfilldatabase</bf> will now be run at 0430
every day.

If you decide to alter the time that the <bf>mythfilldatabase</bf> runs,
you can use the crontab command to open your existing job and edit it in
place.
<tscreen><verb>
$ crontab -e
</verb></tscreen>

The <bf>crontab -e</bf> command will allow you to edit the existing crontab.
<bf>NOTE</bf>:  By default, the crontab will use <bf>vi</bf> as your
editor.  If you don't like to use <bf>vi</bf>, make sure that you've set
<tt>VISUAL</tt> to something other than <bf>vi</bf>.

<tscreen><verb>
$ export VISUAL=/usr/bin/joe
$ crontab -e
</verb></tscreen>

This will cause <bf>crontab</bf> to use <bf>joe</bf>, a visual editor that
uses the Wordstar command sequence.  You may use <bf>emacs</bf>, or any
other editor that you're comfortable with.  You may also add the
<tt>EXPORT</tt> command to your <tt>.bashrc</tt> or to the
<tt>/etc/profile.d/mythtv.sh</tt> file.

<sect>Configuring mythfrontend.
<p>Once you have completed configuration of your backend systems, the next
step is to configure the frontend client.  You should run the MythTV setup
program before using any other modules such as MythMusic, etc. to correctly
initialize the database.

When you start mythfrontend, you should have a number of choices.  Before
doing anything, go to TV, then to Setup and configure the frontend client.

<sect1>General
<p>The General screen has configuration items that don't really fit anywhere
else.  The first few configuration items asks you to indicate the number of
seconds to record before or after a program, which is useful if the
broadcast network or your system clock are out of sync and will help prevent
you missing the beginning or end of a program.  

To change the value, use the left and right arrow keys to increment and
decrement the number of seconds.  When you're satisfied with the result, use
the down arrow to put the input focus on the Next button or press RETURN to
continue to the next page.

The next page has a number of options to do with how channels are displayed
on your system.  The help text will give you more information.  Move the
focus to Next and press the space bar to continue.

The final General page sets up some final configuration items.  See the help
text for more information.

<sect1>Appearance
<p>This set of screens is mostly concerned with how MythTV will look on your
system.  From here, you can choose different themes and set the resolution
of your system.

<sect1>Program Guide
<p>Fairly self explanatory.  Note that the alternate program guide does not
use the same font settings as defined in Appearance, so if the EPG is
unreadable this is where you make the adjustments to fonts, number of
elements displayed, etc.

<sect1>Playback <label id="deinterlace_"> 
<p>The one configuration item which may cause problems on your system is the
"Deinterlace playback" setting.  MythTV uses a linear blend algorithm for
deinterlacing, which will improve how the image looks on your screen. 
Deinterlacing requires that your processor support SSE. (Streaming SIMD
Extensions, aka "MMX2").  Early Intel Celeron (those that don't use the
Coppermine 0.18um core and are usually <600Mhz), Pentium Pro and Pentium II
CPUs do not have SSE, so make sure that you haven't enabled deinterlacing if
your processor doesn't support it. If you enable it, and your processor
doesn't support SSE, you will get "Illegal Instruction" errors.

To determine if you've got SSE on an Intel processor, you can:
<tscreen><verb>
$ cat /proc/cpuinfo
[snip]
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca
cmov pat pse36 mmx fxsr sse
</verb></tscreen>

Notice the <bf>sse</bf> at the end of the line - this tells you that this
processor will be able to deinterlace correctly.

On an AMD processor, look for "3dnow" in the cpuinfo line; "3dnow" is AMD's
implementation of SSE instructions, so if your processor has 3dnow you
shouldn't have any issues with deinterlacing.

<sect1>Recording 
<p>Currently, MythTV supports a number of different video encoders. There
are two software options and two hardware options. The software options are
MPEG-4 and RTJPEG. The hardware options are MPEG-2 and Hardware MJPEG. Take
note that RTJPEG has lower CPU demands than MPEG-4, but makes large files,
while MPEG-4 has higher CPU demands than RTJPEG, but makes smaller files.
Hardware MJPEG is only for use with MJPEG capture devices (Zoran-based
cards; see <url url="http://mjpeg.sourceforge.net"
name="http://mjpeg.sourceforge.net">). MPEG-2 is the format used by the
hardware-based PVR-x50 encoder. Note that MPEG-2 is not a selectable option
in the Recording setup option, but this is what PVR-x50 cards will always
use for initial video capture (which can later be transcoded), regardless of
what codec you choose for Default and/or Live TV.

<bf>NOTE</bf>: although the width and height can be changed to almost
anything, if you start MythTV and don't see video or you get "segmentation
fault" errors, it is likely that the video4linux (v4l) subsystem did not
like the height and width parameters specified.  It's best to leave the
default as-is until you're sure that MythTV is operational.

<sect>Using MythTV.
<p>The <tt>keys.txt</tt> file describes what the various keyboard commands are.

<bf>NOTE to Red Hat users</bf>:Red Hat Linux 9/8.0 ships with Gnome as
the default desktop environment.  However, Gnome seems to have issues with
window focus and window switching which sometimes cause mythfrontend to
obscure the video. KDE does not seem to have any such issues. Therefore you
will need to switch to KDE by selecting RedHatMenu>Extras>System
Settings>Desktop Switching Tool and choose "KDE".

<sect1>Using themes with MythTV.
<p>MythTV is "themeable", meaning that the visual appearance of the program
can be modified by the user without re-compiling or altering the program
functionality.  The MythTV website has a Themes section; pick a theme you'd
like to use and download it to your system.

Once it's on your machine, you must move the file and untar it:
<tscreen><verb>
$ su
# cp funhouse.tar.gz /usr/local/share/mythtv/themes
# cd /usr/local/share/mythtv/themes
# tar -xjf funhouse.tar.gz
# exit
</verb></tscreen>

The theme will now be available in the mythfrontend Appearance section.

<sect1>Adding DirecTV information to the database.
<p>A script for adding DirecTV information into the database has been
written by tarek Lubani <url url="mailto:tarek@tarek.2y.net"> and is
available at <url url="http://tarek.2y.net/myth/ppv.pl"
name="http://tarek.2y.net/myth/ppv.pl">.  This is currently an external
user-supplied program, so if you have issues with the script, please contact
the author.

<sect1>Adding support for an external tuner.
<p>MythTV supports changing the channel on an external tuner.  If you have
an external tuner, such as a DirecTV or digital cable set top box, you
should add <tt>/usr/local/bin/changechannel</tt> to your Input Connections in the
mythbackend configuration GUI.

The <bf>changechannel</bf> program is not supplied with MythTV, so this is
going to be dependent on what sort of external tuner you have.  Example
scripts for Sony and RCA receivers can be obtained from <url url="http://tarek.2y.net/myth/"
name="http://tarek.2y.net/myth/">.  This is currently an external
user-supplied program, so if you have issues with the script, please contact
the author.

Feel free to browse some of what sort of hardware is available at <url
url="http://shop.store.yahoo.com/snapstreammedia/cablepacks.html"
name="http://shop.store.yahoo.com/snapstreammedia/cablepacks.html">, or if
you wish to assemble your own, rather than purchase, the following may be
helpful: <url url="http://www.snapstream.com/products/irblaster/sonydss.htm"
name="http://www.snapstream.com/products/irblaster/sonydss.htm"> for cable
pinouts for RCA DSS receivers.

<sect>MythWeb.
<p>The MythWeb allows you to use a web page to control various
aspects of your MythTV system.  MythWeb is a separate application, but it's
dependent on MythTV being installed and operational.

<sect1>Installation and prerequisites.
<p>Download mythweb from <url url="http://www.mythtv.org/"
name="http://www.mythtv.org/"> and save it to a location where you can find
it.  The next step depends on whether your distribution has a web server and
if you have PHP support.

<sect2>Mandrake 9.0
<p>Mandrake 9.0 has <bf>apache</bf> and <bf>PHP</bf> pre-packaged, so
installation is quite simple.  Once you have installed the two programs,
either with the graphical installer (see instructions in <ref
id="graphicinstalltools_" name="Graphic Install Tools">) or through the
command line (section <ref id="CLIinstalltools_" name="Command Line">), and
you've ensured that the <bf>apache</bf> server will start at boot using the
Mandrake Control Center.

<bf>NOTE</bf>: Mandrake 9.1 users, perform the following:
<tscreen><verb>
# urpmi apache apache2-mod_php php-mysql
# chkconfig --level 345 httpd on
# /etc/rc.d/init.d/httpd restart
</verb></tscreen>

<sect1>Completing the installation.
<p>
<tscreen><verb>
$ tar -xjf mythweb-0.11.tar.bz2
$ cd mythweb-0.11
$ su
# mkdir /var/www/html/mythweb
# cp -r . /var/www/html/mythweb
# exit
$ 
</verb></tscreen>

Edit the <tt>/var/www/html/mythweb/config/conf.php</tt> file if required.

By default, MythWeb uses an Apache <tt>.htaccess</tt> file to restrict
access to the website and to configure some variables.

To create the password file for Apache (if your system doesn't already have
one), you could do something like this:
<tscreen><verb>
# cd /var/www
# htpasswd -c htpasswd mythtv
New password:
Re-type new password:
Adding password for user mythtv
</verb></tscreen>

See the man page for <bf>htpasswd</bf> for more examples.

To access the web page, open a web browser and use <bf>http://[name or ip
address]/mythweb/</bf>

<bf>NOTE</bf>: Make sure that you have a trailing slash on the URL,
otherwise you will get a <tt>404 Page not Found</tt> error.

<sect>MythGallery.
<p>MythGallery is a photo and slideshow application.  MythGallery is a
separate application, but it's dependent on MythTV being installed and
operational.
<sect1>Installation and prerequisites.
<p>Download MythGallery from <url url="http://www.mythtv.org/"
name="http://www.mythtv.org/"> and save it to a location where you can find
it.
<tscreen><verb>
$ tar -xjf mythgallery-0.11.tar.bz2
$ cd mythgallery-0.11
$ qmake mythgallery.pro
$ make
# su
# make install
# exit
$ 
</verb></tscreen>
The configuration for MythGallery is accessed through the main Setup option
in mythfrontend.  Make sure you set your pictures directory to wherever
you're storing your photos.

<itemize>
<item>Use the arrow keys to move around the thumbnails.
<item>Use SPACE or ENTER to maximize a photo.
<item>Use p or P to start the slideshow of all the files in the directory.  "Play" or "Pause" on your remote may also work.
<item>Use SPACE or ENTER to advance to the next photo.
<item>Use ESC to go up one level, or to exit out of the module if you're at the first level.
<item>Use the &lsqb and &rsqb keys to rotate the image.
<item>Use M to bring up the setup dialog.
<item>Use I to import pictures; when a photo is maximized this will bring up
photo information.
<item>7 and 9 are used to Zoom Out and in, 2, 4, 6 and 8 are used to move
around while in zoom mode, 5 centers and 0 exits zoom.
</itemize>

<sect1>Importing Pictures
<p>The import path in the setup dialog is a colon separated list of
directories and/or executable files.  When the import key is pressed, a new
directory (the destination directory) under the current directory will be
created and the import path will be searched.  If the item in the import
path is a directory (the source directory), the contents of that directory
will be copied to the destination directory. If you would like the source
directory to be that of a removable device, it might be a good idea to use
autofs.  See the automount howto at <url url="www.linuxdoc.org"
name="www.linuxdoc.org"> for info on how to get it working.

If the item in the import path is an executable file, MythGallery will
attempt to execute it with the destination directory as its sole argument.
Be careful when using executable scripts that the script runs unattended
(doesn't need user intervention) and returns properly, otherwise it could
create the appearance of MythGallery hanging (e.g. running
<bf>smbclient</bf> and prompting for password).  Also be sure that scripts
have executable permissions set.

Here is an example script that a user may want to run
on import: 
<tscreen><verb>
#!/bin/csh

if ($#argv == 0) then 
        echo "Usage: $0 dest_dir" 
        exit 
endif 

cd $argv[1]

# get stuff over the network
wget http://www.somesite.dom/dir/file1.jpg 
wget http://www.somesite.dom/dir/file2.jpg
wget http://www.somesite.dom/dir/file3.jpg

# stuff that requires manual module loading and/or fs mounting
modprobe camera_module
mount /dev/camera /mnt/camera
cp /mnt/camera/* $argv[1]
umount /mnt/camera
rmmod camera_module

# perform some processing
foreach pname (`ls *.jpg`)
        jpegtran -flip vertical $pname > $pname.new
        mv $pname.new $pname
end
</verb></tscreen>

<sect>MythGame.

<sect>MythMusic.  
<p>MythMusic has a number of prerequisites that must be satisfied before it
is operational.  Depending on your distribution, some of these prerequisites can
be satisfied through the various package managers.  If your distribution doesn't
offer pre-compiled versions of the software below, then follow the generic
instructions for manually compiling and installing the software.

The prerequisites for MythMusic are:
<itemize>
<item>MAD
<item>id3tag
<item>libvorbis-devel
<item>FLAC
<item>libcdaudio
<item>CDParanoia
</itemize>

<sect1>Manual installation of prerequisites.
<p>These instructions are for distributions which don't have pre-compiled
versions of the software necessary to run MythTV.

Download MAD from <url url="http://www.mars.org/home/rob/proj/mpeg/"
name="http://www.mars.org/home/rob/proj/mpeg/">  Save it to a directory you
can find later.
<tscreen><verb>
$ tar -xzf mad-0.14.2b.tar.gz
$ cd mad-0.14.2b
$ ./configure
$ make
$ su
# make install
# exit
$ 
</verb></tscreen>

Download libid3tag from <url url="http://www.underbit.com/products/mad/"
name="http://www.underbit.com/products/mad/"> Save it to a directory you can
find later.

<tscreen><verb>
$ tar -xzf libid3tag-0.15.0b.tar.gz
$ cd libid3tag-0.15.0b
$ ./configure
$ make
$ su
# make install
# exit
$ 
</verb></tscreen>

Download FLAC from <url url="http://flac.sourceforge.net"
name="http://flac.sourceforge.net"> and install:
<tscreen><verb>
$ tar -xzf flac-1.1.0.tar.gz
$ cd flac-1.1.0
$ ./configure
$ make
$ su
# make install
# exit
$ 
</verb></tscreen>

Download libcdaudio from <url name="libcdaudio.sourceforge.net"
url="http://sourceforge.net/project/showfiles.php?group_id=27134"> and
install:
<tscreen><verb>
$ tar -xzf libcdaudio-0.99.9.tar.gz
$ cd libcdaudio-0.99.9
$ ./configure
$ make
$ su
# make install
# exit
$ 
</verb></tscreen>

Download cdparanoia from <url name="http://www.xiph.org/paranoia/down.html"
url="http://www.xiph.org/paranoia/download/cdparanoia-III-alpha9.8.src.tgz">.
<tscreen><verb>
$ tar -xzf cdparanoia-III-alpha9.8.src.tgz
$ cd cdparanoia-III-alpha9.8
$ ./configure
$ make
$ su
# make install
# cd /usr/lib
# ln -sf libcdda_interface.so.0.9.8 libcdda_interface.so
# ln -sf libcdda_paranoia.so.0.9.8 libcdda_paranoia.so
# exit
$ 
</verb></tscreen>

<sect1>Mandrake 9.0
<p>Mandrake 9.0 has a number of the prerequisites available on the
installation CD.  Some of the software you're going to need will have to be
obtained from the "contrib" or "cooker" development repositories. 
Applications downloaded from "cooker" come from the development branch, so
there may be issues with some software.  It isn't recommended that you mix
cooker and release-level software.

<p><bf>urpmi</bf> is the simplest tool for installation of packages from the
command line.  The difficult part is the configuration, but this has been
made easier at the following website: <url
url="http://plf.zarb.org/~nanardon/urpmiweb.php"
name="http://plf.zarb.org/~nanardon/urpmiweb.php"> The website will allow
you to choose a mirror site and then present the command-line configuration
text for that mirror.  You will most likely need to add a "Contrib" mirror
to your setup.  Once you have done that, you can proceed.  If <bf>urpmi</bf>
prompts you about other modules that need to be installed to satisfy
dependencies, say "Yes".

<tscreen><verb>
# urpmi libmad0 libmad0-devel libflac4 libflac4-devel libcdaudio1 cdparanoia
# urpmi libcdda0 libcdda0-devel libvorbis0 libvorbis0-devel
# urpmi libcdaudio1-devel libid3tag0 libid3tag0-devel
</verb></tscreen>

<sect2>Additional options with MythMusic
<p>Additional visualizations have been added to MythMusic.  If you wish to
use these, there are some prerequisites you must install prior to compiling.

<itemize>
<item>fftw
<item>OpenGL
<item>SDL
</itemize>

<tt>fftw</tt> may be obtained from <url url="http://www.fftw.org/"
name="http://www.fftw.org/">.  In Mandrake 9.1 it may be installed by
typing:
<tscreen><verb>
# urpmi libfftw2 libfftw2-devel
</verb></tscreen>

<tt>OpenGL</tt> should be installed on practically all distributions. 
However, you will need the devel module.  In Mandrake 9.1 it may be
installed by typing:
<tscreen><verb>
# urpmi libMesaGLU1-devel
</verb></tscreen>

<tt>SDL</tt> may be obtained from <url url="http://www.libsdl.org"
name="http://www.libsdl.org">.  In Mandrake 9.1 it may be installed by
typing:
<tscreen><verb>
# urpmi libSDL1.2 libSDL1.2-devel
</verb></tscreen>

<sect1>Red Hat Linux 9/8.0
<p>Red Hat provides packages for several of the prerequisites, making 
installation very simple. Of the prerequisites, Red Hat provides 
packages for Vorbis, cdparanoia, SDL, and OpenGL (which you probably 
already have installed). To install these all at once, simply type (all on
the same line):
<tscreen><verb>
$ up2date --solvedeps libvorbis libvorbis-devel vorbis-tools cdparanoia-devel cdparanoia-libs cdparanoia SDL-devel SDL
</verb></tscreen>

If you get the following message: "None of the packages you requested 
were found, or they are already updated" it probably means you already 
have all of those packages installed.

You must install the remaining packages, (MAD, FLAC, libcdaudio and
optionally fftw) manually following the installation directions above. When
installing fftw do not use the rpm package offered on the website because it
will cause an error, so use the source package instead.

<bf>NOTE</bf>: you can use the instructions given at the <ref id="atrpms"
name="automated installation section"> to install all of MythMusic in one
step.

<sect1>Compiling MythMusic.  
<p>Once all the prerequisites have been installed, you can proceed with
getting MythMusic going. Make sure that you run <tt>./configure</tt> first. 
If you wish to use the new visualizations, make sure you install the
prerequisites.  Run <tt>./configure --help</tt> for help.

<code>
NOTE for Red Hat users: Before compiling, make the following modification 
to settings.pro, otherwise the compile will fail:

Find the following text:
INCLUDEPATH *= /usr/local/include

immediately below that add
INCLUDEPATH *= /usr/include/cdda

save and close settings.pro and proceed with compiling MythMusic.
</code>
<tscreen><verb>
$ qmake mythmusic.pro
$ make
$ su
# make install
# exit
$ cd musicdb
$ mysql -u root < metadata.sql
</verb></tscreen>

<sect1>Configuring MythMusic.
<p>Configuration of MythMusic occurs in two places.  The main mythfrontend
Setup is for global MythMusic configuration.  Go to the
Setup/MythMusic/General Setup screen and adjust it for your particular
setup.

The second configuration screen is within the MythMusic program and will
allow you rescan your music library, etc.

Here's some explanation about the Ignore_ID3 and The NonID3FileNameFormat:

If Ignore_ID3 is set to TRUE, MythMusic will try to determine the
Genre, Artist, Album, Track Number, and Title from the filename of the
mp3 file.  The NonID3FileNameFormat variable should be set to the
directory/file format where the mp3 files are stored.  For instance, I
store mine in the above shown Genre/Artist/Album/Track format.  MythMusic
will then use this information to fill in the proper fields when it
populates the musicmetadata table rather than searching for an ID3 tag in
the mp3 file.

The files can be laid out in any format, such as:

Genre/Artist/Album/Title
Artist/Genre/Album/Title
Artist/Album/Title (with Genre left as Unknown)

The track number is optional but can be specified with the title by using
the TRACK_TITLE keyword instead of TITLE.  If TRACK_TITLE is used,
then the filename can have a space, hyphen, or underscore separating the
track number from the track title.  Keywords are case insensitive, so if
you specify GENRE it's the same as Genre in the format field.

The Ignore_ID3 option does not disable the code that determines the track
length, just the portion that tries to read ID3 info.

<sect1>Using MythMusic.  
<p>MythMusic is fairly simple to use.  It is recommended that you insert the
CD before selecting "Import CD".  You should also ensure that your system
doesn't try to automount the CD and begin playing it automatically.

Another item to consider:  there are some CDs that contain computer data
that runs as a "CD Extra" when inserted into some Windows PCs and
Macintoshes.  As of 2003-06-10, MythMusic doesn't support track skipping or
individual track selection, so if you have a CD with "CD Extra" data you
will not be able to encode it; MythMusic will hang attempting to encode the
non-audio data.

<!--
Next stuff is from a message by jasonmiller [jasonmiller@micron.com]
with additional comments by Thor 
-->
Here's some information on playlist management:

Q: How do I create a new playlist?  
A: Using the MythMusic "Select Music" menu option, setup the playlist as you
normally would by adding songs or other playlists as needed.  When you are
ready to save the new playlist, highlight "Active Play Queue" at the bottom
of the selection tree and hit the "i" key. This will pop up a menu allowing
you to name and save the new playlist.  You can also hit Enter to bring up
the popup on the Active Play Queue. This does not work on the playlists
above, as Enter is obviously bound to checking/unchecking the boxes. Any
number (ie. keypad on remote) will also bring up the menu in both cases.

Q: How do I enter the playlist name in the text field without a keyboard?
A: Use the keypad number keys (bound to your remote) to select letters
quasi-cell phone style. Keys 2-9 work pretty much like any cell phone text
entry. 1 cycles through a few special characters, delete, and space. 0 is
like a CAPS LOCK. Hard to describe, fairly easy to use. You will soon be
able to specify the cycle timing in a Setup screen. You can type fairly
quickly through a combination of jumping around the number keys AND hitting
a non-number key (right arrow is particularly good for this) to force the
current character.

Q: How do I edit a playlist? 
A: Highlight the playlist in the selection tree and hit the "i" key then
select "Move to Active Play Queue" in the popup.  You can now modify the
"Active Play Queue" like normal, adding songs and playlists by selecting
them from the song tree.  When you are done, highlight the "Active Play
Queue" in the selection tree and hit the "i" key then select "Save Back to
Playlist Tree".  And whatever you were editing as your Active Queue before
you moved an existing playlist "on top" of Active reappears. Think of Active
has having a push on, pop off capability, but with a depth of only 1.

Q: How do I delete an item from a playlist?
A: Highlight the item in the selection tree and hit the "d" key.

Q: How do I rearrange the songs in my playlist?
A: Highlight a song and hit the "space" bar, the song will now have pair of
red arrows in front of it.  Use the up and down arrow keys to move it around
in the playlist.  When you have it where you want it, hit the "space" bar
again.

Q: How do I delete a playlist?
A: Highlight the playlist in the selection tree and hit the "i" key then
select "Delete this Playlist" from the popup.

<sect1>Troubleshooting MythMusic.
<p>You may run into errors when running MythMusic.
<sect2>When I run MythMusic and try and look up a CD, I get an error message 
<p>The full text of the message will say: 

databasebox.o: Couldn't find your CD. It may not be in the freedb database. 
More likely, however, is that you need to delete ~/.cddb and ~/.cdserverrc
and restart mythmusic. Have a nice day.

If you get this message, you should go to the home directory of whatever
user MythMusic is running as and type:
<tscreen><verb>
rm .cdserverrc
rm -rf .cddb/
</verb></tscreen>

These files aren't automatically deleted because of a conscious design
decision by the author that programs that automatically delete things are
bad.

The files are used to locally cache CD lookups. If you are re-inserting
CDs, your machine will not actually have to go out to the Internet to
determine what is on them.  However, the URL used to access the freedb
database has recently changed, so the stale information in the files from
previous runs of MythMusic would cause the error above.  Once the files have
been deleted the stale information will be gone and your local database
will be rebuilt as you use CDs.

<sect>MythWeather.
<p>The MythWeather module will obtain the weather information for the
location that you specify.  You must be running MythTV v0.10 or later 
in order to use MythWeather.

<code>
NOTE for Red Hat Linux 8.0 users: Red Hat 8 users must make the following
modification, or several weather icons will fail to be installed.

From the mythweather build directory move to the mythweather sub-directory
and edit the Makefile there.

Find and comment out (using a '#' symbol) the following line:

strip "$(INSTALL_ROOT)/usr/local/share/mythtv/mythweather/images/"
</code>

Change into the MythWeather directory, then make and make install:
<tscreen><verb>
$ cd mythweather
$ qmake mythweather.pro
$ make
$ su
# make install
# exit
</verb></tscreen>

MythWeather uses MSNBC.com as its source for weather data and weather.com
for its radar image.

These are the keyboard commands for MythWeather:
<tscreen><verb>
Left Key             Goes back one page, and extends the time spent
                     on the page you are on.
Right Key            Goes forward one page, see above.
Space                Pause, wait on the current page until space is hit
                     again.
Numeric Keys         You can check other weather by keying in other ZIP codes.
Enter Key            Switch between Celsius and Fahrenheit. Can also
                     be used a way to force a data update.
"m" Key              Resets the location to the database default, then updates the data.
"i"                  Enter / Save settings
ESC                  Exit the settings screen without saving / Exit the program
</verb></tscreen>

MythWeather also has an "Aggressiveness" setting.  This affects how long
MythWeather waits for data from the msnbc.com website before timing out.  If
you are on a slow connection, or have a slow DNS, or MythWeather just
doesn't seem to be working and you've already tried everything else, then
try increasing the aggressiveness level parameter.  This parameter is
inverse; a higher number actually means that MythWeather will be less
aggressive, and will therefore wait longer before timing out.

MythWeather will print debugging information on the terminal.  If you wish
to see additional debugging information while MythWeather is running, run
mythweather from the command line with as <tt>mythweather --debug</tt>

You may also force mythweather to re-run the configuration by starting it on
the command line as <tt>mythweather --configure</tt>.  These two options are
mutually exclusive.

<sect>MythVideo.
<p>The MythVideo application will allow you to use an external program to
watch media files that are not directly supported by MythTV.

Change into the MythVideo directory, then make and make install:
<tscreen><verb>
$ cd mythvideo
$ qmake mythvideo.pro
$ make
$ su
# make install
# exit
</verb></tscreen>

The next step is to create the create the videometadata table in the
database.  Simply do the following:
<tscreen><verb>
$ cd videodb
$ mysql -u mythtv -p < metadata.sql
</verb></tscreen>

See MythVideo's <tt>README</tt> file for additional information.

<sect>MythDVD.
<p>MythDVD is an application which rips DVDs and makes them available for
use with MythVideo.  You may also transcode the DVD content from MPEG-2 to
other formats which should greatly reduce the amount of space the DVD
material takes up on your hard drive.

MythDVD has a number of prerequisites to enable transcoding functionality. 
If you only wish to play DVDs rather than convert them to something like
MPEG-4 or xvid you may skip the prerequisite installation step.

<sect1>Manual Compilation of Prerequisites.
<p>
<sect1>Pre-compiled binaries.
<p>Mandrake users may install the prerequisites this way:
<tscreen><verb>
# urpmi libdvdread3 libdvdread3-devel a52dec liba52dec-devel 
# urpmi mplayer ogle xine
</verb></tscreen>
Assuming that you've added a PLF mirror, you may also load the rest of the
prerequsites using the following command:
<tscreen><verb>
# urpmi xvid xvid-devel fame libfame0.9-devel transcode libdvdcss
</verb></tscreen>

Next comes the configuration and compilation.  If you don't want to
transcode, then the first command in the next example can simply be
<tt>./configure</tt>
<tscreen><verb>
$ ./configure --enable-transcode
$ qmake mythdvd.pro
$ make
$ su
# make install
</verb></tscreen>
Once that's done, ensure that you've added the appropriate table structures
to the database:
<tscreen><verb>
$ cd dvddb
$ mysql -u root < metadata.sql
</verb></tscreen>

<sect>Troubleshooting.
<sect1>Illegal Instruction.
<p>This error can happen for the following reasons:
<itemize>
<item>You have an AMD K6-2 or VIA C3 processor.  If you have either of
these, make sure that you you followed the instructions in this <ref id="nonintelcpu_"
name="section">.
<item>You have an early production Intel Celeron, Pentium Pro or Pentium II.  If you have any
of these processors, make sure that your <ref id="deinterlace_" name="deinterlace">
variable is set correctly.  Your CPU needs to support SSE instructions for
deinterlace support.  You may check this by doing a <tt>$ cat
/proc/cpuinfo</tt> and looking for "sse" in the processor flags section.
</itemize>
<sect1>mythfilldatabase failing.
<p>If mythfilldatabase suddenly appears to be failing, check to see what version of
XMLTV you're running.  Versions prior to 0.5.4 need to have the following
change made: edit the
<tt>/usr/lib/perl5/site_perl/5.8.0/XMLTV/ZapListings.pm</tt> file and
perform a global search and replace, searching for "tvlistings2" and
replacing it with "tvlistings".
<bf>NOTE</bf>:  It is highly recommended to run the latest version of XMLTV
available.  In North America, zap2it, the listings provider, has been
making numerous changes to their website which negatively impact XMLTV.
<sect1>MythTV seems to disappear; can't see video.
<p>If you're using Gnome as your window manager, try switching to KDE.  For
Red Hat Linux 8.0 users, edit <tt>/etc/sysconfig/desktop</tt> and
change "GNOME" to "KDE".
<sect1>Fast CPU, choppy or jittery video. <label id="Setting_DMA">
<p>First, you should check that your kernel has been enabled for DMA:
<tscreen><verb>
[mythtv@pvr mythtv]$ dmesg |grep DMA
    ide0: BM-DMA at 0xd800-0xd807, BIOS settings: hda:DMA, hdb:DMA
    ide1: BM-DMA at 0xd808-0xd80f, BIOS settings: hdc:DMA, hdd:pio
hda: 156301488 sectors (80026 MB) w/2048KiB Cache, CHS=9729/255/63, UDMA(33)
hdb: 80043264 sectors (40982 MB) w/2048KiB Cache, CHS=4982/255/63, UDMA(33)
</verb></tscreen>

From the listing above, you can see that hda, hdb and hdc are set for DMA,
and hdd is set for pio.  If your kernel is not reporting DMA being enabled,
you may need to recompile your kernel. Check your motherboard's chipset
(look in the "ATA/IDE/MFM/RLL support" section in "make menuconfig") for more
information.

Next, check that the hard drive has DMA enabled.  Use the <bf>hdparm</bf>
program to check and enable DMA.
<tscreen><verb>
# hdparm -d /dev/hd?
</verb></tscreen> will tell you the DMA status for your hard drives.  If you run
<bf>hdparm</bf> with the <tt>-d1</tt> parameter, it will turn DMA on.

<!-- Next section adopted from a post by Dwaine Garden
dwainegarden@rogers.com to the mailing list. -->

You may also setup your PC to do this at boot time, either by adding the
command to your <tt>/etc/rc.local</tt> file, or by adding files to
/etc/sysconfig.

On Mandrake and other distributions, if you install <bf>hdparm</bf> from an RPM you
will most likely get a <tt>/etc/sysconfig/harddisks</tt> file installed. 
This file will be parsed by the <tt>/etc/rc.sysinit</tt> script.  If you use
the default <tt>harddisks</tt> file, your changes will affect all IDE devices
(including CD ROMs).  If you wish to use different parameters for various
devices, rename and/or copy the file to <tt>harddiskhda</tt>,
<tt>harddiskhdb</tt>, etc.  Edit the file to your liking and on the next
reboot your setting will be preserved.

<sect1>I keep losing all of my settings every time I compile!
<p>MythTV will overwrite any settings in <tt>/usr/local/share/mythtv</tt>.
If you want to make sure that you don't lose your modifications, make a
directory <tt>~/.mythtv</tt> and copy your mysql.txt file to this
location.
<sect1>Compile errors.
<p>Some compile errors are worse than others.  If you get an error that
doesn't abort the compilation, and says something like:
<tscreen><verb>
cc1plus: warning: changing search order for system directory
"/usr/local/include"
cc1plus: warning:   as it has already been specified as a non-system
directory
</verb></tscreen>
then it shouldn't be a problem.

If you get an error like <tt>/usr/bin/ld: cannot find -lXext</tt>, the
compiler is telling you that you don't have XFree86-devel installed, or that
your distribution hasn't set it up <ref id="RH_XFree86-devel"
name="correctly">.  This needs to be fixed before MythTV will compile.

<sect1>My screen goes blank, but comes back when I wiggle the mouse or use the keyboard.
<p>This is due to DPMS, the Display Power Management System, which is used
to save power by turning off your monitor when the system decides that it's
not being used or to a screensaver that has defaulted to a blank screen. 
Since it's likely that watching TV will not generate keyboard or mouse
events for a time, you need to turn off DPMS and the screensaver.  There are a few ways to do
this.  You may also need to check your BIOS for power saving modes and
disable screen blanking there as well.

Edit your <tt>/etc/X11/XF86Config-4</tt> file, and look for:
<tscreen><verb>
Section "ServerFlags"
    #DontZap # disable <Crtl><Alt><BS> (server abort)
    #DontZoom # disable <Crtl><Alt><KP_+>/<KP_-> (resolution switching)
    AllowMouseOpenFail # allows the server to start up even if the mouse doesn't work
EndSection
</verb></tscreen>

Add <tt>Option "NoPM" "true"</tt> and <tt>Option "BlankTime" "0"</tt>to the ServerFlags section.

Also, look for:
<tscreen><verb>
Section "Device"
    Identifier "device1"
    VendorName "nVidia Corporation"
    BoardName "NVIDIA GeForce 256 (generic)"
    Driver "nv"
    Option "DPMS"
EndSection
</verb></tscreen>

In this case, you would need to either delete the <tt>Option "DPMS"</tt>
line, or change it to <tt># Option "DPMS"</tt> to comment it out.  The next
time you start XFree this change will take effect.

Finally, check:
<tscreen><verb>
Section "Monitor"
    Identifier "monitor1"
    VendorName "Plug'n Play"
    HorizSync 30-85
    VertRefresh 50-160

    # Sony Vaio C1(X,XS,VE,VN)?
    # 1024x480 @ 85.6 Hz, 48 kHz hsync
    ModeLine "1024x480"    65.00 1024 1032 1176 1344   480  488  494  563 -hsync -vsync

    # TV fullscreen mode or DVD fullscreen output.
    # 768x576 @ 79 Hz, 50 kHz hsync
    ModeLine "768x576"     50.00  768  832  846 1000   576  590  595  630

    # 768x576 @ 100 Hz, 61.6 kHz hsync
    ModeLine "768x576"     63.07  768  800  960 1024   576  578  590  616
EndSection
</verb></tscreen>

Ensure that there isn't an <tt>Option "DPMS"</tt> in the Monitor
configuration.

You can also turn off DPMS from the Command Line, but this will not survive
a reboot.
<tscreen><verb>
$ xset -dpms
</verb></tscreen>

Using <tt>xset +dpms</tt> will turn it back on.

Another technique to try, which will turn off the screensaver:
<tscreen><verb>
$ xset s off
</verb></tscreen>

You may also combine the command to turn off DPMS and the screensaver:
<tscreen><verb>
$ xset -dpms s off
</verb></tscreen>

Finally, depending on your distribution, you may be able to turn it off from
within the control panel.

<sect1>I get segfaults / MythTV isn't doing anything.
<sect1>Debugging with GDB.
<p>Without details, the developers will not be able to determine if you have
discovered a genuine code-bug,  or if the problem is with your system.  In
order to determine what's going on, you must recompile MythTV with debugging
support and run MythTV within <bf>gdb</bf>, the GNU debugger.

Edit the settings.pro file.  Make sure that the top of the file looks like this:
<tscreen><verb>
$ cat settings.pro
CONFIG += debug
#CONFIG += release
</verb></tscreen>

Now, you need to clear out the old versions of the software to ensure that
you're running with the debugging code, then compile and install.
<tscreen><verb>
$ make clean distclean
$ ./configure
$ make
$ su
# make install
# exit
</verb></tscreen>

At this point, you now have debug-enabled software ready.  Let's assume that
the problem you're having is in the <tt>setup</tt> program.
<tscreen><verb>
$ cd setup
$ gdb ./setup

GNU gdb 5.3-1mdk (Mandrake Linux)
Copyright 2002 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain
conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "i586-mandrake-linux-gnu"...
(gdb) handle SIGPIPE nostop
Signal        Stop      Print   Pass to program Description
SIGPIPE       No        Yes     Yes             Broken pipe
</verb></tscreen>

<bf>gdb</bf> has a number of options, read the <tt>man</tt> page for more
information.

Once at the <tt>(gdb)</tt> prompt, type <tt>run</tt> to start program
execution.  When the program segfaults or appears to lock-up (press CTRL-C),
type 
<tscreen><verb>(gdb) thread apply all bt full
</verb></tscreen>

The backtrace information for all the threads should be posted to the
mythtv-dev mailing list, along with the steps you followed to get the
program to crash.

If you're trying to troubleshoot and you can't get back to the gdb window
for some reason, it may be easier to use two systems or to start
mythfrontend from the text console.

If you're going to troubleshoot from a remote system, connect to the machine
that you're going to test using <bf/ssh</> or <bf/telnet</>. Next, type
<tt>$ export DISPLAY=localhost:0.0</tt>.  This will allow the graphics to be
displayed on the X console (usually ALT-F6 or ALT-F7) and still give you
output and control of <bf/mythfrontend</>, either from the <bf/ssh</>
session, or by switching back to the text console by pressing CTRL-ALT-F1. 
You can now continue troubleshooting using <bf/gdb</> as detailed in the
instructions.

<sect1>MythTV makes my system crash. 
<p>MythTV <em>can not</em> crash your system - it is a user-level program. 
If your system is crashing when you run MythTV, then you have some
issue with the drivers for your capture card or other hardware, or the CPU
fan has fallen off/broken and your system is overheating when asked to
perform a CPU intensive task like encoding video.

<sect1>Troubleshooting audio. <label id="Troubleshooting_Audio">
<p>By Bruce Markey, <url url="mailto:bjm@lvcm.com"
name="mailto:bjm@lvcm.com">
<bf>NOTE</bf>:  the following instructions do not apply to PVR-250/350
encoders; the MPEG-2 file will have the audio embedded in the stream so it
is not accessible using <tt>/dev/dsp</tt>.  See <ref
id="troubleshooting_pvraudio" name="this"> in the PVR-250 <ref id="pvr250"
name="section"> for more information.

Audio appears to be one of the bigger issues that users run into on the
mailing list.  If the audio isn't configured correctly, then MythTV will
often appear to hang, when in fact it is trying to manipulate the audio
subsystem and failing.  You may or may not receive error messages indicating
that the source of the error is the audio subsystem.

You can not use <bf>xawtv</bf> to determine if your audio is working
correctly, since <bf>xawtv</bf> is simply using the the analog sound patched
through line-in to line-out. It doesn't need to digitize the sound unless
you are using the recording function.

A better test to verify that sound will work for MythTV (and recording with
<bf>xawtv</bf> for that matter) is to startup <bf>xawtv</bf>, mute the
line-in then run <tt>aplay /dev/dsp</tt>. You should hear the recorded audio
slightly delayed behind the realtime video.  Once this test succeeds, MythTV
should work correctly because it writes to and read from /dev/dsp in
the same way that <bf>aplay</bf> does.

To record audio along with video the audio signal must be digitized by a DSP
so that the audio data can be stored in a file. On playback, the audio data
is written to /dev/dsp and converted back to an analog signal. This analog
signal should then be sent to your speakers. Here is what is needed in
alsamixer:

CAPTUR source - the analog source to be sent to the DSP. This should be set
to the input source from the tuner card to the sound card. In most cases
this is Line but this could also be Aux, CD, Mic, etc., depending on how you
connect the input cable. This source should be muted to prevent patching
through the analog sound. The volume of this source will not affect the
record level.

Capture mixer - this sets the level for the analog to digital recording.
While a volume of 100% is recommended for testing, distortion may occur.
Lowering this level to 75% to 85% may result in better audio quality.
"Capture" should be marked as the CAPTUR destination.

PCM mixer - this sets the level for the digital to analog playback. While a
volume of 100% is recommended for testing, distortion may occur. Lowering
this level to 75% to 85% may result in better audio quality.

Master mixer - sets the level for the analog signal sent to line-out or the
speakers.

You may also want to ensure that <tt>/dev/dsp</tt> hasn't already been
grabbed by another process, like <bf>esd</bf> or <bf>artsd</bf>.  If
<tt>/dev/dsp</tt> isn't available, then MythTV won't work.  Check your
window manager documentation for instructions on disabling the sound manager.
If you wish to see what application is grabbing a resource, you can use the
<tt>fuser</tt> command:
<tscreen><verb>
# fuser -v /dev/dsp
</verb></tscreen>

To disable aRts in KDE, go to KDE->Control Center->Sound->Sound System and
uncheck the "Start aRts soundserver on KDE startup" box.  Run <tt># killall
artsd</tt> from the command line to stop the artsd program.

If you're using multiple sound cards and multiple tuners, use <tt>alsamixer
-c 1</tt> to work with the second sound card.  The first card is #0, the
second card is #1, etc.

<sect1>I can't see parts of the On Screen Display.
<p>If you're a Red Hat 8.0 user, make sure that you've followed the
instructions which tell you how to modify the Themes makefile. <ref id="RH80_OSD_Strip"
name="Link">.

<sect1>The mythbackend program told me to look at this section.
<p>mythbackend does a check to see if your sound device is capable of full
duplex operation.  If it's not, it's most likely that you're going to run
into issues when you try to record and play sound at the same time.  If your
backend is a separate machine than your frontend, then there's no problem,
since you're only going to be doing one thing at a time with the card. 
Likewise, if you're running the frontend and backend on the same machine,
but you're using btaudio as your recording source, and using the playback
function of your soundcard, then you also shouldn't have an issue, since the
sound card isn't being asked to perform two functions at once.

If you can't get your soundcard to go full duplex and need it to, then check
your distribution for updated sound drivers.  If your soundcard is not
capable of full-duplex operation, either because the drivers don't support
it, or it has been designed that way, then you're pretty much out of luck
and will either need to purchase a new sound card, or will need to get
btaudio <ref id="btaudio" name="operational">.

<sect1>My remote doesn't work / works sometimes and not others / "ghost"
keypresses.
<p>This can be due to a number of factors.  The simplest case is the
"ghost" keypresses.  For me, it was due to compact fluorescent lights in
the same room as the IR receiver, which the receiver was picking up as
keypresses.  Once the lights were switched to incandescent bulbs, the ghost
went away.

You may have an issue with <bf>lirc</bf> misinterpreting IR commands from a
different remote.  I also have an issue where the Tivo "Peanut" remote will
eventually cause <bf>lircd</bf> to stop responding; even though <bf>lircd</bf>
is configured for the Pinnacle Systems remote, the Tivo remote IR patterns
are being seen by the IR receiver.

If your remote has been properly configured, and <bf>irw</bf> and
<bf>irxevent</bf> are working correctly, then it's highly likely that your
window manager is not giving focus correctly to the various Myth programs as
they run.  The following window managers are known to work correctly:

<itemize>
<item>fvwm
<item>blackbox  (using "Sloppy Focus" and "Focus New Windows")
</itemize>

<sect1>My PVR-250 card doesn't show inputs in the setup screen.
<p>See message <url url=
"http://lists.snowman.net/pipermail/mythtv-users/2003-April/002527.html"
name="http://lists.snowman.net/pipermail/mythtv-users/2003-April/002527.html">

<sect1>Where's my "canada-cable" entry gone to?
<sect1>My channels are off by one.
<p>There is no such thing as "Canada Cable"; Canada uses the same
frequencies as the United States.  "Canada Cable" was a hack that some
people used when they would discover that their channels were off-by-one,
ie, when tuning to channel 42, they might get channel 41 or 43.  This is
actually due to the tuner on the video capture device being mis-detected. 
You must manually specify the tuner type in your <tt>/etc/modules.conf</tt>. 
See the video4linux mailing list (<url
url="https://listman.redhat.com/mailman/listinfo/video4linux-list"
name="https://listman.redhat.com/mailman/listinfo/video4linux-list">) for
more information.

<sect1>Mythweb is showing a db_open error when I connect to it.
<!-- Fix by Chris Ripp [chris@ripp.net] post to mailing list -->
<p>Find your php.ini file. Make sure you've got a line in it like this:

<tt>extension=mysql.so</tt>

Restart apache for it to take effect.

<sect1>error: can't find a register in class 'BREG' while reloading 'asm'
<p>This is due to the broken Qt that is being distributed by Suse.  To work
around this, edit <tt>libs/libavcodec/Makefile</tt> and remove any
"-fPIC" you find there and then recompile.

<sect1>make: *** No rule to make target /usr/lib/qt3/mkspecs/default/qmake.conf', needed by Makefile'.  Stop.
<label id="mkspecs_error">
<p>This error happens when there's a missing link in the
<tt>/usr/lib/qt3/mkspecs</tt> directory.  There are two ways to fix this
error:

1.  Create the link manually:
<tscreen><verb>
$ su
# cd /usr/lib/qt3/mkspecs
# ln -sf linux-g++ default
</verb></tscreen>
and then restart the compile,

or

2.  Run <bf>qmake mythtv.pro</bf> in the mythtv directory.  Rerunning
<bf>qmake</bf> will create a new Makefile for you, however this still
doesn't fix the root cause of the issue, which is that your distribution
didn't create the symlink for you when the qt3 package was installed.  The
first choice is the better solution.

<sect1>make: *** No rule to make target /mkspecs/default/qmake.conf', needed by Makefile'.  Stop.
<p>You didn't set your <tt>QTDIR</tt>.  Re-read the section on <ref
id="Setting_up_paths" name="Setting up paths">.

<sect1>My mouse pointer disappears when placed over the MythTV windows.
<p>This is the intended behavior.  The MythTV interface is meant for use
with a remote control or a keyboard.

<sect1>What does "strange error flushing buffer" mean on my console?
<p>Nothing, really.  It's just lame (the mp3 encoder) complaining for some
obscure reason.  This seems to be fixed in more recent versions of the
libmp3lame library.

<sect1>I can't change the channel when watching Live TV.
<p>Something's wrong with your program database.  Did mythfilldatabase run
with no major errors?

<sect1>Colors are wrong, people have blue faces.
<p>If you are using the binary nVidia drivers, make sure you're using at
least version 1.0-2960.

<sect1>When trying to run setup, I get an error like this: "./setup: error while loading shared libraries:"
<p>You didn't add <tt>/usr/local/lib</tt> to <tt>/etc/ld.so.conf</tt>.  See the
section on modifying <ref id="modifying_ld.so.conf" name="/etc/ld.so.conf">.


<sect>Miscellaneous. 
<sect1>I'd like to watch the files without using MythTV / I'd like to convert the files to some other format. 
<p>Matthew Zimmerman has created a patch for MPlayer / Mencoder <url
url="http://www.mplayerhq.hu" name="http://www.mplayerhq.hu"> that allows
you view the files created by MythTV.  MythTV doesn't use standard
Nupplevideo files, which is why you MPlayer complains if you try to view
them.

<bf>NOTE</bf>:  If you're using a hardware MPEG2 encoder like the
PVR-250/350 you don't need to convert - the files are actually standard
MPEG2 with a <tt>.nuv</tt> extension.  Change it to <tt>.mpg</tt> and the
files should display properly in other media players.

Download the patch to MPlayer from Matt's website. 
<url url="http://dijkstra.csh.rit.edu/~mdz/mythtv/"
name="http://dijkstra.csh.rit.edu/~mdz/mythtv/">.
<tscreen><verb>
$ wget http://dijkstra.csh.rit.edu/~mdz/mythtv/mplayer-0.90rc5-mythtv-20030407.diff
</verb></tscreen>

Download the source to MPlayer and patch:
<tscreen><verb>
$ wget http://ftp.lug.udel.edu/MPlayer/releases/MPlayer-0.90.tar.bz2
$ tar -xjf MPlayer-0.90.tar.bz2
$ cp mplayer-0.90rc5-mythtv-20030407.diff MPlayer-0.90
$ cd MPlayer-0.90
$ patch -p1 < mplayer-0.90rc5-mythtv-20030407.diff
</verb></tscreen>

At this point, you can read the MPlayer documentation and start the compile
process.

<sect1>I'd like to use some other window manager.
<p>MythTV is not dependent on any particular window manager.  If you wish to
run a lightweight window manager, the <tt>configfiles/</tt> directory has an
example of a <tt>.twmrc</tt> and <tt>.fvwmrc</tt> file you may use.

<sect1>I'd like MythTV to automatically startup.
<p>Here's an example submitted to the mythtv-dev list by Pat Pflaum
<url url="mailto:pat@netburp.com" name="mailto:pat@netburp.com"> using fvwm:
<tscreen><verb>
$ cat > .xinitrc
fvwm &
mythfrontend
^D
$ cat > .fvwmrc
Style myth* NoTitle, NoHandles, Sticky, WindowListSkip, SloppyFocus, GrabFocus, BorderWidth 0
^D
$
</verb></tscreen>

The following also works with blackbox:
<tscreen><verb>
$ cat > .xinitrc
xset -dpms s off &
irxevent &
mythfrontend &
blackbox
</verb></tscreen>

Make sure that your <tt>.blackboxrc</tt> file has:
<tscreen><verb>
session.screen0.focusNewWindows:        True
session.screen0.focusModel:     SloppyFocus
</verb></tscreen> in it.

<sect1>What capture resolution should I use?  How does video work?
<label id="capture_resolution_">
<!-- Lots of the following is from a Bruce Markey mailto:bjm@lvcm.com post
to the mailing list, 2003-01-21. -->
<p>While MythTV allows you to set various GUI and capture resolutions, not
all combinations make sense.

First, analog video signals have a defined vertical resolution.  In NTSC,
the video standard specifies that there are 525 vertical scan lines.  Once
the "extra" lines are removed (they're used to synchronize the video signal,
and encode closed captioning data), you have 480 vertical lines.

In PAL, there are 625 "raw" lines of resolution, with a net of 576 vertical
lines.

Horizontally, the maximum you can expect from a Bt8X8 chip is 720.

With this in mind, there are certain commonly accepted values for
resolution.  While other values may be accepted, they will cause scan lines
to be repeated or dropped.

From "best" to "worst", in NTSC:
<itemize>
<item>720x480 (but more commonly, 704x480.  "DVD" resolution)
<item>640x480 4:3
<item>544x480 (TiVo high resolution)
<item>480x480 (Video CD resolution)
<item>352x480 (ReplayTV "Standard" quality)
<item>320x480 
<item>544x240
<item>480x240 
<item>352x240 
<item>320x240
</itemize>

As you can see, the lower quality values are half of the better ones. 
720x240 is possible, but isn't a good tradeoff relative to the number of
vertical lines lost.  In a PAL country, the you would use values like
720x576 or x288.

The higher resolutions will be more CPU intensive. If the CPU is overtaxed,
frames will be dropped causing uneven motion. You will likely see the best
results at resolutions which average at least 10% CPU idle time.  You can
use system tools such as <tt>top</tt> or <tt>sar</tt> to check the CPU %
idle while recording.  If the CPU average usage is consistently exceeding
90%, frames will need to be dropped during peak times when more than 100% of
the available CPU would be needed to process all of the frames.

If you'd like to read more on this, go to the vcdhelp website at <url
url="http://www.vcdhelp.com/forum/userguides/94382.php"
name="http://www.vcdhelp.com/forum/userguides/94382.php">.

<sect1>MythTV GUI and X Display Sizes.
<p>MythTV is designed to be run as dedicated full screen TV application
but can also be run as a desktop application on a computer
monitor. Here are a few consideration for configuring sizes to best
suit you needs.

There are three sizes that are important for matching the MythTV GUI and
full screen TV playback to fit the screen:

<itemize>
<item>the X display size
<item>the X Desktop (virtual) dimensions
<item>the MythTV GUI dimensions
</itemize>

The MythTV GUI uses its GUI dimensions regardless of the other two and is
anchored to the upper left corner of the X Desktop.

The MythTV full screen mode uses the X display size dimensions regardless of
the other two and is anchored to the upper left corner of the X display.

<sect2>X Dimensions
<p>For output to a Television, common resolutions are 640x480, 800x600, and
some rare devices support 1024x768. Generally, higher resolutions are
better. However, you may find that you prefer the picture quality at one of
the lower resolutions. Everything in MythTV is scalable and should 'fit'
regardless of the resolution you choose.

Edit your X configuration file, usually "XF86Config-4", so that the the
resolution you want to use is listed first in the lists under "Screen". If
this resolution is higher than the resolutions supported by your output
device, you will see a 'panning' effect where moving the mouse to the edge
will scroll around a desktop area which is larger than the display size. If
this happens, edit your X configuration file to match the display size then
restart X.

<sect2>MythTV Dimensions
<p>In 0.10 and later, from "mythfrontend" go to Setup->Appearance.
The default for the height and width is "0" - this will cause
MythTV to automatically size itself to full screen. To ensure that
your new dimension settings take effect, exit and restart MythTV.

<bf>NOTE</bf>: When the GUI is full screen, you may need to set your window
manager to 'Click to Focus' for windows to stack properly.

The fonts for the GUI and OSD will scale to whatever sizes you use. Most
font sizes can be changed in setup selections. Make sure to use fonts large
enough to be read on a TV screen from a distance.

The full screen TV size is based on the X display size. For Xinerama, you
can specify a screen in Setup->General. The picture will be stretched to fit
the entire screen regardless of the <ref id="capture_resolution_"
name="capture resolutions"> used.

<sect2>Overscan Dimensions
<p>Because picture edges can be ragged and screen edges aren't straight,
Television is designed to project an image larger than the physical screen.
This is called "overscan". Underscan is fitting the entire image inside the
screen. This is useful for computer monitors so that toolbars and scrollbars
at the edges can be seen.

For best results, match the X display area as close as possible to the edges
of the physical screen. This can only be adjusted by your tv-out device or
by the settings for the television set. Many sets have these adjustments in
a 'service mode'.

MythTV has settings for "Overscan" in Setup->Playback. These can not, and do
not, cause the image to display beyond the edge of the X display area. The
purpose of these settings are to cut off rough edges and to expand the image
so that objects will appear to be the same size as a normal overscanned TV
picture.

<sect2>MythTV on the Desktop
<p>When using MythTV on a high resolution desktop monitor, set the MythTV
GUI dimensions to something much smaller than your X display resolution but
still large enough to read the fonts. The GUI screens will always be in the
upper left hand corner. However, your window manager may be able to minimize
these (ALT-F4 in KDE for example).

The TV picture will start in full screen mode. Press "f" to put the picture
in a window that can be moved and resized. By default, the picture uses the
recording resolution for its dimensions. If you check the box "Fixed
Aspect Ratio" in Setup->Playback, the windowed picture will always be
resized to normal 4:3 shape.

<sect1>I'd like to save or restore my database.
<p>See the <bf>mysqldump</bf> manpage for more information.
<tscreen><verb>
$ mysqldump -u mythtv -pmythtv mythconverg > mythtv_backup.sql
</verb></tscreen>

To restore: (assuming that you've dropped the database)
<tscreen><verb>
$ mysql -u root
mysql>create database mythconverg;
mysql>exit
$ mysql -u mythtv -pmythtv mythconverg < mythtv_backup.sql
</verb></tscreen>

You may need to alter the mysql permissions if this database is being shared
with multiple systems.  See the <ref id="modify_perm_mysql" name="Modifying
access to the MySQL database for multiple systems"> section for more
information.

<sect1>I'd like to delete the mysql database.
<p><bf>NOTE</bf>:  Performing this step will remove the entire database. 
You will lose all of your settings and will need to re-run the mc.sql script
to setup the database structure before running the setup program.
<tscreen><verb>
$ mysql -u root
mysql> drop database mythconverg;
mysql> quit
</verb></tscreen>

<sect1>btaudio <label id="btaudio">
<p>btaudio allows you to obtain the audio data from your tuner card directly
over the PCI bus without using a soundcard.  This is useful if you would
like to use multiple tuner cards in a system without adding a soundcard for
each one, or if your existing soundcard is not capable of full-duplex
operation.

In order to use btaudio, your tuner card will need certain hardware
installed on it, and that hardware must be wired correctly.  The chip that
will allow you to use the btaudio module is the MSP34xx.  However, having a
MSP34xx is no guarantee that you will be able to use the btaudio module.

As of 2003-03-31, this is the current list of cards and their status:
Works with btaudio:

<itemize>
<item>Hauppauge WinTV-radio with dbx-TV stereo, model 401
<item>Hauppauge WinTV-Theater, model 495, 498 (Europe)
<item>ATI TV Wonder
</itemize>

The following cards do not work:
<itemize>
<item>Pinnacle Studio PCTV Pro - note: this has a MSP34xx, but it's not
wired correctly to the BT878 chip.
<item>ATI TV Wonder VE
<item>Leadtek Winfast 2000 XP (PAL, UK and NTSC)
<item>I/O Magic PC-PVR.  No MSP34xx chip.
</itemize>

The following cards have been reported to work, but have issues:
<itemize>
<item>Avermedia AVerTV Studio (no digital DSP output, "whiney noise" on
analog)
</itemize>

See <tt>contrib/example.modules.conf.for.btaudio</tt> for an example file on
how to configure btaudio on your system.

Once btaudio loads, it should register additional <tt>/dev/dsp</tt> and
<tt>/dev/mixer</tt> devices.  Typing <tt>$ dmesg</tt> will let you know
what's going on.

<sect1>Removing unwanted channels.
<p>If <bf>mythfilldatabase</bf> grabbed a channel which you do not want to
include in your TV listings, you can remove the entries from the xmltv
config file and the mysql database.  This often happens with premium
channels; for example, HBO or Showtime may be available on your cable TV
system, but is scrambled because you're not a subscriber to that channel. 
Since you can never watch it, you want to get rid of it.

First, comment out the channel from the ~/.mythtv/&lt;sourcename&gt;.xmltv file by
inserting a "#" in front of the unwanted entry. This will prevent
<bf>mythfilldatabase</bf> from grabbing future listings.

Next, delete the unwanted item from the channel table so that it will not
appear in the EPG or when changing channels.  The channels will always have
"1000" added to them, so for example, assuming that HBO is channel 15:
<tscreen><verb>
$ mysql -u root mythconverg
mysql> delete from channel where chanid = '1015';
</verb></tscreen>

Old program data will be removed over the course of a week. However, you may
want to immediately delete any current program listings for the channel that
has been removed:
<tscreen><verb>
$ mysql -u root mythconverg
mysql> delete from program where chanid = '1015';
</verb></tscreen>

<label id="pvr250">
<sect1>I'd like to use a hardware MPEG-2 encoder (ie, a PVR-250/350).
<p><bf>NOTE</bf>:  THE FOLLOWING DOCUMENTATION IS PROVIDED AS-IS AND IS
NOT GUARANTEED TO WORK WITH YOUR DISTRIBUTION.  FOR IVTV DRIVER ASSISTANCE,
SEE THE IVTV MAILING LIST.  <url
url="https://lists.sourceforge.net/lists/listinfo/ivtv-devel"
name="https://lists.sourceforge.net/lists/listinfo/ivtv-devel">  SEE THE
IVTV FAQ IF YOU HAVE QUESTIONS OR ISSUES.  <url
url="http://ivtv.sourceforge.net/FAQ.html"
name="http://ivtv.sourceforge.net/FAQ.html">

These instructions work for Mandrake 9.1 on a backend machine which is
hosting a single PVR-250 capture card.

Install the Mandrake kernel source.  If you are using a different Mandrake
kernel level (ie, not 2.4.21-0.16mdk as in the example below, then alter the
<bf>urpmi</bf> command appropriately.)
<tscreen><verb>
$ uname -a
Linux pvr 2.4.21-0.16mdk #1 Fri Apr 11 06:51:54 CEST 2003 i686 unknown
unknown GNU/Linux

$ su
# urpmi kernel-source
</verb></tscreen>

<bf>NOTE</bf>:  You do not need to recompile your kernel.

Download the IVTV driver from CVS:
<tscreen><verb>
$ cvs -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/ivtv login
<enter> as password
$ cvs -z3 -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/ivtv co ivtv
</verb></tscreen>

This should create an ivtv directory.  Switch to it and perform the
following commands:
<tscreen><verb>
$ cd ivtv/ivtv/utils
$ wget http://hauppauge.lightpath.net/software/pvr250/pvr250_17_21199.exe
$ su
# ./ivtvfwextract.pl pvr250_17_21199.exe
# exit
</verb></tscreen>

The <bf>ivtvfwextract</bf> program extracts the firmware required for the
card.  You may want to go to the Hauppauge website and download the latest
Windows driver if the <bf>wget</bf> command fails.

Next, compile the driver:
<tscreen><verb>
$ cd ~/ivtv/ivtv/driver
$ make
</verb></tscreen>

<bf>NOTE</bf>: You may get warnings about i2c during the compile.  Ignore
them.

Add the following to <tt>/etc/modules.conf</tt>:
<tscreen><verb>
alias char-major-81     videodev
alias char-major-81-0   ivtv
options ivtv debug=1
options tuner type=2
options msp3400 once=1 simple=1
add below ivtv msp3400 saa7115 tuner
add above ivtv lirc_dev lirc_i2c
</verb></tscreen>

<bf>NOTE</bf>:  You must specify the tuner type manually.  See
<tt>~/ivtv/ivtv/driver/tuner.h</tt> for a listing of tuners.  In the above
example, <tt>tuner type=2</tt> is a Phillips NTSC.  Use an appropriate tuner
type for your system and video standard.  The <tt>debug=1</tt> parameter on
the ivtv line actually means less debugging output will be printed.

Next, copy the files that were compiled in the driver directory into the
appropriate modules directory:
<tscreen><verb>
$ su
# make install
# depmod -a
</verb></tscreen>

Finally, load the ivtv driver:
<tscreen><verb>
# modprobe ivtv
# exit
</verb></tscreen>

Check that the card is being recognized on the PCI bus:
<tscreen><verb>
$ lspci -v
<snip>

00:0c.0 Multimedia video controller: Internext Compression Inc iTVC15 MPEG-2
Encoder (rev 01)
        Subsystem: Hauppauge computer works Inc.: Unknown device 4801
        Flags: bus master, medium devsel, latency 32, IRQ 11
        Memory at d0000000 (32-bit, prefetchable) [size=64M]
        Capabilities: <available only to root>
</verb></tscreen>

If you don't see your card on the PCI bus, make sure that it's been
installed in a bus-master slot.  For some motherboards, only the PCI slots
closest to the AGP slot are bus-mastering.

Check that the ivtv driver has created a new video device:
<tscreen><verb>
$ ls -l /dev/v4l/vi*
crw-------    1 mythtv   sys       81, 224 Dec 31  1969 vbi0
crw-------    1 mythtv   sys       81,   0 Dec 31  1969 video0
crw-------    1 mythtv   sys       81,  32 Dec 31  1969 video32
</verb></tscreen>

In this case, the ivtv device is <tt>video0</tt>.

Go into <tt>setup/setup</tt> on the machine hosting the hardware MPEG-2 card.
When you add a new capture card, ensure that you are using the
<tt>video0</tt> device.  

<bf>NOTE</bf>:  As of 2003-04-25 the ivtv driver does not support VBI, so
closed-captioning is not available.

Leave the VBI device, audio device and audio sampling rate limit at the
default values.  Change the default input to an appropriate setting for your
configuration.  Change the card type to "Hardware MPEG Encoder Card" and
press ENTER.

The remaining setup is just like a standard V4L card; define a video source
if you have not already done so, and assign the video source to a video card
input on the Input Connections screen.

Some people report issues with the ivtv module not being loaded when
required by MythTV.  To get around this, you can <bf>modprobe</bf> the ivtv driver
before using it.  The simplest technique is to add the <bf>modprobe</bf>
command to <tt>/etc/rc.d/rc.local</tt>:
<tscreen><verb>
# echo "/sbin/modprobe ivtv" >> /etc/rc.d/rc.local
</verb></tscreen>

By default, the IVTV driver uses a 16Mbps peak rate with a 8Mbps VBR.  This
will create files at about 4GB/hour.  If you wish to adjust these
parameters, add something like the following to your <tt>rc.local</tt>:
<tscreen><verb>
/path/to/ivtv/utils/test_ioctl -c bitrate=4500000,bitrate_peak=6000000
</verb></tscreen>

The actual values to use should be adjusted to your liking and in part
depend on the capture resolution.  The above example is more than adequate
for 480x480.  Once the IVTV API has settled down MythTV will incorporate the
ability to modify the bitrate internally.

<label id="troubleshooting_pvraudio"><bf>NOTE</bf>:  some people complain
that their PVR-250/350 card is not capturing audio.  The most likely source
for this is that your system is not loading the correct msp3400.o file; ivtv
uses a custom msp3400.c, and if the resulting module isn't loaded you will
not get sound.  Switch to your <tt>/lib/modules</tt> directory and rename
the existing msp3400.o file, then copy the <tt>msp3400.o</tt> from the ivtv
driver directory and re-run <bf>depmod</bf>.  If that still doesn't work,
then check the ivtv mailing list for more information.  You may wish to
perform an <bf>updatedb</bf> as root and then do a <tt>locate msp3400</tt>
to find all the <tt>msp3400.o.gz</tt> files that may be on your system.  For
example, Mandrake has a <tt>msp3400.o.gz</tt> in the <tt>3rdparty</tt>
subdirectory which will take precedence over the custom version created by
ivtv.

<bf>NOTE</bf>:  Some people report "ghosting" issues with their PVR-250s,
where there is a faint copy of whatever is on the screen appearing to the
right of the image.  If you have this issue, it's fairly obvious.  This is a
firmware issue, apparently.  There are two ways around this:
<enum>
<item>Run at 720x480 resolution
<item>Turn off DNR
</enum>

To turn off DNR, add the following to your <tt>rc.local</tt>:
<tscreen><verb>
/path/to/ivtv/utils/test_ioctl --set-codec-params=dnr_mode=0,dnr_temporal=0
</verb></tscreen>

<sect1>I'd like to use NFS.
<p>You may want to use a central server to store your files.  

On the host machine, (in this case, the hostname is "masterbackend") you'll
want to edit your <tt>/etc/exports</tt> file and use something like:
<tscreen><verb>
/var/video (rw)
</verb></tscreen>

To export the <tt>/var/video</tt> directory with read / write privileges.

On the "slave" machine, you'll want to edit the <tt>/etc/fstab</tt> file and
add something like:
<tscreen><verb>
masterbackend:/var/video /var/video nfs rsize=8192,wsize=8192,soft,nfsvers=3
</verb></tscreen>

Then run <tt># fstab -a</tt> to re-read the file to mount the file system.

In this case, the source is a machine called "masterbackend" which is
exporting the directory "/var/video", which we're mounting locally at
"/var/video".  The rsize and wsize options are used to increase the
performance of NFS; soft mean that NFS will eventually timeout on an error,
and the nfsvers is required for filesizes over 2GB.

<label id="mythbackend_autostart">
<sect1>I'd like to automatically start mythbackend at system boot time.
<sect2>Red Hat And Mandrake
<p>Here's a method for automatically starting mythbackend submitted by Mike
Thomson (<url url="mailto:linux@m-thomson.net" name="mailto:linux@m-thomson.net">) and Stu Tomlinson (<url
url="mailto:stu@nosnilmot.com" name="mailto:stu@nosnilmot.com">).

Copy the files from the MythTV <tt>contrib</tt> directory or from Mike's web
site (<url url="http://m-thomson.net/mythtv/"
name="http://m-thomson.net/mythtv/">) as follows:

<tt>etc.rc.d.init.mythbackend</tt> should be made executable and copied to
<tt>/etc/rc.d/init.d/</tt>:
<tscreen><verb>
$ cd contrib
$ su
# chmod a+x etc.rc.d.init.d.mythbackend
# cp etc.rc.d.init.d.mythbackend /etc/rc.d/init.d/mythbackend
</verb></tscreen>

<tt>etc.sysconfig.mythbackend</tt> should be copied to
<tt>/etc/sysconfig/</tt>:
<tscreen><verb>
$ cd contrib
$ su
# cp etc.sysconfig.mythbackend /etc/sysconfig/mythbackend
</verb></tscreen>

Edit <tt>/etc/sysconfig/mythbackend</tt> if you want to change the defaults
(the userid that should start mythbackend, location of the logfile and (if
required) the name and location of the mythbackend binary).

Use <bf>chkconfig</bf> to make sure the script is called when
entering runlevels 3, 4 or 5:
<tscreen><verb>
$ su
# chkconfig --level 345 mythbackend on
# exit
$
</verb></tscreen>

<sect3>Log files 
<p>By default, the log file for mythbackend will be written to
<tt>/var/tmp/mythbackend.log</tt>. This has been tested and is known to work
on Mandrake and Red Hat, but many people prefer to place logs under
<tt>/var/log/</tt>.

To do this, create a group called <tt>mythtv</tt> (or anything you prefer)
and add your usual MythTV users to that group. If you changed the user that
starts mythbackend from the default of root you <em>must</em> perform this
step.

Create the directory <tt>/var/log/mythtv</tt> and set its
permissions as follows:
<tscreen><verb>
$ su
# mkdir /var/log/mythtv
# chown root:mythtv /var/log/mythtv
# chmod 0775 /var/log/mythtv
# exit
$ ls -ld /var/log/mythtv
drwxrwxr-x    2 root     mythtv       4096 Apr 28 21:58 /var/log/mythtv/
$
</verb></tscreen>

<sect3>Mandrake 9.x
<p>Mandrake adds one more twist in the form of the <tt>msec</tt> utility,
which runs regularly and (at the default or any higher security level) sets
permissions on many files, including those under <tt>/var/log</tt>.

To tell msec about the MythTV log files and their directory, you need to
edit the <tt>/etc/security/msec/perm.local</tt> file to include the
following:
<tscreen><verb>
# /etc/security/msec/perm.local
# Local overrides to the msec program
#
# Full file path                user.group              permissions
/var/log/mythtv/                root.mythtv             775
/var/log/mythtv/*               root.mythtv             664
</verb></tscreen>

A copy of the above has been included in the contrib/ directory.  You may
add it by typing:
<tscreen><verb>
$ cd contrib
$ su
# cat etc.security.msec.perm.local >> /etc/security/msec/perm.local
# exit
</verb></tscreen>

Finally run the <tt>msec</tt> tool to check and implement your
changes.
<tscreen><verb>
$ su
# msec
# exit
$
</verb></tscreen>

<bf>NOTE</bf>: msec can only <em>reduce</em> the permissions of files, so if
you don't get the results you expect, check that you're not asking
<tt>msec</tt> to add missing permissions to the files or directories you
created.
<sect2>Gentoo
<p>The portage file for MythTV has scripts that will allow you to run
mythbackend at startup.

To run mythbackend as a daemon which starts at boot time:
<tscreen><verb>
# rc-update add mythbackend default
</verb></tscreen>

To stop mythbackend as a daemon:
<tscreen><verb>
# /etc/init.d/mythbackend stop
</verb></tscreen>

To obtain a list of options:
<tscreen><verb>
# /etc/init.d/mythbackend
</verb></tscreen>

<sect1>Advanced Backend Configurations. <label id="advanced_backend_config">
<p>MythTV is flexible in the way that you define multiple backend tuner
configurations.  The only hard-and-fast rule is that the Master Backend
<em>must</em> have a capture device defined, but shouldn't imply that the
capture device in the MBE must be the first capture card defined in the
database.

One example of an advanced configuration is the round-robin scheme.  Rather
than defining all of the cards on the master, you could first go into setup
on the master to define globals such as the general configuration and the
channel lineup but not the host-specific configuration item like the capture
card.  In this example, we will use a 4 tuner configuration, where two
slaves have one card each and the master has two.
<enum>
<item>Add the first capture card on one of the slaves.  Complete the
configuration, connecting the input source to the card.  This will get
cardid #1 in the database.  Exit setup.
<item>Configure the first capture card on the master backend.  This will get
cardid #2 in the database.  Exit setup.
<item>Configure the first capture card on the second slave.  This will be
cardid #3 in the database.  Exit setup.
<item>Configure the second capture card on the master backend.  This will
get cardid #4 in the database.  Exit setup.
</enum>

Using this scheme, the master backend will not use both capture cards until
one of the following happens:
<itemize>
<item>There are four recordings scheduled for the same time
<item>Both slaves are not available
</itemize>

The scheduler in MythTV checks whether an encoder is available; if a slave
backend isn't running, its encoder isn't available, so the scheduler will
look for the next available encoder.  This makes MythTV very flexible; slave
tuners can come and go, and as long as there are enough tuners for what
you'd like to record it doesn't matter which tuner in particular is going to
be used.

Using this round-robin scheme along with a shared storage directory like
NFS and enabling the Master Backend Override setting will allow you to view
content even if the slave backend that recorded a program is not available.

<sect1>Advanced Partition Formatting. <label
id="advancedpartitionformatting">
<p>MythTV creates large files.  The partitions that your distribution sets
up for you may not be optimized for large files.
<sect2>Ext3
<p>With Ext3, your biggest gain is that in case of a crash and reboot you
don't have to wait very long for your partition to be remounted.  With Ext2,
the <bf>fsck</bf> may take a long time to run on multi-gigabyte partitions.

When formatting the partition, the following command line should be better
than the default.  This example assumes that <tt>/dev/hdb1</tt> has already
been created using <bf>fdisk</bf>.
<tscreen><verb>
# mkfs.ext3 -T largefile4 -m 0 /dev/hdb1
</verb></tscreen>

The "-T largefile4" option creates one inode per 4 megabytes.  The "-m 0"
(zero, not "oh") parameter sets the amount of spaced reserved for root to
zero. By default, this is 5%, which on a multi-gigabyte drive is a lot of
reserved space.

You may also modify some aspects of a filesystem such as the reserved block
percentage after it has been created using the <bf>tune2fs</bf> program:
<tscreen><verb>
# tune2fs -m 0 /dev/hdb1
</verb></tscreen>

You can check on your filesystem using the <bf>dumpe2fs</bf> program.  See
the <bf>man</bf> page for details.

<sect1>I'd like to have more flexible disk storage with LVM. 
<!-- Contributed by Martin Smith martin at spamcop.net -->
<p>LVM greatly increases the flexibility you have in managing your storage
than traditional physical partitions. This section will provide some brief
notes on how to use LVM to create storage space for your video files and how
to add additional disk space in the future. There's lots more that can be
done with LVM, so check the LVM HOWTO <url
url="http://tldp.org/HOWTO/lvm-HOWTO/"
name="http://tldp.org/HOWTO/lvm-HOWTO/"> document for details.

Make sure your kernel configuration includes LVM support or that it's
available as a module. Today, most vendors include this by default. You'll
also want to ensure that you have a copy of the LVM utilities; check your
distribution, or get the latest versions from <url
url="http://www.sistina.com/products_lvm.htm"
name="http://www.sistina.com/products_lvm.htm"> and build them manually.

Check that the <bf>vgscan</bf> program is being run at some point during
your boot sequence - most distributions do this by default. Look for a
message during boot up that looks like this:
<tt>vgscan -- reading all physical volumes (this may take a while...)</tt>

LVM uses a few concepts you should be familiar with before starting.
<itemize>
<item>PV (Physical Volume).  The actual partition on the hard drive.
<item>VG (Volume Group).  The aggregation of all the PVs make a VG.
<item>LV (Logical Volume).  Subdivision of the pool of space available in
the VG into individual chunks, like /usr, /var/video, etc.
</itemize>

The following example assumes that you want to create a LVM partition from a
chunk of space in /dev/hda5, using a reiserfs filesystem and mounted on
/var/video. You later decide to extend this filesystem by adding a new disk:
/dev/hdb.

You need to create at least one LVM partition for a physical volume. Use
<bf>fdisk</bf> or your favorite partition editor to set the type to LVM
(0x8e). If you're using an entire disk, create one big partition rather than
using the device itself. e.g. use /dev/hdb1 not /dev/hdb.

<tt># fdisk /dev/hda</tt>
.... create partition 5, save partition table and reboot if you have to

Create the LVM physical volume from the partitions (repeat if you have
multiple partitions to use):
<tscreen><verb>
# pvcreate /dev/hda5
</verb></tscreen>
Create a LVM volume group out of this physical volume called "VGforMyth" that is
allocated in chunks that are a multiple of 64MB
<tscreen><verb>
# vgcreate --name VGforMyth -s 64m /dev/hda5
</verb></tscreen>
Create a logical volume of 20GB called "video" and then create the reiserfs
filesystem and mount it:
<tscreen><verb>
# lvcreate --name video --size 20G VGforMyth
# mkreiserfs /dev/VGforMyth/video
# mount /dev/VGforMyth/video /var/video
</verb></tscreen>
Now create a 5GB volume for mythmusic files if you like:
<tscreen><verb>
# lvcreate --name music --size 5G VGforMyth
# mkreiserfs /dev/VGforMyth/music
# mount /dev/VGforMyth/music /var/music
</verb></tscreen>
Display the volume group status:
<tt># vgdisplay -v</tt>

Now, lets suppose you want to add a 60GB hard disk to the system as hdb and
allocate 50GB of it to video storage.

First, create a single partition /dev/hdb1 covering the whole disk and make
it type 0x8e using your partition editor.

<tt># fdisk /dev/hdb</tt>
.... create partition, set type, save and reboot if it says you have to

Create the new LVM physical volume:

<tt># pvcreate /dev/hdb1</tt>

Add the new physical volume to the volume group:

<tt># vgextend VGforMyth /dev/hdb1</tt>

<bf>NOTE</bf>:  You may get errors at this point stating that there are no
physical volumes available for adding to the LV, even though you know for a
fact that there are.  You may need to specify the physical volume in the 
<tt>/dev/ide/host/bus/target/lun/etc</tt> format.

Once you've completed one of the following two procedures, use <bf>df</bf>
to check that you've got more space.

<sect2>ReiserFS
<p>Make the logical volume used for video bigger:

<tt># lvextend --size +50G /dev/VGforMyth/video</tt>

Unmount, resize and remount the filesystem.  Technically, you don't need to
unmount and remount the ReiserFS. 
<tscreen><verb>
# umount /var/video
# resize_reiserfs /dev/VGforMyth/video
# mount /dev/VGforMyth/video /var/video
</verb></tscreen>

<sect2>ext2 or ext3
<p>LVM comes with a program called <bf>e2fsadm</bf>.

Unmount, resize and remount the filesystem.  The filesystem <em>must</em> be
unmounted during this procedure.
<tscreen><verb>
# umount /var/video
# e2fsadm --size +50G /dev/VGforMyth/video
# mount /dev/VGforMyth/video /var/video
</verb></tscreen>

<sect1>What is this transcoder thing, and how do I use it?
<p>The transcoder re-encodes files from one MythTV format to another.  The
main purpose of the transcoder is to allow users with hardware
encoders (PVR-250) or systems that can only record in RTJpeg due to
performance reasons (multiple capture cards, slow system, etc) to create
MPEG4 streams to save space.

The transcoder can be used in two ways:
<itemize>
<item>Automatically re-encode every file once it has completed recording
<item> After marking commercials, the transcoder can be run manually to
delete the commercials from the file (thus further saving space)
</itemize>
The two methods are independent.  The first is an automatic process that can be
enabled/disabled through the setup program; the second is a manual method which
must be invoked on each recording individually.

The second method can be used on files that have already been transcoded (or
files which were are already in the correct format), so only the frames
immediately following a cut section will be re-encoded, resultiing in a very
minimal loss of quality.

To enable automatic transcoding, do the following:
   start the setup program
   under the host-specific settings:
      set the Transcoder Auto-run checkbox

For either manual or automatic transcoding:
   start mythbackend
   start mythfrontend
   select setup, and the Transcoding recording profile.
      now select either RTJPEG or MPEG4 (selecting any of the hardware
      encoders will result in the transcoder not working).
      set the other parameters as you'd like.  For best performance, you
      should match the audio to the 'Default' profile.  If you plan to
      only use the manual transcoder, you can choose to set the video to
      be the same as the default profile too (as long as it is MPEG4 or
      RTJpeg)

Everything should now be setup properly.  If you elected to use the
Auto-Run feature, the transcoder will automatically launch after each
recording is complete.  The transcoder thread runs at a low priority, so it
should not impact any critical tasks or other recordings.

If you want to manually transcode a program, simply press 'X' while
watching a recording (you should have already finished marking all
commercials).  If you change your mind, hitting 'X' again will stop the
transcoding.

Once the transcode is complete, mythbackend will replace the old file
with the new as soon as it is no longer in use.


</article>
<!-- Revision History
v2.00, 2003-03-14.  Initial release for 0.8.  Added xset command for
screensaver. Added lirc for Mandrake 9.1
v2.01, 2003-03-18.  Fixed some typos.
v2.02, 2003-03-21.  RH8 pre-reqs for MythMusic.  plf for Mandrake liblame. 
Changes throughout for Mandrake 9.1.  Started using "code" to seperate out
special notes for certain distros.  Changed Mandrake instructions for
getting the kernel-source.  More on DPMS / screensaver
v2.03, 2003-03-24.  Added note about ivtv.  Less terse instructions to
create a /mnt/store directory if you don't already have one.
v2.04, 2003-03-27.  Added information on btaudio.  Added information on full
duplex issues as reported by mythbackend.  Added information on -f flag to
mysql.  Added info on mythbackend command-line options.
v2.05, 2003-03-27.  Reformatted the examples in mythmusic a little.  Added
Mandrake 9.1 mythmusic prereq.
v2.06, 2003-03-27.  grammar error.  Added link to Axel Thimm's RPMs. 
Expanded on the command line parameters to mythbackend.
v2.07, 2003-03-31.  more b0rken btaudio.  Added to amixer commands.
v2.08, 2003-04-07.  Updated XMLTV.
v2.09, 2003-04-11.  Add spec for P4 2.4Ghz machine.  Added comment on repeat
= commands for .lircrc file.
v2.10, 2003-04-11.  Fixed typo.  AMD SSE info.  Channel removal information.
v2.11, 2003-04-11.  Updated channel removal.
v2.12, 2003-04-12.  keys.txt.  troubleshooting the remote.
v2.13, 2003-04-15.  Update on PVR-250.
v2.14, 2003-04-16.  Update on lirc hanging issues - Tivo remote can hang
lirc.
v2.15, 2003-04-23.  Specified that configuration is relative to the
mythtv-0.8 directory.  Added urpmi for Mandrake Cooker for XMLTV
prerequisites.  Added gist.com instructions.  Incorporated prerequisite
text from Ray Olszewski [ray@comarre.com] with edits.
v2.16, 2003-04-23.  Additional stuff in the hardware pre-req section.
v2.17, 2003-04-24.  John Crombe's suggestion WRT ld.so.conf.  Another scan
converter.  PVR250 initial docs.
v2.18, 2003-04-25.  Minor edits.  Internal link to PVR250 instructions. 
Added blackbox as a known-good WM.  Added link to email message about
PVR-250 not showing inputs.  Updated mythweather debug (runtime option now),
updated mythvideo settings file.
v2.19, 2003-04-25.  Mythmusic playlist addition.  Mythmusic adjustments
since it's now graphically setup.
v2.20, 2003-04-25.  More CPU stats.  Fixed error in mythvideo path.
v2.21, 2003-04-25.  Grammar error in PVR250 section.  NFS.  Auto-starting
myth.
v2.22, 2003-04-26.  PVR250 ptune.pl command.  Modify the ld.so.conf example. 
More information on saving the mysql database.
v2.23, 2003-04-28.  XMLTV version.  mythbackend startup as a daemon.
Normalized spacing between tscreen tag and text.
v2.24, 2003-04-28.  canada-cable.
v2.25, 2003-04-29.  Additional btaudio card.  Added instructions for Gentoo
mythbackend auto-start.
v2.26, 2003-04-29.  Debugging info for threads.  Get rid of videodev2.h
instructions; it's now in the Myth CVS.  Remove gist.com; they've shutdown. 
v2.27, 2003-05-01.  New website for Mark Cooper's pvr hw database.  Better
debug command for threads.
v2.28, 2003-05-02.  MythWeb update for Mandrake.  mythweb db_open error. 
ivtvfwextract is a perl file.  Added "-v" to mythbackend as daemon example.
v2.29, 2003-05-04.  Updated CVS path.
v2.30, 2003-05-05.  Updated PVR-250 instructions.  
v2.31, 2003-05-06.  Blackbox focus update.
v2.32, 2003-05-09.  Speeling correction.
v2.33, 2003-05-10.  Added xset command to .xinitrc for blackbox.  Added
.blackboxrc example.  Added link to nyvalls.se RPMS for Mandrake.  Added
people to the contributors section.
v2.34, 2003-05-14.  Updated PVR-250 example.  Remove ptune.pl stuff; it's
changing too fast.  Updated gdb troubleshooting section.  Updated "can't CVS
checkout anymore" section.
v2.35, 2003-05-19.  Remove the depmod error advice in the PVR-250 since IVTV has fixed
their Makefile.  Get rid of stuff that is too hard to keep up with, like the
status of the ivtv driver and what it can and can't do.
v2.36, 2003-05-21.  Added instructions on modifying the PVR250 bitrate. 
Added Advanced Backend Configurations.  Fixed consistency of section
headers.  PVR-250 audio troubleshooting.
v2.37, 2003-05-25.  Fixed dangling close tag.  A little more on
troubleshooting with gdb.
v2.38, 2003-06-09.  Fix some more tags.  (WTF is it with the tags lately?)
Update non-US mythtv website and POC.  Add the stuff about DNR for PVR-250. 
Added Advanced Partition formatting section.  Fixed the chkconfig example to
add -levels.
v2.39, 2003-06-09.  Standardized on pre-requisite vs. prerequisite.  Modify
lirc example so that the user knows that only certain kinds of serial
modules should have the link to ttySx.  Altered the PVR-250 bitrate example.
v2.40, 2003-06-09.  Fixed lirc acronym expansion.  sdl vs. SDL in Mandrake
MythMusic.  Updated MythVideo docs.
v2.41, 2003-06-09.  Bumped version numbers to 0.9.
v2.42, 2003-06-09.  Added troubleshooting note on Suse.  Added the mkspecs
->default error.
v2.43, 2003-06-09.  Slight tweak to mkspecs troubleshooting.  Added the
error message you get when QTDIR isn't set.
v2.44, 2003-06-10.  Modify requirements for Gentoo - don't need KDE.
v2.45, 2003-06-10.  QT vs. Qt  Added some mythmusic FAQ-type stuff.
v2.46, 2003-06-11.  Added TV-out information by Ray Olszewski.  Adjusted CVS
references to release.
v2.47, 2003-06-11.  Added note that Canucks shouldn't use a space in the
postal code in setup/XMLTV.  (Suggestion by "Chris Thompson" chris at
hypocrite.org)
v2.48, 2003-06-12.  Removed the note for Canadians since the setup screen
now allows spaces for postal code.
v2.49, 2003-06-12.  Incorporate items that are in the FAQ that aren't in the
HOWTO yet.
v2.50, 2003-06-18.  Updated MythGallery docs to fix itemize tag and added
image rotation keys.  Add updated .fvwmrc example.  Added RH9.0
stuff from Cedar, Matt and Jarod.  Reorg of some sections.  Added "PVR-250"
to the "I'd like to use a hardware MPEG-2 encoder" title.
v2.51, 2003-07-02.  Fixed MDZ's mplayer patch name and MPlayer version.  Bruce
Markey's addition for updating the database.  Bumped version numbers to v0.10.
v2.52, 2003-07-09.  Incorporate Ray Olszewski's modified section 4.  Dennis
Lou's mythgallery doc update.  Updated XMLTV version.  Martin Smith's LVM
contribution.  More detailed instructions on upgrading the database from one
release to another.  Remove the "can't start early" from 10.1.  Put back the
PDF version.
v2.53, 2003-07-13.  Add link to searchable archive right near the top.  Added
"Channels off by one".  Added a little more details about the "error" in the
ivtv make.  Moved/added keys.txt to more prominent positions in the HOWTO. 
Added note that you don't need to transcode .nuv files if they're made by a
PVR-250/350.  Added example for LVM/ext2 and ext3.  Added note to not run
XMLTV 0.5.15 if you're not running CVS.  Add link in first section to single
page and PDF version of docs.
v2.54, 2003-07-21.  Fix grammar in LVM section.  Axel Thimm's updates.
v2.55, 2003-07-29.  Added GeForce MX420 PCI as working.  Don't add multiple
sources to inputs unless there's something actually on them.  Add link to
troubleshooting audio in Alsa section.  Modify lirc section so people don't
get confused about the example vs. _their_ setup.  Add IR keyboard/learning
remote option to lirc section.
v2.56, 2003-08-03.  version 2^8.  ATI All-in-Wonder doesn't work as a capture
device, so quit asking.  Don't use a FAT filesystem and expect things to
magically work when creating a 2GB file.
v2.57, 2003-08-18.  Add link back to CVS instructions from "Downloading and
compiling".  Added additional examples to mythbackend -help
v2.58/2.59, 2003-08-19.  Version bump.  Added example if LVM needs new method of
adding partitions. Gentoo updates from Max Kalika max@gentoo.org.  XMLTV
version update.  Add MythDVD section.  Add MythWeb2 section.
v2.60, 2003-08-19.  MythWeb2 is now the default, but is called MythWeb, so
get rid of the just-added section.  Add instructions for generating
htpasswd.
v2.61, 2003-08-19.  Correct name of program to generate passwords for
apache.
v2.62, 2003-08-20.  Added pointer to conf.php for MythWeb.  Transcoder docs
from mythtv-dev list by Geoffrey Hausheer ou401cru02*sneakemail.com. 
htaccess file has more than just authentication, so don't tell people to
delete it if they want to.
v2.63, 2003-08-20.  Updated and expanded Debian-specific information.
v2.64, 2003-08-21.  MythDVD instructions.  Work in progress.
v2.65, 2003-08-21.  Change "add below" to "above" in PVR section.  Guess
they flip-flopped at some point. Add some advice about mixer levels.  Add
libid3tag to MythMusic section.
v2.66, 2003-08-23.  Move transcoder docs to Misc section.
v2.67, 2003-08-31.  Update XMLTV version.  Jarod Wilson's update.  New
Hauppauge firmware version.
v2.68, 2003-08-31.  Explicit instructions on woody vs. unstable Debian
packages, minor typo fix
v2.69, 2003-09-06.  Incorporate some suggestions from -users about CVS.  Add
pointer to custom distributions.
v2.70, 2003-09-06.  Add a section for Debian-specific build
instructions,and an example of how to build from the source package
v2.71, 2003-09-09.  Get rid of "can't CVS anymore" - it's been switched for
a while now.
v2.72, 2003-09-11.  Got to qmake before make now. Add GDB section title.
v2.73, 2003-09-11.  Make the qmake thing a little more specific.
v2.74, 2003-09-15.  Update the PVR-250 modules.conf.  Add a little more to
PVR-250 troubleshooting.
v2.75, 2003-09-17.  Don't connect line level stuff to the mic input.  Bad
things can happen. Holger.Beetz at debitel.net
-->

<!--
To create documentation, run "make" in the docs/ subdirectory
-->
