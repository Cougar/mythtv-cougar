#############################################################################
# Makefile for building: libfreemheg-0.19.so.0.19.0
# Generated by qmake (1.07a) (Qt 3.3.4) on: Fri Mar 10 11:18:20 2006
# Project:  libfreemheg.pro
# Template: lib
# Command: $(QMAKE) -o Makefile libfreemheg.pro
#############################################################################

####### Compiler, tools and options

CC       = ccache distcc gcc
CXX      = ccache distcc g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -march=pentium4 -Wall -W -g -D_REENTRANT -DPIC -fPIC  -DMMX -Di386 -DUSING_DBOX2 -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 -DPREFIX=\"/usr/local\" -DLIBDIR=\"/usr/local/lib\" -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -march=pentium4 -Wall -W -g -D_REENTRANT -DPIC -fPIC  -DMMX -Di386 -DUSING_DBOX2 -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 -DPREFIX=\"/usr/local\" -DLIBDIR=\"/usr/local/lib\" -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/qt/3/mkspecs/linux-g++ -I. -I/usr/local/include -I/usr/include -I/usr/include -I../libmythtv -I$(QTDIR)/include
LINK     = ccache distcc g++
LFLAGS   = -shared -Wl,-soname,libfreemheg-0.19.so.0
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -lfreetype -lmp3lame -lasound -ljack -lraw1394 -liec61883 -lavc1394 -L/usr/X11R6/lib -L/usr/X11R6/lib -lXinerama -lXv -lX11 -lXext -lXxf86vm -lXrandr -lXvMCW -lXvMC -lGL -lGLU -lqt-mt -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = Actions.h \
		ASN1Codes.h \
		BaseClasses.h \
		Bitmap.h \
		Engine.h \
		Groups.h \
		Ingredients.h \
		ParseBinary.h \
		ParseNode.h \
		ParseText.h \
		Presentable.h \
		Programs.h \
		Root.h \
		Stream.h \
		Text.h \
		Variables.h \
		Visible.h \
		BaseActions.h \
		DynamicLineArt.h \
		TokenGroup.h \
		Link.h \
		Logging.h \
		freemheg.h
SOURCES = Actions.cpp \
		BaseClasses.cpp \
		Bitmap.cpp \
		Engine.cpp \
		Groups.cpp \
		Ingredients.cpp \
		ParseBinary.cpp \
		ParseNode.cpp \
		ParseText.cpp \
		Presentable.cpp \
		Programs.cpp \
		Root.cpp \
		Stream.cpp \
		Text.cpp \
		Variables.cpp \
		Visible.cpp \
		BaseActions.cpp \
		DynamicLineArt.cpp \
		TokenGroup.cpp \
		Link.cpp
OBJECTS = Actions.o \
		BaseClasses.o \
		Bitmap.o \
		Engine.o \
		Groups.o \
		Ingredients.o \
		ParseBinary.o \
		ParseNode.o \
		ParseText.o \
		Presentable.o \
		Programs.o \
		Root.o \
		Stream.o \
		Text.o \
		Variables.o \
		Visible.o \
		BaseActions.o \
		DynamicLineArt.o \
		TokenGroup.o \
		Link.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = ../libmyth/mythconfig.mak \
		../../settings.pro \
		libfreemheg.pro
QMAKE_TARGET = freemheg-0.19
DESTDIR  = 
TARGET   = libfreemheg-0.19.so.0.19.0
TARGETA	= libfreemheg-0.19.a
TARGETD	= libfreemheg-0.19.so.0.19.0
TARGET0	= libfreemheg-0.19.so
TARGET1	= libfreemheg-0.19.so.0
TARGET2	= libfreemheg-0.19.so.0.19

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP)
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS) $(OBJMOC)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: libfreemheg.pro  /usr/qt/3/mkspecs/linux-g++/qmake.conf ../libmyth/mythconfig.mak \
		../../settings.pro
	$(QMAKE) -o Makefile libfreemheg.pro
qmake: 
	@$(QMAKE) -o Makefile libfreemheg.pro

dist: 
	@mkdir -p .tmp/freemheg-0.19 && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/freemheg-0.19/ && ( cd `dirname .tmp/freemheg-0.19` && $(TAR) freemheg-0.19.tar freemheg-0.19 && $(GZIP) freemheg-0.19.tar ) && $(MOVE) `dirname .tmp/freemheg-0.19`/freemheg-0.19.tar.gz . && $(DEL_FILE) -r .tmp/freemheg-0.19

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)


FORCE:

####### Compile

Actions.o: Actions.cpp BaseActions.h \
		Actions.h \
		BaseClasses.h \
		ParseNode.h \
		ASN1Codes.h \
		Ingredients.h \
		Engine.h \
		Variables.h \
		Programs.h \
		Bitmap.h \
		Visible.h \
		Text.h \
		DynamicLineArt.h \
		Link.h \
		TokenGroup.h \
		Stream.h \
		Root.h \
		freemheg.h \
		Groups.h \
		Presentable.h

BaseClasses.o: BaseClasses.cpp BaseClasses.h \
		ParseNode.h \
		Engine.h \
		ASN1Codes.h \
		Logging.h \
		freemheg.h \
		Root.h \
		Ingredients.h \
		Groups.h \
		Visible.h \
		Actions.h \
		Link.h \
		BaseActions.h \
		Presentable.h

Bitmap.o: Bitmap.cpp Bitmap.h \
		Visible.h \
		Presentable.h \
		Ingredients.h \
		Root.h \
		BaseClasses.h \
		ParseNode.h \
		ASN1Codes.h \
		Engine.h \
		Logging.h \
		freemheg.h \
		BaseActions.h \
		Actions.h \
		Groups.h \
		Link.h

Engine.o: Engine.cpp Engine.h \
		ParseNode.h \
		ParseBinary.h \
		ParseText.h \
		Root.h \
		Groups.h \
		ASN1Codes.h \
		Logging.h \
		freemheg.h \
		Ingredients.h \
		BaseClasses.h \
		Visible.h \
		Actions.h \
		Link.h \
		BaseActions.h \
		Presentable.h

Groups.o: Groups.cpp Root.h \
		Groups.h \
		ASN1Codes.h \
		ParseNode.h \
		Ingredients.h \
		Programs.h \
		Variables.h \
		Presentable.h \
		Visible.h \
		Engine.h \
		Text.h \
		Bitmap.h \
		Stream.h \
		DynamicLineArt.h \
		Link.h \
		TokenGroup.h \
		BaseClasses.h \
		BaseActions.h \
		Actions.h \
		freemheg.h

Ingredients.o: Ingredients.cpp Ingredients.h \
		Root.h \
		BaseClasses.h \
		ParseNode.h \
		ASN1Codes.h \
		Actions.h \
		Engine.h \
		BaseActions.h \
		freemheg.h \
		Groups.h \
		Visible.h \
		Link.h \
		Presentable.h

ParseBinary.o: ParseBinary.cpp Engine.h \
		ParseBinary.h \
		ASN1Codes.h \
		ParseNode.h \
		BaseClasses.h \
		Root.h \
		Groups.h \
		Logging.h \
		freemheg.h \
		Ingredients.h \
		Visible.h \
		Actions.h \
		Link.h \
		BaseActions.h \
		Presentable.h

ParseNode.o: ParseNode.cpp ParseNode.h \
		ASN1Codes.h \
		Engine.h \
		Logging.h \
		BaseClasses.h \
		freemheg.h \
		Root.h \
		Ingredients.h \
		Groups.h \
		Visible.h \
		Actions.h \
		Link.h \
		BaseActions.h \
		Presentable.h

ParseText.o: ParseText.cpp ParseText.h \
		ParseNode.h \
		BaseClasses.h \
		ASN1Codes.h \
		Root.h \
		Groups.h \
		Ingredients.h \
		Text.h \
		Engine.h \
		Logging.h \
		BaseActions.h \
		Actions.h \
		Visible.h \
		Presentable.h \
		freemheg.h \
		Link.h

Presentable.o: Presentable.cpp Presentable.h \
		Ingredients.h \
		Root.h \
		BaseClasses.h \
		BaseActions.h \
		Actions.h

Programs.o: Programs.cpp Programs.h \
		Ingredients.h \
		Root.h \
		BaseClasses.h \
		ParseNode.h \
		ASN1Codes.h \
		Engine.h \
		Logging.h \
		freemheg.h \
		BaseActions.h \
		Actions.h \
		Groups.h \
		Visible.h \
		Link.h \
		Presentable.h

Root.o: Root.cpp Root.h \
		ParseNode.h \
		BaseClasses.h \
		Ingredients.h \
		Engine.h \
		Logging.h \
		BaseActions.h \
		Actions.h \
		freemheg.h \
		Groups.h \
		Visible.h \
		Link.h \
		Presentable.h

Stream.o: Stream.cpp Presentable.h \
		Ingredients.h \
		Root.h \
		BaseClasses.h \
		ParseNode.h \
		ASN1Codes.h \
		Engine.h \
		Stream.h \
		freemheg.h \
		BaseActions.h \
		Actions.h \
		Groups.h \
		Visible.h \
		Link.h

Text.o: Text.cpp Text.h \
		Visible.h \
		Presentable.h \
		Ingredients.h \
		Root.h \
		BaseClasses.h \
		ParseNode.h \
		ASN1Codes.h \
		Engine.h \
		Logging.h \
		freemheg.h \
		BaseActions.h \
		Actions.h \
		Groups.h \
		Link.h

Variables.o: Variables.cpp Variables.h \
		Ingredients.h \
		Root.h \
		BaseClasses.h \
		ParseNode.h \
		ASN1Codes.h \
		Engine.h \
		Logging.h \
		BaseActions.h \
		Actions.h \
		freemheg.h \
		Groups.h \
		Visible.h \
		Link.h \
		Presentable.h

Visible.o: Visible.cpp Visible.h \
		Presentable.h \
		Ingredients.h \
		Root.h \
		BaseClasses.h \
		ParseNode.h \
		ASN1Codes.h \
		Engine.h \
		Logging.h \
		freemheg.h \
		BaseActions.h \
		Actions.h \
		Groups.h \
		Link.h

BaseActions.o: BaseActions.cpp BaseActions.h \
		BaseClasses.h \
		ParseNode.h \
		Ingredients.h \
		Engine.h \
		Root.h \
		Actions.h \
		freemheg.h \
		Groups.h \
		Visible.h \
		Link.h \
		Presentable.h

DynamicLineArt.o: DynamicLineArt.cpp DynamicLineArt.h \
		Visible.h \
		Presentable.h \
		Ingredients.h \
		Root.h \
		BaseClasses.h \
		ParseNode.h \
		ASN1Codes.h \
		Engine.h \
		freemheg.h \
		BaseActions.h \
		Actions.h \
		Groups.h \
		Link.h

TokenGroup.o: TokenGroup.cpp TokenGroup.h \
		Presentable.h \
		Ingredients.h \
		Root.h \
		BaseClasses.h \
		ParseNode.h \
		ASN1Codes.h \
		Engine.h \
		BaseActions.h \
		Actions.h \
		freemheg.h \
		Groups.h \
		Visible.h \
		Link.h

Link.o: Link.cpp Link.h \
		Ingredients.h \
		Root.h \
		BaseClasses.h \
		ParseNode.h \
		ASN1Codes.h \
		Actions.h \
		Engine.h \
		Logging.h \
		BaseActions.h \
		freemheg.h \
		Groups.h \
		Visible.h \
		Presentable.h

####### Install

install_target: all 
	@$(CHK_DIR_EXISTS) "$(INSTALL_ROOT)/usr/local/lib/" || $(MKDIR) "$(INSTALL_ROOT)/usr/local/lib/"
	-$(INSTALL_FILE) "$(TARGET)" "$(INSTALL_ROOT)/usr/local/lib/$(TARGET)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/local/lib/$(TARGET0)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/local/lib/$(TARGET1)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/local/lib/$(TARGET2)"

uninstall_target: 
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/lib/$(TARGET)"
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/lib/$(TARGET0)"
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/lib/$(TARGET1)"
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/lib/$(TARGET2)"
	-$(DEL_DIR) "$(INSTALL_ROOT)/usr/local/lib/"


install: install_target  

uninstall: uninstall_target  

